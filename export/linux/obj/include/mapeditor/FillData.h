// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_mapeditor_FillData
#define INCLUDED_mapeditor_FillData

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_f188b45f4628fcd3_36_new)
HX_DECLARE_CLASS1(mapeditor,FillData)

namespace mapeditor{


class HXCPP_CLASS_ATTRIBUTES FillData_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef FillData_obj OBJ_;
		FillData_obj();

	public:
		enum { _hx_ClassId = 0x45b18e12 };

		void __construct(int x1,int x2,int y,int dy);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="mapeditor.FillData")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"mapeditor.FillData"); }

		inline static ::hx::ObjectPtr< FillData_obj > __new(int x1,int x2,int y,int dy) {
			::hx::ObjectPtr< FillData_obj > __this = new FillData_obj();
			__this->__construct(x1,x2,y,dy);
			return __this;
		}

		inline static ::hx::ObjectPtr< FillData_obj > __alloc(::hx::Ctx *_hx_ctx,int x1,int x2,int y,int dy) {
			FillData_obj *__this = (FillData_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(FillData_obj), false, "mapeditor.FillData"));
			*(void **)__this = FillData_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_f188b45f4628fcd3_36_new)
HXDLIN(  36)		( ( ::mapeditor::FillData)(__this) )->x1 = x1;
HXDLIN(  36)		( ( ::mapeditor::FillData)(__this) )->x2 = x2;
HXDLIN(  36)		( ( ::mapeditor::FillData)(__this) )->y = y;
HXDLIN(  36)		( ( ::mapeditor::FillData)(__this) )->dy = dy;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~FillData_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("FillData",6d,0a,27,3d); }

		int x1;
		int x2;
		int y;
		int dy;
};

} // end namespace mapeditor

#endif /* INCLUDED_mapeditor_FillData */ 
