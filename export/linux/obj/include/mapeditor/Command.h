// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_mapeditor_Command
#define INCLUDED_mapeditor_Command

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_0470b53a5b2b0c85_3_new)
HX_DECLARE_CLASS1(mapeditor,Command)

namespace mapeditor{


class HXCPP_CLASS_ATTRIBUTES Command_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Command_obj OBJ_;
		Command_obj();

	public:
		enum { _hx_ClassId = 0x20dd1126 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="mapeditor.Command")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"mapeditor.Command"); }

		inline static ::hx::ObjectPtr< Command_obj > __new() {
			::hx::ObjectPtr< Command_obj > __this = new Command_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Command_obj > __alloc(::hx::Ctx *_hx_ctx) {
			Command_obj *__this = (Command_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Command_obj), false, "mapeditor.Command"));
			*(void **)__this = Command_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_0470b53a5b2b0c85_3_new)
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Command_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Command",2b,99,be,4e); }

		virtual void execute();
		::Dynamic execute_dyn();

		virtual void unexecute();
		::Dynamic unexecute_dyn();

};

} // end namespace mapeditor

#endif /* INCLUDED_mapeditor_Command */ 
