// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_mapeditor_IntPoint
#define INCLUDED_mapeditor_IntPoint

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_e60f044f50844b77_4_new)
HX_DECLARE_CLASS1(mapeditor,IntPoint)

namespace mapeditor{


class HXCPP_CLASS_ATTRIBUTES IntPoint_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef IntPoint_obj OBJ_;
		IntPoint_obj();

	public:
		enum { _hx_ClassId = 0x42b4078a };

		void __construct(int x,int y);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="mapeditor.IntPoint")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"mapeditor.IntPoint"); }

		inline static ::hx::ObjectPtr< IntPoint_obj > __new(int x,int y) {
			::hx::ObjectPtr< IntPoint_obj > __this = new IntPoint_obj();
			__this->__construct(x,y);
			return __this;
		}

		inline static ::hx::ObjectPtr< IntPoint_obj > __alloc(::hx::Ctx *_hx_ctx,int x,int y) {
			IntPoint_obj *__this = (IntPoint_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(IntPoint_obj), false, "mapeditor.IntPoint"));
			*(void **)__this = IntPoint_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_e60f044f50844b77_4_new)
HXLINE(   6)		( ( ::mapeditor::IntPoint)(__this) )->y = 0;
HXLINE(   5)		( ( ::mapeditor::IntPoint)(__this) )->x = 0;
HXLINE(   9)		( ( ::mapeditor::IntPoint)(__this) )->x = x;
HXLINE(  10)		( ( ::mapeditor::IntPoint)(__this) )->y = y;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~IntPoint_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("IntPoint",01,91,be,e8); }

		int x;
		int y;
};

} // end namespace mapeditor

#endif /* INCLUDED_mapeditor_IntPoint */ 
