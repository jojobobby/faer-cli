// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_mapeditor_Tile
#define INCLUDED_mapeditor_Tile

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_acb18d22a29caa16_49_new)
HX_DECLARE_CLASS1(mapeditor,Tile)

namespace mapeditor{


class HXCPP_CLASS_ATTRIBUTES Tile_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Tile_obj OBJ_;
		Tile_obj();

	public:
		enum { _hx_ClassId = 0x5db93557 };

		void __construct(unsigned short tileType,unsigned short objType,unsigned char regionType);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="mapeditor.Tile")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"mapeditor.Tile"); }

		inline static ::hx::ObjectPtr< Tile_obj > __new(unsigned short tileType,unsigned short objType,unsigned char regionType) {
			::hx::ObjectPtr< Tile_obj > __this = new Tile_obj();
			__this->__construct(tileType,objType,regionType);
			return __this;
		}

		inline static ::hx::ObjectPtr< Tile_obj > __alloc(::hx::Ctx *_hx_ctx,unsigned short tileType,unsigned short objType,unsigned char regionType) {
			Tile_obj *__this = (Tile_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Tile_obj), false, "mapeditor.Tile"));
			*(void **)__this = Tile_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_acb18d22a29caa16_49_new)
HXLINE(  50)		( ( ::mapeditor::Tile)(__this) )->tileType = tileType;
HXLINE(  51)		( ( ::mapeditor::Tile)(__this) )->objType = objType;
HXLINE(  52)		( ( ::mapeditor::Tile)(__this) )->regionType = regionType;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Tile_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Tile",4e,f7,d5,37); }

		unsigned short tileType;
		unsigned short objType;
		unsigned char regionType;
};

} // end namespace mapeditor

#endif /* INCLUDED_mapeditor_Tile */ 
