// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_mapeditor_CommandEvent
#define INCLUDED_mapeditor_CommandEvent

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
HX_DECLARE_CLASS1(mapeditor,CommandEvent)
HX_DECLARE_CLASS2(openfl,events,Event)

namespace mapeditor{


class HXCPP_CLASS_ATTRIBUTES CommandEvent_obj : public  ::openfl::events::Event_obj
{
	public:
		typedef  ::openfl::events::Event_obj super;
		typedef CommandEvent_obj OBJ_;
		CommandEvent_obj();

	public:
		enum { _hx_ClassId = 0x77cf71f8 };

		void __construct(::String type);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="mapeditor.CommandEvent")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"mapeditor.CommandEvent"); }
		static ::hx::ObjectPtr< CommandEvent_obj > __new(::String type);
		static ::hx::ObjectPtr< CommandEvent_obj > __alloc(::hx::Ctx *_hx_ctx,::String type);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~CommandEvent_obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("CommandEvent",ef,82,01,55); }

};

} // end namespace mapeditor

#endif /* INCLUDED_mapeditor_CommandEvent */ 
