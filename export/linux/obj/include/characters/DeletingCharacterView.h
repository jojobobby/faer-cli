// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_characters_DeletingCharacterView
#define INCLUDED_characters_DeletingCharacterView

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_ui_dialogs_Dialog
#include <ui/dialogs/Dialog.h>
#endif
HX_DECLARE_CLASS1(characters,DeletingCharacterView)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS2(ui,dialogs,Dialog)

namespace characters{


class HXCPP_CLASS_ATTRIBUTES DeletingCharacterView_obj : public  ::ui::dialogs::Dialog_obj
{
	public:
		typedef  ::ui::dialogs::Dialog_obj super;
		typedef DeletingCharacterView_obj OBJ_;
		DeletingCharacterView_obj();

	public:
		enum { _hx_ClassId = 0x2522465c };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="characters.DeletingCharacterView")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"characters.DeletingCharacterView"); }
		static ::hx::ObjectPtr< DeletingCharacterView_obj > __new();
		static ::hx::ObjectPtr< DeletingCharacterView_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~DeletingCharacterView_obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("DeletingCharacterView",46,3f,71,ea); }

};

} // end namespace characters

#endif /* INCLUDED_characters_DeletingCharacterView */ 
