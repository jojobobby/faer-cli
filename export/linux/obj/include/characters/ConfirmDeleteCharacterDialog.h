// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_characters_ConfirmDeleteCharacterDialog
#define INCLUDED_characters_ConfirmDeleteCharacterDialog

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
HX_DECLARE_CLASS1(characters,ConfirmDeleteCharacterDialog)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,Event)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)

namespace characters{


class HXCPP_CLASS_ATTRIBUTES ConfirmDeleteCharacterDialog_obj : public  ::openfl::display::Sprite_obj
{
	public:
		typedef  ::openfl::display::Sprite_obj super;
		typedef ConfirmDeleteCharacterDialog_obj OBJ_;
		ConfirmDeleteCharacterDialog_obj();

	public:
		enum { _hx_ClassId = 0x7a5bd010 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="characters.ConfirmDeleteCharacterDialog")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"characters.ConfirmDeleteCharacterDialog"); }
		static ::hx::ObjectPtr< ConfirmDeleteCharacterDialog_obj > __new();
		static ::hx::ObjectPtr< ConfirmDeleteCharacterDialog_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ConfirmDeleteCharacterDialog_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ConfirmDeleteCharacterDialog",66,28,78,41); }

		void onAdded( ::openfl::events::Event _);
		::Dynamic onAdded_dyn();

		void setText(::String name,::String displayId);
		::Dynamic setText_dyn();

		void onCancel( ::openfl::events::Event _);
		::Dynamic onCancel_dyn();

		void onDelete( ::openfl::events::Event _);
		::Dynamic onDelete_dyn();

};

} // end namespace characters

#endif /* INCLUDED_characters_ConfirmDeleteCharacterDialog */ 
