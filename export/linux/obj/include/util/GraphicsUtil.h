// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_util_GraphicsUtil
#define INCLUDED_util_GraphicsUtil

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(openfl,display,GraphicsEndFill)
HX_DECLARE_CLASS2(openfl,display,GraphicsPath)
HX_DECLARE_CLASS2(openfl,display,GraphicsStroke)
HX_DECLARE_CLASS2(openfl,display,IGraphicsData)
HX_DECLARE_CLASS2(openfl,display,IGraphicsFill)
HX_DECLARE_CLASS2(openfl,display,IGraphicsPath)
HX_DECLARE_CLASS2(openfl,display,IGraphicsStroke)
HX_DECLARE_CLASS1(util,GraphicsUtil)

namespace util{


class HXCPP_CLASS_ATTRIBUTES GraphicsUtil_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef GraphicsUtil_obj OBJ_;
		GraphicsUtil_obj();

	public:
		enum { _hx_ClassId = 0x075e61f3 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="util.GraphicsUtil")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"util.GraphicsUtil"); }

		inline static ::hx::ObjectPtr< GraphicsUtil_obj > __new() {
			::hx::ObjectPtr< GraphicsUtil_obj > __this = new GraphicsUtil_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< GraphicsUtil_obj > __alloc(::hx::Ctx *_hx_ctx) {
			GraphicsUtil_obj *__this = (GraphicsUtil_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(GraphicsUtil_obj), false, "util.GraphicsUtil"));
			*(void **)__this = GraphicsUtil_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~GraphicsUtil_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("GraphicsUtil",8d,8a,b5,14); }

		static void __boot();
		static  ::openfl::display::GraphicsEndFill END_FILL;
		static  ::openfl::display::GraphicsStroke END_STROKE;
		static ::Array< int > ALL_CUTS;
		static void clearPath( ::openfl::display::GraphicsPath graphicsPath);
		static ::Dynamic clearPath_dyn();

		static void drawRect(int x,int y,int width,int height, ::openfl::display::GraphicsPath path);
		static ::Dynamic drawRect_dyn();

		static void drawCutEdgeRect(int x,int y,int width,int height,int cutLen,::Array< int > cuts, ::openfl::display::GraphicsPath path);
		static ::Dynamic drawCutEdgeRect_dyn();

		static void drawDiamond(Float x,Float y,Float radius, ::openfl::display::GraphicsPath path);
		static ::Dynamic drawDiamond_dyn();

};

} // end namespace util

#endif /* INCLUDED_util_GraphicsUtil */ 
