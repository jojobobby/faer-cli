// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_util_Settings
#define INCLUDED_util_Settings

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(util,Settings)

namespace util{


class HXCPP_CLASS_ATTRIBUTES Settings_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Settings_obj OBJ_;
		Settings_obj();

	public:
		enum { _hx_ClassId = 0x01eef631 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="util.Settings")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"util.Settings"); }

		inline static ::hx::ObjectPtr< Settings_obj > __new() {
			::hx::ObjectPtr< Settings_obj > __this = new Settings_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Settings_obj > __alloc(::hx::Ctx *_hx_ctx) {
			Settings_obj *__this = (Settings_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Settings_obj), false, "util.Settings"));
			*(void **)__this = Settings_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Settings_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Settings",03,39,ef,64); }

		static void __boot();
		static unsigned char moveLeft;
		static unsigned char moveRight;
		static unsigned char moveUp;
		static unsigned char moveDown;
		static unsigned char rotateLeft;
		static unsigned char rotateRight;
		static unsigned char shoot;
		static unsigned char useAbility;
		static unsigned char interact;
		static unsigned char inv1;
		static unsigned char inv2;
		static unsigned char inv3;
		static unsigned char inv4;
		static unsigned char inv5;
		static unsigned char inv6;
		static unsigned char inv7;
		static unsigned char inv8;
		static unsigned char goToHub;
		static unsigned char chatUp;
		static unsigned char chatDown;
		static unsigned char resetCamera;
		static unsigned char perfStats;
		static unsigned char options;
		static unsigned char toggleCentering;
		static unsigned char chat;
		static unsigned char chatCmd;
		static unsigned char respond;
		static unsigned char guildChat;
		static unsigned char healthVial;
		static unsigned char magicVial;
		static unsigned char switchTabs;
		static unsigned char walk;
		static bool playMusic;
		static bool playSfx;
		static bool playWepSfx;
		static bool centerCamera;
		static bool textBubbles;
		static ::String selectedServer;
		static float cameraAngle;
		static signed char selectedCursor;
		static unsigned char glowType;
		static ::Array< ::String > messagesSent;
		static void load();
		static ::Dynamic load_dyn();

		static void save();
		static ::Dynamic save_dyn();

		static void setDefaults();
		static ::Dynamic setDefaults_dyn();

};

} // end namespace util

#endif /* INCLUDED_util_Settings */ 
