// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_util_ConditionEffect
#define INCLUDED_util_ConditionEffect

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_32983b5d7b00c369_11_new)
HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,StringMap)
HX_DECLARE_CLASS1(util,ConditionEffect)
HX_DECLARE_CLASS1(util,Rect)

namespace util{


class HXCPP_CLASS_ATTRIBUTES ConditionEffect_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef ConditionEffect_obj OBJ_;
		ConditionEffect_obj();

	public:
		enum { _hx_ClassId = 0x0fa726aa };

		void __construct(::String name);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="util.ConditionEffect")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"util.ConditionEffect"); }

		inline static ::hx::ObjectPtr< ConditionEffect_obj > __new(::String name) {
			::hx::ObjectPtr< ConditionEffect_obj > __this = new ConditionEffect_obj();
			__this->__construct(name);
			return __this;
		}

		inline static ::hx::ObjectPtr< ConditionEffect_obj > __alloc(::hx::Ctx *_hx_ctx,::String name) {
			ConditionEffect_obj *__this = (ConditionEffect_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ConditionEffect_obj), true, "util.ConditionEffect"));
			*(void **)__this = ConditionEffect_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_32983b5d7b00c369_11_new)
HXLINE(  61)		( ( ::util::ConditionEffect)(__this) )->name = HX_("",00,00,00,00);
HXLINE(  93)		( ( ::util::ConditionEffect)(__this) )->name = name;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ConditionEffect_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ConditionEffect",6c,66,cb,d0); }

		static void __boot();
		static ::Array< ::Dynamic> effects;
		static ::Array< ::Dynamic> effectRects;
		static  ::haxe::ds::StringMap conditionEffectFromName;
		static void initRects();
		static ::Dynamic initRects_dyn();

		static  ::Dynamic getConditionEffectFromName(::String name);
		static ::Dynamic getConditionEffectFromName_dyn();

		::String name;
};

} // end namespace util

#endif /* INCLUDED_util_ConditionEffect */ 
