// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_account_Account
#define INCLUDED_account_Account

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(account,Account)

namespace account{


class HXCPP_CLASS_ATTRIBUTES Account_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Account_obj OBJ_;
		Account_obj();

	public:
		enum { _hx_ClassId = 0x30860240 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="account.Account")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"account.Account"); }

		inline static ::hx::ObjectPtr< Account_obj > __new() {
			::hx::ObjectPtr< Account_obj > __this = new Account_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Account_obj > __alloc(::hx::Ctx *_hx_ctx) {
			Account_obj *__this = (Account_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Account_obj), false, "account.Account"));
			*(void **)__this = Account_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Account_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Account",8d,24,ab,6e); }

		static void __boot();
		static ::String userName;
		static ::String email;
		static ::String password;
		static void updateUser(::String newName,::String newEmail,::String newPassword);
		static ::Dynamic updateUser_dyn();

		static void clear();
		static ::Dynamic clear_dyn();

};

} // end namespace account

#endif /* INCLUDED_account_Account */ 
