// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_account_ChangePasswordData
#define INCLUDED_account_ChangePasswordData

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_f89c1b53f34b5008_3_new)
HX_DECLARE_CLASS1(account,ChangePasswordData)

namespace account{


class HXCPP_CLASS_ATTRIBUTES ChangePasswordData_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef ChangePasswordData_obj OBJ_;
		ChangePasswordData_obj();

	public:
		enum { _hx_ClassId = 0x446121c2 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="account.ChangePasswordData")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"account.ChangePasswordData"); }

		inline static ::hx::ObjectPtr< ChangePasswordData_obj > __new() {
			::hx::ObjectPtr< ChangePasswordData_obj > __this = new ChangePasswordData_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< ChangePasswordData_obj > __alloc(::hx::Ctx *_hx_ctx) {
			ChangePasswordData_obj *__this = (ChangePasswordData_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ChangePasswordData_obj), true, "account.ChangePasswordData"));
			*(void **)__this = ChangePasswordData_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_f89c1b53f34b5008_3_new)
HXLINE(   5)		( ( ::account::ChangePasswordData)(__this) )->newPassword = HX_("",00,00,00,00);
HXLINE(   4)		( ( ::account::ChangePasswordData)(__this) )->currentPassword = HX_("",00,00,00,00);
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ChangePasswordData_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ChangePasswordData",95,38,7f,d1); }

		::String currentPassword;
		::String newPassword;
};

} // end namespace account

#endif /* INCLUDED_account_ChangePasswordData */ 
