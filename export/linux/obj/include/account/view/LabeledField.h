// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_account_view_LabeledField
#define INCLUDED_account_view_LabeledField

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_account_view_FormField
#include <account/view/FormField.h>
#endif
HX_DECLARE_CLASS2(account,view,FormField)
HX_DECLARE_CLASS2(account,view,LabeledField)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS2(openfl,text,TextField)
HX_DECLARE_CLASS1(ui,SimpleText)

namespace account{
namespace view{


class HXCPP_CLASS_ATTRIBUTES LabeledField_obj : public  ::account::view::FormField_obj
{
	public:
		typedef  ::account::view::FormField_obj super;
		typedef LabeledField_obj OBJ_;
		LabeledField_obj();

	public:
		enum { _hx_ClassId = 0x0b4d28ed };

		void __construct(::String name,bool isPassword,::hx::Null< int >  __o_w,::hx::Null< int >  __o_h);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="account.view.LabeledField")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"account.view.LabeledField"); }
		static ::hx::ObjectPtr< LabeledField_obj > __new(::String name,bool isPassword,::hx::Null< int >  __o_w,::hx::Null< int >  __o_h);
		static ::hx::ObjectPtr< LabeledField_obj > __alloc(::hx::Ctx *_hx_ctx,::String name,bool isPassword,::hx::Null< int >  __o_w,::hx::Null< int >  __o_h);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~LabeledField_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("LabeledField",87,98,8c,47); }

		 ::ui::SimpleText nameText;
		 ::ui::SimpleText inputText;
		bool isHighlighted;
		int getHeight();
		::Dynamic getHeight_dyn();

		::String text();
		::Dynamic text_dyn();

		void setErrorHighlight(bool hasError);
		::Dynamic setErrorHighlight_dyn();

};

} // end namespace account
} // end namespace view

#endif /* INCLUDED_account_view_LabeledField */ 
