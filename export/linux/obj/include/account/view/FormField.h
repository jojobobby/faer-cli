// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_account_view_FormField
#define INCLUDED_account_view_FormField

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
HX_DECLARE_CLASS2(account,view,FormField)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS2(openfl,text,TextField)
HX_DECLARE_CLASS1(ui,SimpleText)

namespace account{
namespace view{


class HXCPP_CLASS_ATTRIBUTES FormField_obj : public  ::openfl::display::Sprite_obj
{
	public:
		typedef  ::openfl::display::Sprite_obj super;
		typedef FormField_obj OBJ_;
		FormField_obj();

	public:
		enum { _hx_ClassId = 0x18964090 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="account.view.FormField")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"account.view.FormField"); }
		static ::hx::ObjectPtr< FormField_obj > __new();
		static ::hx::ObjectPtr< FormField_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~FormField_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("FormField",b6,6c,18,28); }

		void drawSimpleTextBackground( ::ui::SimpleText simpleText,int hPadding,int vPadding,bool hasError);
		::Dynamic drawSimpleTextBackground_dyn();

};

} // end namespace account
} // end namespace view

#endif /* INCLUDED_account_view_FormField */ 
