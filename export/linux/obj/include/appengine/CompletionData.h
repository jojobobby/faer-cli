// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_appengine_CompletionData
#define INCLUDED_appengine_CompletionData

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_e1b32b9a4387dfd8_9_new)
HX_DECLARE_CLASS1(appengine,CompletionData)

namespace appengine{


class HXCPP_CLASS_ATTRIBUTES CompletionData_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef CompletionData_obj OBJ_;
		CompletionData_obj();

	public:
		enum { _hx_ClassId = 0x6c0b54e1 };

		void __construct(bool success,::String result);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="appengine.CompletionData")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"appengine.CompletionData"); }

		inline static ::hx::ObjectPtr< CompletionData_obj > __new(bool success,::String result) {
			::hx::ObjectPtr< CompletionData_obj > __this = new CompletionData_obj();
			__this->__construct(success,result);
			return __this;
		}

		inline static ::hx::ObjectPtr< CompletionData_obj > __alloc(::hx::Ctx *_hx_ctx,bool success,::String result) {
			CompletionData_obj *__this = (CompletionData_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(CompletionData_obj), true, "appengine.CompletionData"));
			*(void **)__this = CompletionData_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_e1b32b9a4387dfd8_9_new)
HXDLIN(   9)		( ( ::appengine::CompletionData)(__this) )->success = success;
HXDLIN(   9)		( ( ::appengine::CompletionData)(__this) )->result = result;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~CompletionData_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("CompletionData",86,9f,63,c8); }

		bool success;
		::String result;
};

} // end namespace appengine

#endif /* INCLUDED_appengine_CompletionData */ 
