// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_appengine_SavedCharactersList
#define INCLUDED_appengine_SavedCharactersList

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
HX_DECLARE_CLASS0(Xml)
HX_DECLARE_CLASS1(appengine,SavedCharacter)
HX_DECLARE_CLASS1(appengine,SavedCharactersList)
HX_DECLARE_CLASS2(openfl,events,Event)
HX_DECLARE_CLASS1(servers,LatLong)

namespace appengine{


class HXCPP_CLASS_ATTRIBUTES SavedCharactersList_obj : public  ::openfl::events::Event_obj
{
	public:
		typedef  ::openfl::events::Event_obj super;
		typedef SavedCharactersList_obj OBJ_;
		SavedCharactersList_obj();

	public:
		enum { _hx_ClassId = 0x3e4d32ec };

		void __construct( ::Xml data);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="appengine.SavedCharactersList")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"appengine.SavedCharactersList"); }
		static ::hx::ObjectPtr< SavedCharactersList_obj > __new( ::Xml data);
		static ::hx::ObjectPtr< SavedCharactersList_obj > __alloc(::hx::Ctx *_hx_ctx, ::Xml data);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~SavedCharactersList_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("SavedCharactersList",ef,52,a3,16); }

		static void __boot();
		static  ::servers::LatLong DEFAULT_LATLONG;
		int accountId;
		int nextCharId;
		int maxNumChars;
		int numChars;
		::Array< ::Dynamic> savedChars;
		int gems;
		int gold;
		int crowns;
		int nextCharSlotPrice;
		int nextCharSlotCurrency;
		::String guildName;
		int guildRank;
		::String name;
		bool isAdmin;
		 ::servers::LatLong myPos;
		 ::Xml charsXML;
		virtual ::String toString();

		 ::appengine::SavedCharacter getCharById(int id);
		::Dynamic getCharById_dyn();

		int availableCharSlots();
		::Dynamic availableCharSlots_dyn();

		bool hasAvailableCharSlot();
		::Dynamic hasAvailableCharSlot_dyn();

		void parseUserData( ::Xml accountXML);
		::Dynamic parseUserData_dyn();

		void parseGuildData( ::Xml accountXML);
		::Dynamic parseGuildData_dyn();

		void parseCharacterData();
		::Dynamic parseCharacterData_dyn();

		void parseGeoPositioningData();
		::Dynamic parseGeoPositioningData_dyn();

};

} // end namespace appengine

#endif /* INCLUDED_appengine_SavedCharactersList */ 
