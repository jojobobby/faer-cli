// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_ui_TextBoxLine
#define INCLUDED_ui_TextBoxLine

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_ec3a3b4dfdd2ae02_4_new)
HX_DECLARE_CLASS1(ui,TextBoxLine)

namespace ui{


class HXCPP_CLASS_ATTRIBUTES TextBoxLine_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef TextBoxLine_obj OBJ_;
		TextBoxLine_obj();

	public:
		enum { _hx_ClassId = 0x2474f436 };

		void __construct(int time,::String name,::String __o_text,::String __o_recipient,::hx::Null< bool >  __o_toMe,::hx::Null< unsigned int >  __o_nameColor,::hx::Null< unsigned int >  __o_textColor);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="ui.TextBoxLine")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"ui.TextBoxLine"); }

		inline static ::hx::ObjectPtr< TextBoxLine_obj > __new(int time,::String name,::String __o_text,::String __o_recipient,::hx::Null< bool >  __o_toMe,::hx::Null< unsigned int >  __o_nameColor,::hx::Null< unsigned int >  __o_textColor) {
			::hx::ObjectPtr< TextBoxLine_obj > __this = new TextBoxLine_obj();
			__this->__construct(time,name,__o_text,__o_recipient,__o_toMe,__o_nameColor,__o_textColor);
			return __this;
		}

		inline static ::hx::ObjectPtr< TextBoxLine_obj > __alloc(::hx::Ctx *_hx_ctx,int time,::String name,::String __o_text,::String __o_recipient,::hx::Null< bool >  __o_toMe,::hx::Null< unsigned int >  __o_nameColor,::hx::Null< unsigned int >  __o_textColor) {
			TextBoxLine_obj *__this = (TextBoxLine_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(TextBoxLine_obj), true, "ui.TextBoxLine"));
			*(void **)__this = TextBoxLine_obj::_hx_vtable;
{
            		::String text = __o_text;
            		if (::hx::IsNull(__o_text)) text = HX_("",00,00,00,00);
            		::String recipient = __o_recipient;
            		if (::hx::IsNull(__o_recipient)) recipient = HX_("",00,00,00,00);
            		bool toMe = __o_toMe.Default(false);
            		unsigned int nameColor = __o_nameColor.Default(16777215);
            		unsigned int textColor = __o_textColor.Default(16777215);
            	HX_STACKFRAME(&_hx_pos_ec3a3b4dfdd2ae02_4_new)
HXLINE(  11)		( ( ::ui::TextBoxLine)(__this) )->textColor = ( (unsigned int)(16777215) );
HXLINE(  10)		( ( ::ui::TextBoxLine)(__this) )->nameColor = ( (unsigned int)(16777215) );
HXLINE(   9)		( ( ::ui::TextBoxLine)(__this) )->text = HX_("",00,00,00,00);
HXLINE(   8)		( ( ::ui::TextBoxLine)(__this) )->toMe = false;
HXLINE(   7)		( ( ::ui::TextBoxLine)(__this) )->recipient = HX_("",00,00,00,00);
HXLINE(   6)		( ( ::ui::TextBoxLine)(__this) )->name = HX_("",00,00,00,00);
HXLINE(   5)		( ( ::ui::TextBoxLine)(__this) )->time = 0;
HXLINE(  15)		( ( ::ui::TextBoxLine)(__this) )->time = time;
HXLINE(  16)		( ( ::ui::TextBoxLine)(__this) )->name = name;
HXLINE(  17)		( ( ::ui::TextBoxLine)(__this) )->recipient = recipient;
HXLINE(  18)		( ( ::ui::TextBoxLine)(__this) )->toMe = toMe;
HXLINE(  19)		( ( ::ui::TextBoxLine)(__this) )->text = text;
HXLINE(  20)		( ( ::ui::TextBoxLine)(__this) )->nameColor = nameColor;
HXLINE(  21)		( ( ::ui::TextBoxLine)(__this) )->textColor = textColor;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~TextBoxLine_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("TextBoxLine",52,f6,28,57); }

		int time;
		::String name;
		::String recipient;
		bool toMe;
		::String text;
		unsigned int nameColor;
		unsigned int textColor;
};

} // end namespace ui

#endif /* INCLUDED_ui_TextBoxLine */ 
