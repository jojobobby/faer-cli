// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_ui_options_ChoiceBox
#define INCLUDED_ui_options_ChoiceBox

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
HX_DECLARE_CLASS2(openfl,_Vector,IVector)
HX_DECLARE_CLASS2(openfl,_Vector,ObjectVector)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,GraphicsPath)
HX_DECLARE_CLASS2(openfl,display,GraphicsSolidFill)
HX_DECLARE_CLASS2(openfl,display,GraphicsStroke)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,IGraphicsData)
HX_DECLARE_CLASS2(openfl,display,IGraphicsFill)
HX_DECLARE_CLASS2(openfl,display,IGraphicsPath)
HX_DECLARE_CLASS2(openfl,display,IGraphicsStroke)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,Event)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS2(openfl,events,MouseEvent)
HX_DECLARE_CLASS2(openfl,text,TextField)
HX_DECLARE_CLASS1(ui,SimpleText)
HX_DECLARE_CLASS2(ui,options,ChoiceBox)

namespace ui{
namespace options{


class HXCPP_CLASS_ATTRIBUTES ChoiceBox_obj : public  ::openfl::display::Sprite_obj
{
	public:
		typedef  ::openfl::display::Sprite_obj super;
		typedef ChoiceBox_obj OBJ_;
		ChoiceBox_obj();

	public:
		enum { _hx_ClassId = 0x07e03980 };

		void __construct(::Array< ::String > labels,::cpp::VirtualArray values,::String value);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="ui.options.ChoiceBox")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"ui.options.ChoiceBox"); }
		static ::hx::ObjectPtr< ChoiceBox_obj > __new(::Array< ::String > labels,::cpp::VirtualArray values,::String value);
		static ::hx::ObjectPtr< ChoiceBox_obj > __alloc(::hx::Ctx *_hx_ctx,::Array< ::String > labels,::cpp::VirtualArray values,::String value);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ChoiceBox_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ChoiceBox",0a,a9,94,b8); }

		::Array< ::String > labels;
		::cpp::VirtualArray values;
		int selectedIndex;
		 ::ui::SimpleText labelText;
		bool over;
		 ::openfl::display::GraphicsSolidFill overLineFill;
		 ::openfl::display::GraphicsSolidFill normalLineFill;
		 ::openfl::display::GraphicsPath path;
		 ::openfl::display::GraphicsStroke lineStyle;
		 ::openfl::_Vector::ObjectVector graphicsData;
		void setValue(::String value);
		::Dynamic setValue_dyn();

		 ::Dynamic value();
		::Dynamic value_dyn();

		void drawBackground();
		::Dynamic drawBackground_dyn();

		void setSelected(int index);
		::Dynamic setSelected_dyn();

		void setText(::String text);
		::Dynamic setText_dyn();

		void onMouseOver( ::openfl::events::MouseEvent event);
		::Dynamic onMouseOver_dyn();

		void onRollOut( ::openfl::events::MouseEvent event);
		::Dynamic onRollOut_dyn();

		void onClick( ::openfl::events::MouseEvent event);
		::Dynamic onClick_dyn();

};

} // end namespace ui
} // end namespace options

#endif /* INCLUDED_ui_options_ChoiceBox */ 
