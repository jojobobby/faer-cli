// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_ui_options_OptionsTabTitle
#define INCLUDED_ui_options_OptionsTabTitle

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,Event)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS2(openfl,events,MouseEvent)
HX_DECLARE_CLASS2(openfl,text,TextField)
HX_DECLARE_CLASS1(ui,SimpleText)
HX_DECLARE_CLASS2(ui,options,OptionsTabTitle)

namespace ui{
namespace options{


class HXCPP_CLASS_ATTRIBUTES OptionsTabTitle_obj : public  ::openfl::display::Sprite_obj
{
	public:
		typedef  ::openfl::display::Sprite_obj super;
		typedef OptionsTabTitle_obj OBJ_;
		OptionsTabTitle_obj();

	public:
		enum { _hx_ClassId = 0x11edd8bb };

		void __construct(::String text);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="ui.options.OptionsTabTitle")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"ui.options.OptionsTabTitle"); }
		static ::hx::ObjectPtr< OptionsTabTitle_obj > __new(::String text);
		static ::hx::ObjectPtr< OptionsTabTitle_obj > __alloc(::hx::Ctx *_hx_ctx,::String text);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~OptionsTabTitle_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("OptionsTabTitle",61,1c,ab,53); }

		::String text;
		 ::ui::SimpleText textField;
		bool selected;
		void setSelected(bool selected);
		::Dynamic setSelected_dyn();

		void redraw(bool over);
		::Dynamic redraw_dyn();

		int getColor(bool isOver);
		::Dynamic getColor_dyn();

		void onMouseOver( ::openfl::events::MouseEvent event);
		::Dynamic onMouseOver_dyn();

		void onRollOut( ::openfl::events::MouseEvent event);
		::Dynamic onRollOut_dyn();

};

} // end namespace ui
} // end namespace options

#endif /* INCLUDED_ui_options_OptionsTabTitle */ 
