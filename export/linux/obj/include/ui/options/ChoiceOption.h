// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_ui_options_ChoiceOption
#define INCLUDED_ui_options_ChoiceOption

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_ui_options_Option
#include <ui/options/Option.h>
#endif
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,Event)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS2(ui,options,ChoiceBox)
HX_DECLARE_CLASS2(ui,options,ChoiceOption)
HX_DECLARE_CLASS2(ui,options,Option)

namespace ui{
namespace options{


class HXCPP_CLASS_ATTRIBUTES ChoiceOption_obj : public  ::ui::options::Option_obj
{
	public:
		typedef  ::ui::options::Option_obj super;
		typedef ChoiceOption_obj OBJ_;
		ChoiceOption_obj();

	public:
		enum { _hx_ClassId = 0x594ff93c };

		void __construct(::String paramName,::Array< ::String > labels,::cpp::VirtualArray values,::String desc,::String tooltipText, ::Dynamic callback);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="ui.options.ChoiceOption")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"ui.options.ChoiceOption"); }
		static ::hx::ObjectPtr< ChoiceOption_obj > __new(::String paramName,::Array< ::String > labels,::cpp::VirtualArray values,::String desc,::String tooltipText, ::Dynamic callback);
		static ::hx::ObjectPtr< ChoiceOption_obj > __alloc(::hx::Ctx *_hx_ctx,::String paramName,::Array< ::String > labels,::cpp::VirtualArray values,::String desc,::String tooltipText, ::Dynamic callback);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ChoiceOption_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ChoiceOption",d6,91,4c,5b); }

		 ::Dynamic callback;
		Dynamic callback_dyn() { return callback;}
		 ::ui::options::ChoiceBox choiceBox;
		void refresh();

		void onChange( ::openfl::events::Event event);
		::Dynamic onChange_dyn();

};

} // end namespace ui
} // end namespace options

#endif /* INCLUDED_ui_options_ChoiceOption */ 
