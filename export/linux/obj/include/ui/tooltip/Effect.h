// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_ui_tooltip_Effect
#define INCLUDED_ui_tooltip_Effect

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_3bf2aa96b2e4abf2_356_new)
HX_DECLARE_CLASS2(ui,tooltip,Effect)

namespace ui{
namespace tooltip{


class HXCPP_CLASS_ATTRIBUTES Effect_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Effect_obj OBJ_;
		Effect_obj();

	public:
		enum { _hx_ClassId = 0x322e2c3c };

		void __construct(::String name,::String value);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="ui.tooltip.Effect")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"ui.tooltip.Effect"); }

		inline static ::hx::ObjectPtr< Effect_obj > __new(::String name,::String value) {
			::hx::ObjectPtr< Effect_obj > __this = new Effect_obj();
			__this->__construct(name,value);
			return __this;
		}

		inline static ::hx::ObjectPtr< Effect_obj > __alloc(::hx::Ctx *_hx_ctx,::String name,::String value) {
			Effect_obj *__this = (Effect_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Effect_obj), true, "ui.tooltip.Effect"));
			*(void **)__this = Effect_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_3bf2aa96b2e4abf2_356_new)
HXLINE( 358)		( ( ::ui::tooltip::Effect)(__this) )->value = HX_("",00,00,00,00);
HXLINE( 357)		( ( ::ui::tooltip::Effect)(__this) )->name = HX_("",00,00,00,00);
HXLINE( 361)		( ( ::ui::tooltip::Effect)(__this) )->name = name;
HXLINE( 362)		( ( ::ui::tooltip::Effect)(__this) )->value = value;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Effect_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Effect",b1,ce,37,95); }

		::String name;
		::String value;
};

} // end namespace ui
} // end namespace tooltip

#endif /* INCLUDED_ui_tooltip_Effect */ 
