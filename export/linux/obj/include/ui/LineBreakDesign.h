// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_ui_LineBreakDesign
#define INCLUDED_ui_LineBreakDesign

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_openfl_display_Shape
#include <openfl/display/Shape.h>
#endif
HX_DECLARE_CLASS2(openfl,_Vector,IVector)
HX_DECLARE_CLASS2(openfl,_Vector,ObjectVector)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,GraphicsPath)
HX_DECLARE_CLASS2(openfl,display,GraphicsSolidFill)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,IGraphicsData)
HX_DECLARE_CLASS2(openfl,display,IGraphicsFill)
HX_DECLARE_CLASS2(openfl,display,IGraphicsPath)
HX_DECLARE_CLASS2(openfl,display,Shape)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS1(ui,LineBreakDesign)

namespace ui{


class HXCPP_CLASS_ATTRIBUTES LineBreakDesign_obj : public  ::openfl::display::Shape_obj
{
	public:
		typedef  ::openfl::display::Shape_obj super;
		typedef LineBreakDesign_obj OBJ_;
		LineBreakDesign_obj();

	public:
		enum { _hx_ClassId = 0x3957928d };

		void __construct(int width,int color);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="ui.LineBreakDesign")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"ui.LineBreakDesign"); }
		static ::hx::ObjectPtr< LineBreakDesign_obj > __new(int width,int color);
		static ::hx::ObjectPtr< LineBreakDesign_obj > __alloc(::hx::Ctx *_hx_ctx,int width,int color);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~LineBreakDesign_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("LineBreakDesign",a9,d2,6c,c2); }

		 ::openfl::display::GraphicsSolidFill designFill;
		 ::openfl::display::GraphicsPath designPath;
		 ::openfl::_Vector::ObjectVector designGraphicsData;
		void setWidthColor(int width,int color);
		::Dynamic setWidthColor_dyn();

};

} // end namespace ui

#endif /* INCLUDED_ui_LineBreakDesign */ 
