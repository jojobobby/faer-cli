// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_ui_dialogs_Dialog
#define INCLUDED_ui_dialogs_Dialog

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
HX_DECLARE_CLASS2(openfl,_Vector,IVector)
HX_DECLARE_CLASS2(openfl,_Vector,ObjectVector)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,GraphicsPath)
HX_DECLARE_CLASS2(openfl,display,GraphicsSolidFill)
HX_DECLARE_CLASS2(openfl,display,GraphicsStroke)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,IGraphicsData)
HX_DECLARE_CLASS2(openfl,display,IGraphicsFill)
HX_DECLARE_CLASS2(openfl,display,IGraphicsPath)
HX_DECLARE_CLASS2(openfl,display,IGraphicsStroke)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Shape)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,Event)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS2(openfl,events,MouseEvent)
HX_DECLARE_CLASS2(openfl,text,TextField)
HX_DECLARE_CLASS1(ui,SimpleText)
HX_DECLARE_CLASS1(ui,TextButton)
HX_DECLARE_CLASS2(ui,dialogs,Dialog)

namespace ui{
namespace dialogs{


class HXCPP_CLASS_ATTRIBUTES Dialog_obj : public  ::openfl::display::Sprite_obj
{
	public:
		typedef  ::openfl::display::Sprite_obj super;
		typedef Dialog_obj OBJ_;
		Dialog_obj();

	public:
		enum { _hx_ClassId = 0x46543c1b };

		void __construct(::String text,::String title,::String button1,::String button2);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="ui.dialogs.Dialog")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"ui.dialogs.Dialog"); }
		static ::hx::ObjectPtr< Dialog_obj > __new(::String text,::String title,::String button1,::String button2);
		static ::hx::ObjectPtr< Dialog_obj > __alloc(::hx::Ctx *_hx_ctx,::String text,::String title,::String button1,::String button2);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Dialog_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Dialog",e8,78,c7,e5); }

		 ::openfl::display::Sprite box;
		 ::openfl::display::Shape rect;
		 ::ui::SimpleText textText;
		 ::ui::SimpleText titleText;
		 ::ui::TextButton button1;
		 ::ui::TextButton button2;
		Float offsetX;
		Float offsetY;
		 ::openfl::display::GraphicsPath path;
		 ::openfl::display::GraphicsSolidFill outlineFill;
		 ::openfl::display::GraphicsStroke lineStyle;
		 ::openfl::display::GraphicsSolidFill backgroundFill;
		 ::openfl::_Vector::ObjectVector graphicsData;
		void initText(::String text);
		::Dynamic initText_dyn();

		void draw();
		::Dynamic draw_dyn();

		void initTitleText(::String title);
		::Dynamic initTitleText_dyn();

		void onAddedToStage( ::openfl::events::Event event);
		::Dynamic onAddedToStage_dyn();

		void onButton1Click( ::openfl::events::MouseEvent event);
		::Dynamic onButton1Click_dyn();

		void onButton2Click( ::openfl::events::Event event);
		::Dynamic onButton2Click_dyn();

};

} // end namespace ui
} // end namespace dialogs

#endif /* INCLUDED_ui_dialogs_Dialog */ 
