// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_ui_menu_Menu
#define INCLUDED_ui_menu_Menu

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,Event)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS2(ui,menu,Menu)

namespace ui{
namespace menu{


class HXCPP_CLASS_ATTRIBUTES Menu_obj : public  ::openfl::display::Sprite_obj
{
	public:
		typedef  ::openfl::display::Sprite_obj super;
		typedef Menu_obj OBJ_;
		Menu_obj();

	public:
		enum { _hx_ClassId = 0x05ec0532 };

		void __construct(int background,int outline);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="ui.menu.Menu")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"ui.menu.Menu"); }
		static ::hx::ObjectPtr< Menu_obj > __new(int background,int outline);
		static ::hx::ObjectPtr< Menu_obj > __alloc(::hx::Ctx *_hx_ctx,int background,int outline);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Menu_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Menu",bf,71,32,33); }

		int background;
		int outline;
		int yOffset;
		void remove();
		::Dynamic remove_dyn();

		void draw();
		::Dynamic draw_dyn();

		void position();
		::Dynamic position_dyn();

		void onAddedToStage( ::openfl::events::Event _);
		::Dynamic onAddedToStage_dyn();

		void onRemovedFromStage( ::openfl::events::Event _);
		::Dynamic onRemovedFromStage_dyn();

		void onEnterFrame( ::openfl::events::Event _);
		::Dynamic onEnterFrame_dyn();

		void onRollOut( ::openfl::events::Event _);
		::Dynamic onRollOut_dyn();

};

} // end namespace ui
} // end namespace menu

#endif /* INCLUDED_ui_menu_Menu */ 
