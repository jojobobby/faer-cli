// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_ui_menu_TeleportMenuOption
#define INCLUDED_ui_menu_TeleportMenuOption

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_ui_menu_MenuOption
#include <ui/menu/MenuOption.h>
#endif
HX_DECLARE_CLASS1(objects,GameObject)
HX_DECLARE_CLASS1(objects,Player)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,Event)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS2(openfl,events,MouseEvent)
HX_DECLARE_CLASS2(openfl,geom,ColorTransform)
HX_DECLARE_CLASS2(openfl,text,TextField)
HX_DECLARE_CLASS1(ui,SimpleText)
HX_DECLARE_CLASS2(ui,menu,MenuOption)
HX_DECLARE_CLASS2(ui,menu,TeleportMenuOption)

namespace ui{
namespace menu{


class HXCPP_CLASS_ATTRIBUTES TeleportMenuOption_obj : public  ::ui::menu::MenuOption_obj
{
	public:
		typedef  ::ui::menu::MenuOption_obj super;
		typedef TeleportMenuOption_obj OBJ_;
		TeleportMenuOption_obj();

	public:
		enum { _hx_ClassId = 0x19e0729a };

		void __construct( ::objects::Player player);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="ui.menu.TeleportMenuOption")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"ui.menu.TeleportMenuOption"); }
		static ::hx::ObjectPtr< TeleportMenuOption_obj > __new( ::objects::Player player);
		static ::hx::ObjectPtr< TeleportMenuOption_obj > __alloc(::hx::Ctx *_hx_ctx, ::objects::Player player);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~TeleportMenuOption_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("TeleportMenuOption",1f,fd,95,9d); }

		static void __boot();
		static  ::openfl::geom::ColorTransform inactiveCT;
		 ::objects::Player player;
		bool mouseOver;
		 ::ui::SimpleText barText;
		int barTextOrigWidth;
		void onMouseOver( ::openfl::events::MouseEvent event);

		void onMouseOut( ::openfl::events::MouseEvent event);

		void onAddedToStage( ::openfl::events::Event event);
		::Dynamic onAddedToStage_dyn();

		void onRemovedFromStage( ::openfl::events::Event event);
		::Dynamic onRemovedFromStage_dyn();

		void onEnterFrame( ::openfl::events::Event event);
		::Dynamic onEnterFrame_dyn();

};

} // end namespace ui
} // end namespace menu

#endif /* INCLUDED_ui_menu_TeleportMenuOption */ 
