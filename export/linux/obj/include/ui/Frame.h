// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_ui_Frame
#define INCLUDED_ui_Frame

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
HX_DECLARE_CLASS2(account,view,FormField)
HX_DECLARE_CLASS2(account,view,LabeledField)
HX_DECLARE_CLASS2(openfl,_Vector,IVector)
HX_DECLARE_CLASS2(openfl,_Vector,ObjectVector)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,GraphicsPath)
HX_DECLARE_CLASS2(openfl,display,GraphicsSolidFill)
HX_DECLARE_CLASS2(openfl,display,GraphicsStroke)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,IGraphicsData)
HX_DECLARE_CLASS2(openfl,display,IGraphicsFill)
HX_DECLARE_CLASS2(openfl,display,IGraphicsPath)
HX_DECLARE_CLASS2(openfl,display,IGraphicsStroke)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,Event)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS2(openfl,text,TextField)
HX_DECLARE_CLASS1(ui,ClickableText)
HX_DECLARE_CLASS1(ui,Frame)
HX_DECLARE_CLASS1(ui,SimpleText)
HX_DECLARE_CLASS1(ui,TextInputField)

namespace ui{


class HXCPP_CLASS_ATTRIBUTES Frame_obj : public  ::openfl::display::Sprite_obj
{
	public:
		typedef  ::openfl::display::Sprite_obj super;
		typedef Frame_obj OBJ_;
		Frame_obj();

	public:
		enum { _hx_ClassId = 0x3517a2f1 };

		void __construct(::String title,::String leftButton,::String rightButton,::hx::Null< int >  __o_w);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="ui.Frame")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"ui.Frame"); }
		static ::hx::ObjectPtr< Frame_obj > __new(::String title,::String leftButton,::String rightButton,::hx::Null< int >  __o_w);
		static ::hx::ObjectPtr< Frame_obj > __alloc(::hx::Ctx *_hx_ctx,::String title,::String leftButton,::String rightButton,::hx::Null< int >  __o_w);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Frame_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Frame",0d,e8,b0,99); }

		 ::ui::SimpleText titleText;
		 ::ui::ClickableText leftButton;
		 ::ui::ClickableText rightButton;
		::Array< ::Dynamic> textInputFields;
		::Array< ::Dynamic> navigationLinks;
		int w;
		int h;
		 ::openfl::display::GraphicsSolidFill titleFill;
		 ::openfl::display::GraphicsSolidFill backgroundFill;
		 ::openfl::display::GraphicsSolidFill outlineFill;
		 ::openfl::display::GraphicsStroke lineStyle;
		 ::openfl::display::GraphicsPath path1;
		 ::openfl::display::GraphicsPath path2;
		 ::openfl::_Vector::ObjectVector graphicsData;
		void addLabeledField( ::account::view::LabeledField labeledField);
		::Dynamic addLabeledField_dyn();

		void addTextInputField( ::ui::TextInputField textInputField);
		::Dynamic addTextInputField_dyn();

		void addNavigationText( ::ui::ClickableText navigationLink);
		::Dynamic addNavigationText_dyn();

		void addComponent( ::openfl::display::DisplayObject component,::hx::Null< int >  offsetX);
		::Dynamic addComponent_dyn();

		void addSpace(int space);
		::Dynamic addSpace_dyn();

		void disable();
		::Dynamic disable_dyn();

		void enable();
		::Dynamic enable_dyn();

		void draw();
		::Dynamic draw_dyn();

		void onAddedToStage( ::openfl::events::Event event);
		::Dynamic onAddedToStage_dyn();

		void onRemovedFromStage( ::openfl::events::Event event);
		::Dynamic onRemovedFromStage_dyn();

};

} // end namespace ui

#endif /* INCLUDED_ui_Frame */ 
