// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_ui_panels_itemgrids_itemtiles_ItemTileEvent
#define INCLUDED_ui_panels_itemgrids_itemtiles_ItemTileEvent

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,Event)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS4(ui,panels,itemgrids,itemtiles,InteractiveItemTile)
HX_DECLARE_CLASS4(ui,panels,itemgrids,itemtiles,ItemTile)
HX_DECLARE_CLASS4(ui,panels,itemgrids,itemtiles,ItemTileEvent)

namespace ui{
namespace panels{
namespace itemgrids{
namespace itemtiles{


class HXCPP_CLASS_ATTRIBUTES ItemTileEvent_obj : public  ::openfl::events::Event_obj
{
	public:
		typedef  ::openfl::events::Event_obj super;
		typedef ItemTileEvent_obj OBJ_;
		ItemTileEvent_obj();

	public:
		enum { _hx_ClassId = 0x40e52a1e };

		void __construct(::String eventType, ::ui::panels::itemgrids::itemtiles::InteractiveItemTile itemTile);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="ui.panels.itemgrids.itemtiles.ItemTileEvent")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"ui.panels.itemgrids.itemtiles.ItemTileEvent"); }
		static ::hx::ObjectPtr< ItemTileEvent_obj > __new(::String eventType, ::ui::panels::itemgrids::itemtiles::InteractiveItemTile itemTile);
		static ::hx::ObjectPtr< ItemTileEvent_obj > __alloc(::hx::Ctx *_hx_ctx,::String eventType, ::ui::panels::itemgrids::itemtiles::InteractiveItemTile itemTile);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ItemTileEvent_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ItemTileEvent",59,d6,09,09); }

		 ::ui::panels::itemgrids::itemtiles::InteractiveItemTile tile;
};

} // end namespace ui
} // end namespace panels
} // end namespace itemgrids
} // end namespace itemtiles

#endif /* INCLUDED_ui_panels_itemgrids_itemtiles_ItemTileEvent */ 
