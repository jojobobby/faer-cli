// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_ui_view_Inventory
#define INCLUDED_ui_view_Inventory

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
HX_DECLARE_CLASS1(objects,GameObject)
HX_DECLARE_CLASS1(objects,Player)
HX_DECLARE_CLASS2(openfl,display,Bitmap)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS2(openfl,text,TextField)
HX_DECLARE_CLASS1(ui,SimpleText)
HX_DECLARE_CLASS2(ui,panels,Panel)
HX_DECLARE_CLASS3(ui,panels,itemgrids,ContainerGrid)
HX_DECLARE_CLASS3(ui,panels,itemgrids,EquippedGrid)
HX_DECLARE_CLASS3(ui,panels,itemgrids,InventoryGrid)
HX_DECLARE_CLASS3(ui,panels,itemgrids,ItemGrid)
HX_DECLARE_CLASS2(ui,view,Inventory)
HX_DECLARE_CLASS2(ui,view,VialInventoryView)

namespace ui{
namespace view{


class HXCPP_CLASS_ATTRIBUTES Inventory_obj : public  ::openfl::display::Sprite_obj
{
	public:
		typedef  ::openfl::display::Sprite_obj super;
		typedef Inventory_obj OBJ_;
		Inventory_obj();

	public:
		enum { _hx_ClassId = 0x618dbf23 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="ui.view.Inventory")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"ui.view.Inventory"); }
		static ::hx::ObjectPtr< Inventory_obj > __new();
		static ::hx::ObjectPtr< Inventory_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Inventory_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Inventory",7c,56,89,ea); }

		 ::ui::panels::itemgrids::InventoryGrid invGrid;
		 ::ui::panels::itemgrids::InventoryGrid bpGrid;
		 ::ui::view::VialInventoryView vialView;
		 ::openfl::display::Bitmap decor;
		 ::openfl::display::Bitmap containerDecor;
		 ::ui::SimpleText containerName;
		 ::openfl::display::Bitmap containerBitmapLeft;
		 ::openfl::display::Bitmap containerBitmapRight;
		 ::ui::panels::itemgrids::ContainerGrid containerGrid;
		 ::ui::panels::itemgrids::EquippedGrid equippedGrid;
		void init( ::objects::Player player);
		::Dynamic init_dyn();

};

} // end namespace ui
} // end namespace view

#endif /* INCLUDED_ui_view_Inventory */ 
