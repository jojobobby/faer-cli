// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_ui_view_MapBackground
#define INCLUDED_ui_view_MapBackground

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
HX_DECLARE_CLASS1(map,Map)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,Event)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS2(ui,view,MapBackground)

namespace ui{
namespace view{


class HXCPP_CLASS_ATTRIBUTES MapBackground_obj : public  ::openfl::display::Sprite_obj
{
	public:
		typedef  ::openfl::display::Sprite_obj super;
		typedef MapBackground_obj OBJ_;
		MapBackground_obj();

	public:
		enum { _hx_ClassId = 0x7fcf15b1 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="ui.view.MapBackground")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"ui.view.MapBackground"); }
		static ::hx::ObjectPtr< MapBackground_obj > __new();
		static ::hx::ObjectPtr< MapBackground_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~MapBackground_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("MapBackground",8a,cd,8b,62); }

		static void __boot();
		static  ::map::Map backgroundMap;
		static int nextFakeObjectId;
		static  ::map::Map makeMap();

		static void onEnterFrame( ::openfl::events::Event _);
		static ::Dynamic onEnterFrame_dyn();

		void onAddedToStage( ::openfl::events::Event _);
		::Dynamic onAddedToStage_dyn();

		void onRemovedFromStage( ::openfl::events::Event _);
		::Dynamic onRemovedFromStage_dyn();

};

} // end namespace ui
} // end namespace view

#endif /* INCLUDED_ui_view_MapBackground */ 
