// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_classes_view_ClassDetailView
#define INCLUDED_classes_view_ClassDetailView

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
HX_DECLARE_CLASS1(assets,Animation)
HX_DECLARE_CLASS2(classes,model,CharacterSkin)
HX_DECLARE_CLASS2(classes,view,ClassDetailView)
HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,IntMap)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,Event)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS2(openfl,events,TimerEvent)
HX_DECLARE_CLASS2(openfl,text,TextField)
HX_DECLARE_CLASS2(openfl,utils,Timer)
HX_DECLARE_CLASS1(ui,SimpleText)

namespace classes{
namespace view{


class HXCPP_CLASS_ATTRIBUTES ClassDetailView_obj : public  ::openfl::display::Sprite_obj
{
	public:
		typedef  ::openfl::display::Sprite_obj super;
		typedef ClassDetailView_obj OBJ_;
		ClassDetailView_obj();

	public:
		enum { _hx_ClassId = 0x7453b787 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="classes.view.ClassDetailView")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"classes.view.ClassDetailView"); }
		static ::hx::ObjectPtr< ClassDetailView_obj > __new();
		static ::hx::ObjectPtr< ClassDetailView_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ClassDetailView_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ClassDetailView",ce,d7,3d,57); }

		 ::haxe::ds::IntMap skins;
		 ::openfl::utils::Timer nextSkinTimer;
		 ::classes::model::CharacterSkin nextSkin;
		 ::ui::SimpleText classNameText;
		 ::ui::SimpleText classDescriptionText;
		 ::openfl::display::Sprite animContainer;
		 ::assets::Animation animation;
		void onAdded( ::openfl::events::Event _);
		::Dynamic onAdded_dyn();

		void onRemoved( ::openfl::events::Event _);
		::Dynamic onRemoved_dyn();

		void onFocusSet( ::classes::model::CharacterSkin skin);
		::Dynamic onFocusSet_dyn();

		void delayedFocusSet( ::openfl::events::TimerEvent e);
		::Dynamic delayedFocusSet_dyn();

		void setData(::String name,::String description);
		::Dynamic setData_dyn();

		void setWalkingAnimation( ::assets::Animation value);
		::Dynamic setWalkingAnimation_dyn();

		void removeAnimation( ::assets::Animation animation);
		::Dynamic removeAnimation_dyn();

		void addAnimation( ::assets::Animation animation);
		::Dynamic addAnimation_dyn();

		void layout();
		::Dynamic layout_dyn();

};

} // end namespace classes
} // end namespace view

#endif /* INCLUDED_classes_view_ClassDetailView */ 
