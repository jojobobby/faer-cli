// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_classes_view_CharSkinView
#define INCLUDED_classes_view_CharSkinView

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
HX_DECLARE_CLASS0(Xml)
HX_DECLARE_CLASS2(classes,view,CharSkinView)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,Event)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS2(openfl,events,MouseEvent)
HX_DECLARE_CLASS1(screens,TitleMenuOption)

namespace classes{
namespace view{


class HXCPP_CLASS_ATTRIBUTES CharSkinView_obj : public  ::openfl::display::Sprite_obj
{
	public:
		typedef  ::openfl::display::Sprite_obj super;
		typedef CharSkinView_obj OBJ_;
		CharSkinView_obj();

	public:
		enum { _hx_ClassId = 0x0fa4c293 };

		void __construct( ::Xml _playerXML);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="classes.view.CharSkinView")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"classes.view.CharSkinView"); }
		static ::hx::ObjectPtr< CharSkinView_obj > __new( ::Xml _playerXML);
		static ::hx::ObjectPtr< CharSkinView_obj > __alloc(::hx::Ctx *_hx_ctx, ::Xml _playerXML);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~CharSkinView_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("CharSkinView",98,24,b6,d2); }

		static  ::Xml playerXML;
		static void onBack( ::openfl::events::MouseEvent _);
		static ::Dynamic onBack_dyn();

		static void onPlay( ::openfl::events::MouseEvent _);
		static ::Dynamic onPlay_dyn();

		 ::screens::TitleMenuOption playBtn;
		 ::screens::TitleMenuOption backBtn;
		void onAdded( ::openfl::events::Event _);
		::Dynamic onAdded_dyn();

		void onRemoved( ::openfl::events::Event _);
		::Dynamic onRemoved_dyn();

		void setPlayButtonEnabled(bool activate);
		::Dynamic setPlayButtonEnabled_dyn();

};

} // end namespace classes
} // end namespace view

#endif /* INCLUDED_classes_view_CharSkinView */ 
