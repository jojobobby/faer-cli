// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_classes_model_CharacterSkin
#define INCLUDED_classes_model_CharacterSkin

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(assets,CharacterTemplate)
HX_DECLARE_CLASS2(classes,model,CharacterSkin)
HX_DECLARE_CLASS2(classes,model,CharacterSkinState)
HX_DECLARE_CLASS1(util,Signal)

namespace classes{
namespace model{


class HXCPP_CLASS_ATTRIBUTES CharacterSkin_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef CharacterSkin_obj OBJ_;
		CharacterSkin_obj();

	public:
		enum { _hx_ClassId = 0x1efd1183 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="classes.model.CharacterSkin")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"classes.model.CharacterSkin"); }
		static ::hx::ObjectPtr< CharacterSkin_obj > __new();
		static ::hx::ObjectPtr< CharacterSkin_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~CharacterSkin_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("CharacterSkin",a6,f6,31,8d); }

		 ::util::Signal changed;
		int id;
		::String name;
		 ::assets::CharacterTemplate _hx_template;
		int cost;
		 ::classes::model::CharacterSkinState state;
		bool isSelected;
		bool getIsSelected();
		::Dynamic getIsSelected_dyn();

		void setIsSelected(bool value);
		::Dynamic setIsSelected_dyn();

		 ::classes::model::CharacterSkinState getState();
		::Dynamic getState_dyn();

		void setState( ::classes::model::CharacterSkinState value);
		::Dynamic setState_dyn();

};

} // end namespace classes
} // end namespace model

#endif /* INCLUDED_classes_model_CharacterSkin */ 
