// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_classes_model_ClassModel
#define INCLUDED_classes_model_ClassModel

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(classes,model,CharacterClass)
HX_DECLARE_CLASS2(classes,model,CharacterSkin)
HX_DECLARE_CLASS2(classes,model,ClassModel)
HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,IntMap)
HX_DECLARE_CLASS1(util,Signal)

namespace classes{
namespace model{


class HXCPP_CLASS_ATTRIBUTES ClassModel_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef ClassModel_obj OBJ_;
		ClassModel_obj();

	public:
		enum { _hx_ClassId = 0x66177d74 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="classes.model.ClassModel")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"classes.model.ClassModel"); }
		static ::hx::ObjectPtr< ClassModel_obj > __new();
		static ::hx::ObjectPtr< ClassModel_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ClassModel_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ClassModel",71,54,27,46); }

		 ::util::Signal selected;
		 ::haxe::ds::IntMap map;
		::Array< ::Dynamic> classes;
		int count;
		 ::classes::model::CharacterClass selectedChar;
		int getCount();
		::Dynamic getCount_dyn();

		 ::classes::model::CharacterClass getClassAtIndex(int index);
		::Dynamic getClassAtIndex_dyn();

		 ::classes::model::CharacterClass getCharacterClass(int id);
		::Dynamic getCharacterClass_dyn();

		 ::classes::model::CharacterClass getSelected();
		::Dynamic getSelected_dyn();

		 ::classes::model::CharacterSkin getCharacterSkin(int objType);
		::Dynamic getCharacterSkin_dyn();

		 ::classes::model::CharacterClass makeCharacterClass();
		::Dynamic makeCharacterClass_dyn();

		void selectClass( ::classes::model::CharacterClass charClass);
		::Dynamic selectClass_dyn();

};

} // end namespace classes
} // end namespace model

#endif /* INCLUDED_classes_model_ClassModel */ 
