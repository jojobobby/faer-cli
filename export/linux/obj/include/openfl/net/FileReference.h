// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_openfl_net_FileReference
#define INCLUDED_openfl_net_FileReference

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
HX_DECLARE_CLASS0(Date)
HX_DECLARE_CLASS2(haxe,io,Bytes)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS2(openfl,net,FileFilter)
HX_DECLARE_CLASS2(openfl,net,FileReference)
HX_DECLARE_CLASS2(openfl,utils,ByteArrayData)
HX_DECLARE_CLASS2(openfl,utils,IDataInput)
HX_DECLARE_CLASS2(openfl,utils,IDataOutput)

namespace openfl{
namespace net{


class HXCPP_CLASS_ATTRIBUTES FileReference_obj : public  ::openfl::events::EventDispatcher_obj
{
	public:
		typedef  ::openfl::events::EventDispatcher_obj super;
		typedef FileReference_obj OBJ_;
		FileReference_obj();

	public:
		enum { _hx_ClassId = 0x0c1b0022 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="openfl.net.FileReference")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"openfl.net.FileReference"); }
		static ::hx::ObjectPtr< FileReference_obj > __new();
		static ::hx::ObjectPtr< FileReference_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~FileReference_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("FileReference",8f,b9,f4,41); }

		 ::Date creationDate;
		 ::openfl::utils::ByteArrayData data;
		 ::Date modificationDate;
		::String name;
		int size;
		::String type;
		 ::openfl::utils::ByteArrayData _hx___data;
		::String _hx___path;
		bool browse(::Array< ::Dynamic> typeFilter);
		::Dynamic browse_dyn();

		void load();
		::Dynamic load_dyn();

		void save( ::Dynamic data,::String defaultFileName);
		::Dynamic save_dyn();

		void openFileDialog_onCancel();
		::Dynamic openFileDialog_onCancel_dyn();

		void openFileDialog_onComplete();
		::Dynamic openFileDialog_onComplete_dyn();

		void openFileDialog_onSelect(::String path);
		::Dynamic openFileDialog_onSelect_dyn();

		void saveFileDialog_onCancel();
		::Dynamic saveFileDialog_onCancel_dyn();

		void saveFileDialog_onSelect(::String path);
		::Dynamic saveFileDialog_onSelect_dyn();

		::String get_name();
		::Dynamic get_name_dyn();

};

} // end namespace openfl
} // end namespace net

#endif /* INCLUDED_openfl_net_FileReference */ 
