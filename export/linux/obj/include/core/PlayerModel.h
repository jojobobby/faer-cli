// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_core_PlayerModel
#define INCLUDED_core_PlayerModel

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(appengine,SavedCharacter)
HX_DECLARE_CLASS1(appengine,SavedCharactersList)
HX_DECLARE_CLASS1(core,PlayerModel)
HX_DECLARE_CLASS2(openfl,events,Event)
HX_DECLARE_CLASS1(servers,LatLong)
HX_DECLARE_CLASS1(util,Signal)

namespace core{


class HXCPP_CLASS_ATTRIBUTES PlayerModel_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef PlayerModel_obj OBJ_;
		PlayerModel_obj();

	public:
		enum { _hx_ClassId = 0x229a6e29 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="core.PlayerModel")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"core.PlayerModel"); }
		static ::hx::ObjectPtr< PlayerModel_obj > __new();
		static ::hx::ObjectPtr< PlayerModel_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~PlayerModel_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("PlayerModel",68,60,69,f7); }

		 ::util::Signal gemsChanged;
		 ::util::Signal goldChanged;
		 ::util::Signal crownsChanged;
		 ::appengine::SavedCharactersList charList;
		bool isInvalidated;
		int currentCharId;
		int getMaxCharacters();
		::Dynamic getMaxCharacters_dyn();

		int getGems();
		::Dynamic getGems_dyn();

		void addGems(int gems);
		::Dynamic addGems_dyn();

		int getGold();
		::Dynamic getGold_dyn();

		int getCrowns();
		::Dynamic getCrowns_dyn();

		int getCharacterCount();
		::Dynamic getCharacterCount_dyn();

		void deleteCharacter(int characterId);
		::Dynamic deleteCharacter_dyn();

		::String getGuildName();
		::Dynamic getGuildName_dyn();

		int getGuildRank();
		::Dynamic getGuildRank_dyn();

		int getNextCharSlotPrice();
		::Dynamic getNextCharSlotPrice_dyn();

		int getNextCharSlotCurrency();
		::Dynamic getNextCharSlotCurrency_dyn();

		bool isNextCharSlotCurrencyGems();
		::Dynamic isNextCharSlotCurrencyGems_dyn();

		int getNextCharId();
		::Dynamic getNextCharId_dyn();

		 ::appengine::SavedCharacter getCharacterByIndex(int idx);
		::Dynamic getCharacterByIndex_dyn();

		bool isAdmin();
		::Dynamic isAdmin_dyn();

		 ::servers::LatLong getMyPos();
		::Dynamic getMyPos_dyn();

		::String getName();
		::Dynamic getName_dyn();

		bool hasAvailableCharSlot();
		::Dynamic hasAvailableCharSlot_dyn();

		int getAvailableCharSlots();
		::Dynamic getAvailableCharSlots_dyn();

		::Array< ::Dynamic> getSavedCharacters();
		::Dynamic getSavedCharacters_dyn();

		void setCharacterList( ::appengine::SavedCharactersList savedCharactersList);
		::Dynamic setCharacterList_dyn();

};

} // end namespace core

#endif /* INCLUDED_core_PlayerModel */ 
