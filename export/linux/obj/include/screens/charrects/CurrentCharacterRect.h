// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_screens_charrects_CurrentCharacterRect
#define INCLUDED_screens_charrects_CurrentCharacterRect

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_screens_charrects_CharacterRect
#include <screens/charrects/CharacterRect.h>
#endif
HX_DECLARE_CLASS1(appengine,SavedCharacter)
HX_DECLARE_CLASS2(classes,model,CharacterClass)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,Event)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS2(openfl,events,MouseEvent)
HX_DECLARE_CLASS2(openfl,text,TextField)
HX_DECLARE_CLASS2(screens,charrects,CharacterRect)
HX_DECLARE_CLASS2(screens,charrects,CurrentCharacterRect)
HX_DECLARE_CLASS1(ui,SimpleText)
HX_DECLARE_CLASS2(ui,tooltip,ToolTip)

namespace screens{
namespace charrects{


class HXCPP_CLASS_ATTRIBUTES CurrentCharacterRect_obj : public  ::screens::charrects::CharacterRect_obj
{
	public:
		typedef  ::screens::charrects::CharacterRect_obj super;
		typedef CurrentCharacterRect_obj OBJ_;
		CurrentCharacterRect_obj();

	public:
		enum { _hx_ClassId = 0x2acdcde6 };

		void __construct(::String charName, ::classes::model::CharacterClass charType, ::appengine::SavedCharacter savedChar);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="screens.charrects.CurrentCharacterRect")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"screens.charrects.CurrentCharacterRect"); }
		static ::hx::ObjectPtr< CurrentCharacterRect_obj > __new(::String charName, ::classes::model::CharacterClass charType, ::appengine::SavedCharacter savedChar);
		static ::hx::ObjectPtr< CurrentCharacterRect_obj > __alloc(::hx::Ctx *_hx_ctx,::String charName, ::classes::model::CharacterClass charType, ::appengine::SavedCharacter savedChar);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~CurrentCharacterRect_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("CurrentCharacterRect",94,0d,92,f9); }

		static void __boot();
		static  ::ui::tooltip::ToolTip toolTip;
		static void removeToolTip();
		static ::Dynamic removeToolTip_dyn();

		::String charName;
		 ::appengine::SavedCharacter savedChar;
		 ::classes::model::CharacterClass charType;
		 ::ui::SimpleText classNameText;
		 ::openfl::display::Sprite deleteButton;
		 ::openfl::display::DisplayObject icon;
		void onAdded( ::openfl::events::Event _);
		::Dynamic onAdded_dyn();

		void onRemoved( ::openfl::events::Event _);
		::Dynamic onRemoved_dyn();

		void onSelected( ::openfl::events::MouseEvent _);
		::Dynamic onSelected_dyn();

		void onDeleteCharacter( ::openfl::events::MouseEvent _);
		::Dynamic onDeleteCharacter_dyn();

		void setIcon( ::openfl::display::DisplayObject value);
		::Dynamic setIcon_dyn();

		void onMouseOver( ::openfl::events::MouseEvent event);

		void onRollOut( ::openfl::events::MouseEvent event);

		void onDeleteDown( ::openfl::events::MouseEvent event);
		::Dynamic onDeleteDown_dyn();

};

} // end namespace screens
} // end namespace charrects

#endif /* INCLUDED_screens_charrects_CurrentCharacterRect */ 
