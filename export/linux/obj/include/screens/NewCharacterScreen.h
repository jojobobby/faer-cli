// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_screens_NewCharacterScreen
#define INCLUDED_screens_NewCharacterScreen

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
HX_DECLARE_CLASS2(game,view,CurrencyDisplay)
HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,IntMap)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,Event)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS2(openfl,events,MouseEvent)
HX_DECLARE_CLASS1(screens,NewCharacterScreen)
HX_DECLARE_CLASS1(screens,TitleMenuOption)

namespace screens{


class HXCPP_CLASS_ATTRIBUTES NewCharacterScreen_obj : public  ::openfl::display::Sprite_obj
{
	public:
		typedef  ::openfl::display::Sprite_obj super;
		typedef NewCharacterScreen_obj OBJ_;
		NewCharacterScreen_obj();

	public:
		enum { _hx_ClassId = 0x0ca579b8 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="screens.NewCharacterScreen")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"screens.NewCharacterScreen"); }
		static ::hx::ObjectPtr< NewCharacterScreen_obj > __new();
		static ::hx::ObjectPtr< NewCharacterScreen_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~NewCharacterScreen_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("NewCharacterScreen",95,f7,58,fd); }

		static void onBackClick( ::openfl::events::Event event);
		static ::Dynamic onBackClick_dyn();

		static void onCharBoxOver( ::openfl::events::MouseEvent event);
		static ::Dynamic onCharBoxOver_dyn();

		static void onCharBoxOut( ::openfl::events::MouseEvent event);
		static ::Dynamic onCharBoxOut_dyn();

		 ::screens::TitleMenuOption backButton;
		 ::game::view::CurrencyDisplay currencyDisplay;
		 ::haxe::ds::IntMap boxes;
		void onAdded( ::openfl::events::Event _);
		::Dynamic onAdded_dyn();

};

} // end namespace screens

#endif /* INCLUDED_screens_NewCharacterScreen */ 
