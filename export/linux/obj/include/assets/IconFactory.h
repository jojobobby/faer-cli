// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_assets_IconFactory
#define INCLUDED_assets_IconFactory

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(assets,IconFactory)
HX_DECLARE_CLASS2(openfl,display,BitmapData)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)

namespace assets{


class HXCPP_CLASS_ATTRIBUTES IconFactory_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef IconFactory_obj OBJ_;
		IconFactory_obj();

	public:
		enum { _hx_ClassId = 0x4e9af24e };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="assets.IconFactory")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"assets.IconFactory"); }

		inline static ::hx::ObjectPtr< IconFactory_obj > __new() {
			::hx::ObjectPtr< IconFactory_obj > __this = new IconFactory_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< IconFactory_obj > __alloc(::hx::Ctx *_hx_ctx) {
			IconFactory_obj *__this = (IconFactory_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(IconFactory_obj), false, "assets.IconFactory"));
			*(void **)__this = IconFactory_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~IconFactory_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("IconFactory",31,c6,bb,9b); }

		static  ::openfl::display::BitmapData makeGems();
		static ::Dynamic makeGems_dyn();

		static  ::openfl::display::BitmapData makeGold();
		static ::Dynamic makeGold_dyn();

		static  ::openfl::display::BitmapData cropAndGlowIcon( ::openfl::display::BitmapData data);
		static ::Dynamic cropAndGlowIcon_dyn();

};

} // end namespace assets

#endif /* INCLUDED_assets_IconFactory */ 
