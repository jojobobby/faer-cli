// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_servers_LatLong
#define INCLUDED_servers_LatLong

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_4621c6e54d674bf5_5_new)
HX_DECLARE_CLASS1(servers,LatLong)

namespace servers{


class HXCPP_CLASS_ATTRIBUTES LatLong_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef LatLong_obj OBJ_;
		LatLong_obj();

	public:
		enum { _hx_ClassId = 0x7bfdf46f };

		void __construct(Float latitude,Float longitude);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="servers.LatLong")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"servers.LatLong"); }

		inline static ::hx::ObjectPtr< LatLong_obj > __new(Float latitude,Float longitude) {
			::hx::ObjectPtr< LatLong_obj > __this = new LatLong_obj();
			__this->__construct(latitude,longitude);
			return __this;
		}

		inline static ::hx::ObjectPtr< LatLong_obj > __alloc(::hx::Ctx *_hx_ctx,Float latitude,Float longitude) {
			LatLong_obj *__this = (LatLong_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(LatLong_obj), false, "servers.LatLong"));
			*(void **)__this = LatLong_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_4621c6e54d674bf5_5_new)
HXLINE(   9)		( ( ::servers::LatLong)(__this) )->longitude = ((Float)0.0);
HXLINE(   8)		( ( ::servers::LatLong)(__this) )->latitude = ((Float)0.0);
HXLINE(  21)		( ( ::servers::LatLong)(__this) )->latitude = latitude;
HXLINE(  22)		( ( ::servers::LatLong)(__this) )->longitude = longitude;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~LatLong_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("LatLong",5b,5d,09,1e); }

		static float distance( ::servers::LatLong a, ::servers::LatLong b);
		static ::Dynamic distance_dyn();

		Float latitude;
		Float longitude;
};

} // end namespace servers

#endif /* INCLUDED_servers_LatLong */ 
