// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_sound_Music
#define INCLUDED_sound_Music

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(lime,media,AudioSource)
HX_DECLARE_CLASS1(sound,Music)

namespace sound{


class HXCPP_CLASS_ATTRIBUTES Music_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Music_obj OBJ_;
		Music_obj();

	public:
		enum { _hx_ClassId = 0x6fe0a396 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="sound.Music")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"sound.Music"); }

		inline static ::hx::ObjectPtr< Music_obj > __new() {
			::hx::ObjectPtr< Music_obj > __this = new Music_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Music_obj > __alloc(::hx::Ctx *_hx_ctx) {
			Music_obj *__this = (Music_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Music_obj), false, "sound.Music"));
			*(void **)__this = Music_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Music_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Music",85,40,88,a3); }

		static  ::lime::media::AudioSource music;
		static void load();
		static ::Dynamic load_dyn();

		static void setPlayMusic(bool playMusic);
		static ::Dynamic setPlayMusic_dyn();

};

} // end namespace sound

#endif /* INCLUDED_sound_Music */ 
