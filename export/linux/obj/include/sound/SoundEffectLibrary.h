// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_sound_SoundEffectLibrary
#define INCLUDED_sound_SoundEffectLibrary

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,StringMap)
HX_DECLARE_CLASS1(sound,SoundEffectLibrary)

namespace sound{


class HXCPP_CLASS_ATTRIBUTES SoundEffectLibrary_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef SoundEffectLibrary_obj OBJ_;
		SoundEffectLibrary_obj();

	public:
		enum { _hx_ClassId = 0x5832baa6 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="sound.SoundEffectLibrary")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"sound.SoundEffectLibrary"); }

		inline static ::hx::ObjectPtr< SoundEffectLibrary_obj > __new() {
			::hx::ObjectPtr< SoundEffectLibrary_obj > __this = new SoundEffectLibrary_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< SoundEffectLibrary_obj > __alloc(::hx::Ctx *_hx_ctx) {
			SoundEffectLibrary_obj *__this = (SoundEffectLibrary_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(SoundEffectLibrary_obj), false, "sound.SoundEffectLibrary"));
			*(void **)__this = SoundEffectLibrary_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~SoundEffectLibrary_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("SoundEffectLibrary",3b,aa,14,97); }

		static void __boot();
		static  ::haxe::ds::StringMap sfxCache;
		static void play(::String name,::hx::Null< Float >  volume,::hx::Null< bool >  isFX);
		static ::Dynamic play_dyn();

		static void setPlaySFX(bool playSFX);
		static ::Dynamic setPlaySFX_dyn();

};

} // end namespace sound

#endif /* INCLUDED_sound_SoundEffectLibrary */ 
