// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_map_CharacterStatusText
#define INCLUDED_map_CharacterStatusText

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(map,CharacterStatusText)
HX_DECLARE_CLASS1(objects,GameObject)
HX_DECLARE_CLASS2(openfl,display,BitmapData)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)

namespace map{


class HXCPP_CLASS_ATTRIBUTES CharacterStatusText_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef CharacterStatusText_obj OBJ_;
		CharacterStatusText_obj();

	public:
		enum { _hx_ClassId = 0x09053330 };

		void __construct( ::objects::GameObject go,::String text,int color,int lifetime);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="map.CharacterStatusText")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"map.CharacterStatusText"); }
		static ::hx::ObjectPtr< CharacterStatusText_obj > __new( ::objects::GameObject go,::String text,int color,int lifetime);
		static ::hx::ObjectPtr< CharacterStatusText_obj > __alloc(::hx::Ctx *_hx_ctx, ::objects::GameObject go,::String text,int color,int lifetime);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~CharacterStatusText_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("CharacterStatusText",e8,45,0c,70); }

		 ::objects::GameObject go;
		int color;
		int lifetime;
		bool disposed;
		int startTime;
		 ::openfl::display::BitmapData textTex;
		float xOffset;
		float yOffset;
};

} // end namespace map

#endif /* INCLUDED_map_CharacterStatusText */ 
