// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_map_RegionLibrary
#define INCLUDED_map_RegionLibrary

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Xml)
HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,IntMap)
HX_DECLARE_CLASS2(haxe,ds,StringMap)
HX_DECLARE_CLASS1(map,RegionLibrary)

namespace map{


class HXCPP_CLASS_ATTRIBUTES RegionLibrary_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef RegionLibrary_obj OBJ_;
		RegionLibrary_obj();

	public:
		enum { _hx_ClassId = 0x4a51eb8f };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="map.RegionLibrary")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"map.RegionLibrary"); }

		inline static ::hx::ObjectPtr< RegionLibrary_obj > __new() {
			::hx::ObjectPtr< RegionLibrary_obj > __this = new RegionLibrary_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< RegionLibrary_obj > __alloc(::hx::Ctx *_hx_ctx) {
			RegionLibrary_obj *__this = (RegionLibrary_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(RegionLibrary_obj), false, "map.RegionLibrary"));
			*(void **)__this = RegionLibrary_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~RegionLibrary_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("RegionLibrary",47,a4,51,17); }

		static void __boot();
		static  ::haxe::ds::IntMap xmlLibrary;
		static  ::haxe::ds::StringMap idToType;
		static void parseFromXML( ::Xml xml);
		static ::Dynamic parseFromXML_dyn();

		static ::String getIdFromType(int objType);
		static ::Dynamic getIdFromType_dyn();

		static int getColor(int objType);
		static ::Dynamic getColor_dyn();

};

} // end namespace map

#endif /* INCLUDED_map_RegionLibrary */ 
