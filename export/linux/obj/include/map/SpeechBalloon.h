// Generated by Haxe 4.3.0+731dcd7
#ifndef INCLUDED_map_SpeechBalloon
#define INCLUDED_map_SpeechBalloon

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(map,SpeechBalloon)
HX_DECLARE_CLASS1(objects,GameObject)
HX_DECLARE_CLASS2(openfl,display,BitmapData)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)

namespace map{


class HXCPP_CLASS_ATTRIBUTES SpeechBalloon_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef SpeechBalloon_obj OBJ_;
		SpeechBalloon_obj();

	public:
		enum { _hx_ClassId = 0x11496bd5 };

		void __construct( ::objects::GameObject go,::String text,int sbType,int lifetime);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="map.SpeechBalloon")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"map.SpeechBalloon"); }
		static ::hx::ObjectPtr< SpeechBalloon_obj > __new( ::objects::GameObject go,::String text,int sbType,int lifetime);
		static ::hx::ObjectPtr< SpeechBalloon_obj > __alloc(::hx::Ctx *_hx_ctx, ::objects::GameObject go,::String text,int sbType,int lifetime);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~SpeechBalloon_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("SpeechBalloon",8d,24,49,de); }

		 ::objects::GameObject go;
		int lifetime;
		 ::openfl::display::BitmapData textTex;
		int numLines;
		bool disposed;
		int startTime;
		int sbType;
};

} // end namespace map

#endif /* INCLUDED_map_SpeechBalloon */ 
