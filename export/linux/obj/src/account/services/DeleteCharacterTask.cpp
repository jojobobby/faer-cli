// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_Global
#include <Global.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_account_Account
#include <account/Account.h>
#endif
#ifndef INCLUDED_account_services_DeleteCharacterTask
#include <account/services/DeleteCharacterTask.h>
#endif
#ifndef INCLUDED_appengine_CompletionData
#include <appengine/CompletionData.h>
#endif
#ifndef INCLUDED_appengine_RequestHandler
#include <appengine/RequestHandler.h>
#endif
#ifndef INCLUDED_appengine_SavedCharacter
#include <appengine/SavedCharacter.h>
#endif
#ifndef INCLUDED_characters_CharacterModel
#include <characters/CharacterModel.h>
#endif
#ifndef INCLUDED_haxe_http_HttpBase
#include <haxe/http/HttpBase.h>
#endif
#ifndef INCLUDED_lib_tasks_Task
#include <lib/tasks/Task.h>
#endif
#ifndef INCLUDED_sys_Http
#include <sys/Http.h>
#endif
#ifndef INCLUDED_util_Signal
#include <util/Signal.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_453c75d88834b173_9_new,"account.services.DeleteCharacterTask","new",0x83dc57c6,"account.services.DeleteCharacterTask.new","account/services/DeleteCharacterTask.hx",9,0xe9ada24a)
HX_LOCAL_STACK_FRAME(_hx_pos_453c75d88834b173_10_startTask,"account.services.DeleteCharacterTask","startTask",0x429f50ad,"account.services.DeleteCharacterTask.startTask","account/services/DeleteCharacterTask.hx",10,0xe9ada24a)
HX_LOCAL_STACK_FRAME(_hx_pos_453c75d88834b173_19_onComplete,"account.services.DeleteCharacterTask","onComplete",0x3f3ea652,"account.services.DeleteCharacterTask.onComplete","account/services/DeleteCharacterTask.hx",19,0xe9ada24a)
HX_LOCAL_STACK_FRAME(_hx_pos_453c75d88834b173_27_updateUserData,"account.services.DeleteCharacterTask","updateUserData",0xf8df0f98,"account.services.DeleteCharacterTask.updateUserData","account/services/DeleteCharacterTask.hx",27,0xe9ada24a)
namespace account{
namespace services{

void DeleteCharacterTask_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_453c75d88834b173_9_new)
HXDLIN(   9)		super::__construct();
            	}

Dynamic DeleteCharacterTask_obj::__CreateEmpty() { return new DeleteCharacterTask_obj; }

void *DeleteCharacterTask_obj::_hx_vtable = 0;

Dynamic DeleteCharacterTask_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< DeleteCharacterTask_obj > _hx_result = new DeleteCharacterTask_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool DeleteCharacterTask_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x435bee18) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x435bee18;
	} else {
		return inClassId==(int)0x7e99215e;
	}
}

void DeleteCharacterTask_obj::startTask(){
            	HX_STACKFRAME(&_hx_pos_453c75d88834b173_10_startTask)
HXLINE(  11)		::appengine::RequestHandler_obj::http->setParameter(HX_("email",1c,cf,ce,6f),::account::Account_obj::email);
HXLINE(  12)		::appengine::RequestHandler_obj::http->setParameter(HX_("password",1b,23,d0,48),::account::Account_obj::password);
HXLINE(  13)		{
HXLINE(  13)			::String value = ::Std_obj::string(::Global_obj::charModel->getSelected()->charId());
HXDLIN(  13)			::appengine::RequestHandler_obj::http->setParameter(HX_("charId",51,80,75,b7),value);
            		}
HXLINE(  14)		::appengine::RequestHandler_obj::maxRetries = 2;
HXLINE(  15)		::appengine::RequestHandler_obj::complete->once(this->onComplete_dyn());
HXLINE(  16)		::appengine::RequestHandler_obj::sendRequest(HX_("/char/delete",b5,75,a2,79));
            	}


void DeleteCharacterTask_obj::onComplete( ::appengine::CompletionData compData){
            	HX_STACKFRAME(&_hx_pos_453c75d88834b173_19_onComplete)
HXLINE(  20)		if (compData->success) {
HXLINE(  21)			::account::services::DeleteCharacterTask_obj::updateUserData();
            		}
HXLINE(  23)		this->completeTask(compData->success,compData->result);
            	}


HX_DEFINE_DYNAMIC_FUNC1(DeleteCharacterTask_obj,onComplete,(void))

void DeleteCharacterTask_obj::updateUserData(){
            	HX_STACKFRAME(&_hx_pos_453c75d88834b173_27_updateUserData)
HXDLIN(  27)		 ::characters::CharacterModel _hx_tmp = ::Global_obj::charModel;
HXDLIN(  27)		_hx_tmp->deleteCharacter(( (int)(::Global_obj::charModel->getSelected()->charId()) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(DeleteCharacterTask_obj,updateUserData,(void))


::hx::ObjectPtr< DeleteCharacterTask_obj > DeleteCharacterTask_obj::__new() {
	::hx::ObjectPtr< DeleteCharacterTask_obj > __this = new DeleteCharacterTask_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< DeleteCharacterTask_obj > DeleteCharacterTask_obj::__alloc(::hx::Ctx *_hx_ctx) {
	DeleteCharacterTask_obj *__this = (DeleteCharacterTask_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(DeleteCharacterTask_obj), true, "account.services.DeleteCharacterTask"));
	*(void **)__this = DeleteCharacterTask_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

DeleteCharacterTask_obj::DeleteCharacterTask_obj()
{
}

::hx::Val DeleteCharacterTask_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"startTask") ) { return ::hx::Val( startTask_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"onComplete") ) { return ::hx::Val( onComplete_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool DeleteCharacterTask_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 14:
		if (HX_FIELD_EQ(inName,"updateUserData") ) { outValue = updateUserData_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *DeleteCharacterTask_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *DeleteCharacterTask_obj_sStaticStorageInfo = 0;
#endif

static ::String DeleteCharacterTask_obj_sMemberFields[] = {
	HX_("startTask",c7,38,ea,05),
	HX_("onComplete",f8,d4,7e,5d),
	::String(null()) };

::hx::Class DeleteCharacterTask_obj::__mClass;

static ::String DeleteCharacterTask_obj_sStaticFields[] = {
	HX_("updateUserData",3e,89,52,3a),
	::String(null())
};

void DeleteCharacterTask_obj::__register()
{
	DeleteCharacterTask_obj _hx_dummy;
	DeleteCharacterTask_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("account.services.DeleteCharacterTask",d4,bc,9f,43);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &DeleteCharacterTask_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(DeleteCharacterTask_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(DeleteCharacterTask_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< DeleteCharacterTask_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DeleteCharacterTask_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DeleteCharacterTask_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace account
} // end namespace services
