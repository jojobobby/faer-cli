// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_account_Account
#include <account/Account.h>
#endif
#ifndef INCLUDED_account_ChangePasswordData
#include <account/ChangePasswordData.h>
#endif
#ifndef INCLUDED_account_services_ChangePasswordTask
#include <account/services/ChangePasswordTask.h>
#endif
#ifndef INCLUDED_appengine_CompletionData
#include <appengine/CompletionData.h>
#endif
#ifndef INCLUDED_appengine_RequestHandler
#include <appengine/RequestHandler.h>
#endif
#ifndef INCLUDED_haxe_http_HttpBase
#include <haxe/http/HttpBase.h>
#endif
#ifndef INCLUDED_lib_tasks_Task
#include <lib/tasks/Task.h>
#endif
#ifndef INCLUDED_sys_Http
#include <sys/Http.h>
#endif
#ifndef INCLUDED_util_Signal
#include <util/Signal.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_ec63eebcd5845952_8_new,"account.services.ChangePasswordTask","new",0xb884e6b1,"account.services.ChangePasswordTask.new","account/services/ChangePasswordTask.hx",8,0x33fb75ff)
HX_LOCAL_STACK_FRAME(_hx_pos_ec63eebcd5845952_11_startTask,"account.services.ChangePasswordTask","startTask",0x795a61d8,"account.services.ChangePasswordTask.startTask","account/services/ChangePasswordTask.hx",11,0x33fb75ff)
HX_LOCAL_STACK_FRAME(_hx_pos_ec63eebcd5845952_19_onComplete,"account.services.ChangePasswordTask","onComplete",0xec329ac7,"account.services.ChangePasswordTask.onComplete","account/services/ChangePasswordTask.hx",19,0x33fb75ff)
HX_LOCAL_STACK_FRAME(_hx_pos_ec63eebcd5845952_27_onChangeDone,"account.services.ChangePasswordTask","onChangeDone",0x6c86dfa0,"account.services.ChangePasswordTask.onChangeDone","account/services/ChangePasswordTask.hx",27,0x33fb75ff)
namespace account{
namespace services{

void ChangePasswordTask_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_ec63eebcd5845952_8_new)
HXDLIN(   8)		super::__construct();
            	}

Dynamic ChangePasswordTask_obj::__CreateEmpty() { return new ChangePasswordTask_obj; }

void *ChangePasswordTask_obj::_hx_vtable = 0;

Dynamic ChangePasswordTask_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ChangePasswordTask_obj > _hx_result = new ChangePasswordTask_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ChangePasswordTask_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x55b85d7b) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x55b85d7b;
	} else {
		return inClassId==(int)0x7e99215e;
	}
}

void ChangePasswordTask_obj::startTask(){
            	HX_STACKFRAME(&_hx_pos_ec63eebcd5845952_11_startTask)
HXLINE(  12)		::appengine::RequestHandler_obj::http->setParameter(HX_("email",1c,cf,ce,6f),::account::Account_obj::email);
HXLINE(  13)		::appengine::RequestHandler_obj::http->setParameter(HX_("password",1b,23,d0,48),::account::services::ChangePasswordTask_obj::changePwData->currentPassword);
HXLINE(  14)		::appengine::RequestHandler_obj::http->setParameter(HX_("newPassword",9b,0f,ad,6d),::account::services::ChangePasswordTask_obj::changePwData->newPassword);
HXLINE(  15)		::appengine::RequestHandler_obj::complete->once(this->onComplete_dyn());
HXLINE(  16)		::appengine::RequestHandler_obj::sendRequest(HX_("/account/changePassword",7c,de,5d,54));
            	}


void ChangePasswordTask_obj::onComplete( ::appengine::CompletionData compData){
            	HX_STACKFRAME(&_hx_pos_ec63eebcd5845952_19_onComplete)
HXLINE(  20)		if (compData->success) {
HXLINE(  21)			this->onChangeDone();
            		}
HXLINE(  22)		::account::services::ChangePasswordTask_obj::changePwData = null();
HXLINE(  23)		this->completeTask(compData->success,compData->result);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ChangePasswordTask_obj,onComplete,(void))

void ChangePasswordTask_obj::onChangeDone(){
            	HX_STACKFRAME(&_hx_pos_ec63eebcd5845952_27_onChangeDone)
HXDLIN(  27)		::account::Account_obj::updateUser(::account::Account_obj::userName,::account::Account_obj::email,::account::services::ChangePasswordTask_obj::changePwData->newPassword);
            	}


HX_DEFINE_DYNAMIC_FUNC0(ChangePasswordTask_obj,onChangeDone,(void))

 ::account::ChangePasswordData ChangePasswordTask_obj::changePwData;


::hx::ObjectPtr< ChangePasswordTask_obj > ChangePasswordTask_obj::__new() {
	::hx::ObjectPtr< ChangePasswordTask_obj > __this = new ChangePasswordTask_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< ChangePasswordTask_obj > ChangePasswordTask_obj::__alloc(::hx::Ctx *_hx_ctx) {
	ChangePasswordTask_obj *__this = (ChangePasswordTask_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ChangePasswordTask_obj), true, "account.services.ChangePasswordTask"));
	*(void **)__this = ChangePasswordTask_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

ChangePasswordTask_obj::ChangePasswordTask_obj()
{
}

::hx::Val ChangePasswordTask_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"startTask") ) { return ::hx::Val( startTask_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"onComplete") ) { return ::hx::Val( onComplete_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"onChangeDone") ) { return ::hx::Val( onChangeDone_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool ChangePasswordTask_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 12:
		if (HX_FIELD_EQ(inName,"changePwData") ) { outValue = ( changePwData ); return true; }
	}
	return false;
}

bool ChangePasswordTask_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 12:
		if (HX_FIELD_EQ(inName,"changePwData") ) { changePwData=ioValue.Cast<  ::account::ChangePasswordData >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *ChangePasswordTask_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo ChangePasswordTask_obj_sStaticStorageInfo[] = {
	{::hx::fsObject /*  ::account::ChangePasswordData */ ,(void *) &ChangePasswordTask_obj::changePwData,HX_("changePwData",61,ad,11,61)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static ::String ChangePasswordTask_obj_sMemberFields[] = {
	HX_("startTask",c7,38,ea,05),
	HX_("onComplete",f8,d4,7e,5d),
	HX_("onChangeDone",11,c8,fa,f4),
	::String(null()) };

static void ChangePasswordTask_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ChangePasswordTask_obj::changePwData,"changePwData");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ChangePasswordTask_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ChangePasswordTask_obj::changePwData,"changePwData");
};

#endif

::hx::Class ChangePasswordTask_obj::__mClass;

static ::String ChangePasswordTask_obj_sStaticFields[] = {
	HX_("changePwData",61,ad,11,61),
	::String(null())
};

void ChangePasswordTask_obj::__register()
{
	ChangePasswordTask_obj _hx_dummy;
	ChangePasswordTask_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("account.services.ChangePasswordTask",3f,ba,25,d5);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ChangePasswordTask_obj::__GetStatic;
	__mClass->mSetStaticField = &ChangePasswordTask_obj::__SetStatic;
	__mClass->mMarkFunc = ChangePasswordTask_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(ChangePasswordTask_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ChangePasswordTask_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ChangePasswordTask_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ChangePasswordTask_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ChangePasswordTask_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ChangePasswordTask_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace account
} // end namespace services
