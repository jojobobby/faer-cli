// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_account_Account
#include <account/Account.h>
#endif
#ifndef INCLUDED_account_services_SendPasswordReminderTask
#include <account/services/SendPasswordReminderTask.h>
#endif
#ifndef INCLUDED_appengine_CompletionData
#include <appengine/CompletionData.h>
#endif
#ifndef INCLUDED_appengine_RequestHandler
#include <appengine/RequestHandler.h>
#endif
#ifndef INCLUDED_haxe_http_HttpBase
#include <haxe/http/HttpBase.h>
#endif
#ifndef INCLUDED_lib_tasks_Task
#include <lib/tasks/Task.h>
#endif
#ifndef INCLUDED_sys_Http
#include <sys/Http.h>
#endif
#ifndef INCLUDED_util_Signal
#include <util/Signal.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_a9219d6ebf1e1677_8_new,"account.services.SendPasswordReminderTask","new",0xcecad45b,"account.services.SendPasswordReminderTask.new","account/services/SendPasswordReminderTask.hx",8,0x63d04395)
HX_LOCAL_STACK_FRAME(_hx_pos_a9219d6ebf1e1677_11_startTask,"account.services.SendPasswordReminderTask","startTask",0x0d90eb02,"account.services.SendPasswordReminderTask.startTask","account/services/SendPasswordReminderTask.hx",11,0x63d04395)
HX_LOCAL_STACK_FRAME(_hx_pos_a9219d6ebf1e1677_17_onComplete,"account.services.SendPasswordReminderTask","onComplete",0x07b4165d,"account.services.SendPasswordReminderTask.onComplete","account/services/SendPasswordReminderTask.hx",17,0x63d04395)
HX_LOCAL_STACK_FRAME(_hx_pos_a9219d6ebf1e1677_26_onForgotDone,"account.services.SendPasswordReminderTask","onForgotDone",0x0ca91ea9,"account.services.SendPasswordReminderTask.onForgotDone","account/services/SendPasswordReminderTask.hx",26,0x63d04395)
HX_LOCAL_STACK_FRAME(_hx_pos_a9219d6ebf1e1677_30_onForgotError,"account.services.SendPasswordReminderTask","onForgotError",0x9cb6ffc1,"account.services.SendPasswordReminderTask.onForgotError","account/services/SendPasswordReminderTask.hx",30,0x63d04395)
HX_LOCAL_STACK_FRAME(_hx_pos_a9219d6ebf1e1677_9_boot,"account.services.SendPasswordReminderTask","boot",0x1ac7fbd7,"account.services.SendPasswordReminderTask.boot","account/services/SendPasswordReminderTask.hx",9,0x63d04395)
namespace account{
namespace services{

void SendPasswordReminderTask_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_a9219d6ebf1e1677_8_new)
HXDLIN(   8)		super::__construct();
            	}

Dynamic SendPasswordReminderTask_obj::__CreateEmpty() { return new SendPasswordReminderTask_obj; }

void *SendPasswordReminderTask_obj::_hx_vtable = 0;

Dynamic SendPasswordReminderTask_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< SendPasswordReminderTask_obj > _hx_result = new SendPasswordReminderTask_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool SendPasswordReminderTask_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x53d8c55d) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x53d8c55d;
	} else {
		return inClassId==(int)0x7e99215e;
	}
}

void SendPasswordReminderTask_obj::startTask(){
            	HX_STACKFRAME(&_hx_pos_a9219d6ebf1e1677_11_startTask)
HXLINE(  12)		::appengine::RequestHandler_obj::http->setParameter(HX_("email",1c,cf,ce,6f),::account::Account_obj::email);
HXLINE(  13)		::appengine::RequestHandler_obj::complete->once(this->onComplete_dyn());
HXLINE(  14)		::appengine::RequestHandler_obj::sendRequest(HX_("/account/forgotPassword",ef,85,c3,ba));
            	}


void SendPasswordReminderTask_obj::onComplete( ::appengine::CompletionData compData){
            	HX_STACKFRAME(&_hx_pos_a9219d6ebf1e1677_17_onComplete)
HXLINE(  18)		::account::services::SendPasswordReminderTask_obj::email = null();
HXLINE(  19)		if (compData->success) {
HXLINE(  20)			this->onForgotDone();
            		}
            		else {
HXLINE(  22)			this->onForgotError(compData->result);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(SendPasswordReminderTask_obj,onComplete,(void))

void SendPasswordReminderTask_obj::onForgotDone(){
            	HX_STACKFRAME(&_hx_pos_a9219d6ebf1e1677_26_onForgotDone)
HXDLIN(  26)		this->completeTask(true,null());
            	}


HX_DEFINE_DYNAMIC_FUNC0(SendPasswordReminderTask_obj,onForgotDone,(void))

void SendPasswordReminderTask_obj::onForgotError(::String error){
            	HX_STACKFRAME(&_hx_pos_a9219d6ebf1e1677_30_onForgotError)
HXDLIN(  30)		this->completeTask(false,error);
            	}


HX_DEFINE_DYNAMIC_FUNC1(SendPasswordReminderTask_obj,onForgotError,(void))

::String SendPasswordReminderTask_obj::email;


::hx::ObjectPtr< SendPasswordReminderTask_obj > SendPasswordReminderTask_obj::__new() {
	::hx::ObjectPtr< SendPasswordReminderTask_obj > __this = new SendPasswordReminderTask_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< SendPasswordReminderTask_obj > SendPasswordReminderTask_obj::__alloc(::hx::Ctx *_hx_ctx) {
	SendPasswordReminderTask_obj *__this = (SendPasswordReminderTask_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(SendPasswordReminderTask_obj), true, "account.services.SendPasswordReminderTask"));
	*(void **)__this = SendPasswordReminderTask_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

SendPasswordReminderTask_obj::SendPasswordReminderTask_obj()
{
}

::hx::Val SendPasswordReminderTask_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"startTask") ) { return ::hx::Val( startTask_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"onComplete") ) { return ::hx::Val( onComplete_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"onForgotDone") ) { return ::hx::Val( onForgotDone_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"onForgotError") ) { return ::hx::Val( onForgotError_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool SendPasswordReminderTask_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"email") ) { outValue = ( email ); return true; }
	}
	return false;
}

bool SendPasswordReminderTask_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"email") ) { email=ioValue.Cast< ::String >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *SendPasswordReminderTask_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo SendPasswordReminderTask_obj_sStaticStorageInfo[] = {
	{::hx::fsString,(void *) &SendPasswordReminderTask_obj::email,HX_("email",1c,cf,ce,6f)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static ::String SendPasswordReminderTask_obj_sMemberFields[] = {
	HX_("startTask",c7,38,ea,05),
	HX_("onComplete",f8,d4,7e,5d),
	HX_("onForgotDone",04,fa,94,79),
	HX_("onForgotError",06,14,2b,7e),
	::String(null()) };

static void SendPasswordReminderTask_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(SendPasswordReminderTask_obj::email,"email");
};

#ifdef HXCPP_VISIT_ALLOCS
static void SendPasswordReminderTask_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(SendPasswordReminderTask_obj::email,"email");
};

#endif

::hx::Class SendPasswordReminderTask_obj::__mClass;

static ::String SendPasswordReminderTask_obj_sStaticFields[] = {
	HX_("email",1c,cf,ce,6f),
	::String(null())
};

void SendPasswordReminderTask_obj::__register()
{
	SendPasswordReminderTask_obj _hx_dummy;
	SendPasswordReminderTask_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("account.services.SendPasswordReminderTask",e9,0a,65,6f);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &SendPasswordReminderTask_obj::__GetStatic;
	__mClass->mSetStaticField = &SendPasswordReminderTask_obj::__SetStatic;
	__mClass->mMarkFunc = SendPasswordReminderTask_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(SendPasswordReminderTask_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(SendPasswordReminderTask_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< SendPasswordReminderTask_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = SendPasswordReminderTask_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = SendPasswordReminderTask_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = SendPasswordReminderTask_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void SendPasswordReminderTask_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_a9219d6ebf1e1677_9_boot)
HXDLIN(   9)		email = HX_("",00,00,00,00);
            	}
}

} // end namespace account
} // end namespace services
