// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_account_Account
#include <account/Account.h>
#endif
#ifndef INCLUDED_account_services_LoginTask
#include <account/services/LoginTask.h>
#endif
#ifndef INCLUDED_appengine_CompletionData
#include <appengine/CompletionData.h>
#endif
#ifndef INCLUDED_appengine_RequestHandler
#include <appengine/RequestHandler.h>
#endif
#ifndef INCLUDED_haxe_http_HttpBase
#include <haxe/http/HttpBase.h>
#endif
#ifndef INCLUDED_lib_tasks_Task
#include <lib/tasks/Task.h>
#endif
#ifndef INCLUDED_sys_Http
#include <sys/Http.h>
#endif
#ifndef INCLUDED_util_Signal
#include <util/Signal.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_b2babf1586e59219_10_new,"account.services.LoginTask","new",0x75808ef1,"account.services.LoginTask.new","account/services/LoginTask.hx",10,0x54a1217f)
HX_LOCAL_STACK_FRAME(_hx_pos_b2babf1586e59219_14_startTask,"account.services.LoginTask","startTask",0x1fe1ba18,"account.services.LoginTask.startTask","account/services/LoginTask.hx",14,0x54a1217f)
HX_LOCAL_STACK_FRAME(_hx_pos_b2babf1586e59219_26_onComplete,"account.services.LoginTask","onComplete",0xfc187a87,"account.services.LoginTask.onComplete","account/services/LoginTask.hx",26,0x54a1217f)
namespace account{
namespace services{

void LoginTask_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_b2babf1586e59219_10_new)
HXDLIN(  10)		super::__construct();
            	}

Dynamic LoginTask_obj::__CreateEmpty() { return new LoginTask_obj; }

void *LoginTask_obj::_hx_vtable = 0;

Dynamic LoginTask_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< LoginTask_obj > _hx_result = new LoginTask_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool LoginTask_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x156a44ef) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x156a44ef;
	} else {
		return inClassId==(int)0x7e99215e;
	}
}

void LoginTask_obj::startTask(){
            	HX_STACKFRAME(&_hx_pos_b2babf1586e59219_14_startTask)
HXDLIN(  14)		if ((::account::Account_obj::email != HX_("",00,00,00,00))) {
HXLINE(  15)			::appengine::RequestHandler_obj::http->setParameter(HX_("email",1c,cf,ce,6f),::account::Account_obj::email);
HXLINE(  16)			::appengine::RequestHandler_obj::http->setParameter(HX_("password",1b,23,d0,48),::account::Account_obj::password);
HXLINE(  17)			::appengine::RequestHandler_obj::http->setParameter(HX_("test",52,c8,f9,4c),HX_("123",32,5a,25,00));
HXLINE(  18)			::appengine::RequestHandler_obj::complete->once(this->onComplete_dyn());
HXLINE(  19)			::appengine::RequestHandler_obj::sendRequest(HX_("/account/verify",4a,48,17,19));
            		}
            		else {
HXLINE(  21)			::account::Account_obj::updateUser(HX_("Guest",b8,2e,16,2f),HX_("",00,00,00,00),HX_("",00,00,00,00));
HXLINE(  22)			this->completeTask(true,null());
            		}
            	}


void LoginTask_obj::onComplete( ::appengine::CompletionData compData){
            	HX_STACKFRAME(&_hx_pos_b2babf1586e59219_26_onComplete)
HXLINE(  27)		if (compData->success) {
HXLINE(  28)			::account::Account_obj::updateUser(HX_("",00,00,00,00),::account::Account_obj::email,::account::Account_obj::password);
            		}
HXLINE(  30)		this->completeTask(compData->success,compData->result);
            	}


HX_DEFINE_DYNAMIC_FUNC1(LoginTask_obj,onComplete,(void))


::hx::ObjectPtr< LoginTask_obj > LoginTask_obj::__new() {
	::hx::ObjectPtr< LoginTask_obj > __this = new LoginTask_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< LoginTask_obj > LoginTask_obj::__alloc(::hx::Ctx *_hx_ctx) {
	LoginTask_obj *__this = (LoginTask_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(LoginTask_obj), true, "account.services.LoginTask"));
	*(void **)__this = LoginTask_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

LoginTask_obj::LoginTask_obj()
{
}

::hx::Val LoginTask_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"startTask") ) { return ::hx::Val( startTask_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"onComplete") ) { return ::hx::Val( onComplete_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *LoginTask_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *LoginTask_obj_sStaticStorageInfo = 0;
#endif

static ::String LoginTask_obj_sMemberFields[] = {
	HX_("startTask",c7,38,ea,05),
	HX_("onComplete",f8,d4,7e,5d),
	::String(null()) };

::hx::Class LoginTask_obj::__mClass;

void LoginTask_obj::__register()
{
	LoginTask_obj _hx_dummy;
	LoginTask_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("account.services.LoginTask",7f,42,98,98);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(LoginTask_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< LoginTask_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = LoginTask_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = LoginTask_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace account
} // end namespace services
