// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_Global
#include <Global.h>
#endif
#ifndef INCLUDED_account_services_SendPasswordReminderTask
#include <account/services/SendPasswordReminderTask.h>
#endif
#ifndef INCLUDED_account_view_ForgotPasswordDialog
#include <account/view/ForgotPasswordDialog.h>
#endif
#ifndef INCLUDED_account_view_LoginDialog
#include <account/view/LoginDialog.h>
#endif
#ifndef INCLUDED_account_view_RegisterDialog
#include <account/view/RegisterDialog.h>
#endif
#ifndef INCLUDED_core_Layers
#include <core/Layers.h>
#endif
#ifndef INCLUDED_lib_tasks_Task
#include <lib/tasks/Task.h>
#endif
#ifndef INCLUDED_lib_tasks_TaskData
#include <lib/tasks/TaskData.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_MouseEvent
#include <openfl/events/MouseEvent.h>
#endif
#ifndef INCLUDED_ui_ClickableText
#include <ui/ClickableText.h>
#endif
#ifndef INCLUDED_ui_Frame
#include <ui/Frame.h>
#endif
#ifndef INCLUDED_ui_TextInputField
#include <ui/TextInputField.h>
#endif
#ifndef INCLUDED_ui_dialogs_DialogsView
#include <ui/dialogs/DialogsView.h>
#endif
#ifndef INCLUDED_util_Signal
#include <util/Signal.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_3368d9c5cee9f1b1_15_new,"account.view.ForgotPasswordDialog","new",0xf654b740,"account.view.ForgotPasswordDialog.new","account/view/ForgotPasswordDialog.hx",15,0xfbc61fd0)
HX_LOCAL_STACK_FRAME(_hx_pos_3368d9c5cee9f1b1_31_onAdded,"account.view.ForgotPasswordDialog","onAdded",0xcbaf4a01,"account.view.ForgotPasswordDialog.onAdded","account/view/ForgotPasswordDialog.hx",31,0xfbc61fd0)
HX_LOCAL_STACK_FRAME(_hx_pos_3368d9c5cee9f1b1_36_onRemoved,"account.view.ForgotPasswordDialog","onRemoved",0xec242721,"account.view.ForgotPasswordDialog.onRemoved","account/view/ForgotPasswordDialog.hx",36,0xfbc61fd0)
HX_LOCAL_STACK_FRAME(_hx_pos_3368d9c5cee9f1b1_51_isEmailValid,"account.view.ForgotPasswordDialog","isEmailValid",0xa10135ea,"account.view.ForgotPasswordDialog.isEmailValid","account/view/ForgotPasswordDialog.hx",51,0xfbc61fd0)
HX_LOCAL_STACK_FRAME(_hx_pos_3368d9c5cee9f1b1_59_onSubmit,"account.view.ForgotPasswordDialog","onSubmit",0x68a17bb7,"account.view.ForgotPasswordDialog.onSubmit","account/view/ForgotPasswordDialog.hx",59,0xfbc61fd0)
HX_LOCAL_STACK_FRAME(_hx_pos_3368d9c5cee9f1b1_66_onSubmit,"account.view.ForgotPasswordDialog","onSubmit",0x68a17bb7,"account.view.ForgotPasswordDialog.onSubmit","account/view/ForgotPasswordDialog.hx",66,0xfbc61fd0)
HX_LOCAL_STACK_FRAME(_hx_pos_3368d9c5cee9f1b1_44_onRegister,"account.view.ForgotPasswordDialog","onRegister",0xd7022fc2,"account.view.ForgotPasswordDialog.onRegister","account/view/ForgotPasswordDialog.hx",44,0xfbc61fd0)
HX_LOCAL_STACK_FRAME(_hx_pos_3368d9c5cee9f1b1_48_onCancel,"account.view.ForgotPasswordDialog","onCancel",0x86cf1119,"account.view.ForgotPasswordDialog.onCancel","account/view/ForgotPasswordDialog.hx",48,0xfbc61fd0)
namespace account{
namespace view{

void ForgotPasswordDialog_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_3368d9c5cee9f1b1_15_new)
HXLINE(  16)		super::__construct(HX_("Forgot your password?  We'll email it.",e4,26,35,f7),HX_("Cancel",9a,61,c8,ec),HX_("Submit",38,cc,9a,ce),null());
HXLINE(  18)		this->emailInput =  ::ui::TextInputField_obj::__alloc( HX_CTX ,HX_("Email",fc,3e,fc,02),false,HX_("",00,00,00,00));
HXLINE(  19)		this->addTextInputField(this->emailInput);
HXLINE(  21)		this->registerText =  ::ui::ClickableText_obj::__alloc( HX_CTX ,12,false,HX_("New user?  Click here to Register",44,1c,31,3c));
HXLINE(  22)		this->addNavigationText(this->registerText);
HXLINE(  23)		this->registerText->addEventListener(HX_("click",48,7c,5e,48),::account::view::ForgotPasswordDialog_obj::onRegister_dyn(),null(),null(),null());
HXLINE(  25)		this->leftButton->addEventListener(HX_("click",48,7c,5e,48),::account::view::ForgotPasswordDialog_obj::onCancel_dyn(),null(),null(),null());
HXLINE(  26)		this->rightButton->addEventListener(HX_("click",48,7c,5e,48),this->onSubmit_dyn(),null(),null(),null());
HXLINE(  28)		this->addEventListener(HX_("addedToStage",63,22,55,0c),this->onAdded_dyn(),null(),null(),null());
            	}

Dynamic ForgotPasswordDialog_obj::__CreateEmpty() { return new ForgotPasswordDialog_obj; }

void *ForgotPasswordDialog_obj::_hx_vtable = 0;

Dynamic ForgotPasswordDialog_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ForgotPasswordDialog_obj > _hx_result = new ForgotPasswordDialog_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ForgotPasswordDialog_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x3517a2f1) {
		if (inClassId<=(int)0x0c89e854) {
			if (inClassId<=(int)0x0330636f) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0330636f;
			} else {
				return inClassId==(int)0x0c89e854;
			}
		} else {
			return inClassId==(int)0x1f4df417 || inClassId==(int)0x3517a2f1;
		}
	} else {
		if (inClassId<=(int)0x4af7dd8e) {
			return inClassId==(int)0x38ca33d4 || inClassId==(int)0x4af7dd8e;
		} else {
			return inClassId==(int)0x6b353933;
		}
	}
}

void ForgotPasswordDialog_obj::onAdded( ::openfl::events::Event _){
            	HX_STACKFRAME(&_hx_pos_3368d9c5cee9f1b1_31_onAdded)
HXLINE(  32)		this->removeEventListener(HX_("addedToStage",63,22,55,0c),this->onAdded_dyn(),null());
HXLINE(  33)		this->addEventListener(HX_("removedFromStage",34,21,76,ba),this->onRemoved_dyn(),null(),null(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(ForgotPasswordDialog_obj,onAdded,(void))

void ForgotPasswordDialog_obj::onRemoved( ::openfl::events::Event _){
            	HX_STACKFRAME(&_hx_pos_3368d9c5cee9f1b1_36_onRemoved)
HXLINE(  37)		this->removeEventListener(HX_("removedFromStage",34,21,76,ba),this->onRemoved_dyn(),null());
HXLINE(  38)		this->registerText->removeEventListener(HX_("click",48,7c,5e,48),::account::view::ForgotPasswordDialog_obj::onRegister_dyn(),null());
HXLINE(  39)		this->leftButton->removeEventListener(HX_("click",48,7c,5e,48),::account::view::ForgotPasswordDialog_obj::onCancel_dyn(),null());
HXLINE(  40)		this->rightButton->removeEventListener(HX_("click",48,7c,5e,48),this->onSubmit_dyn(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(ForgotPasswordDialog_obj,onRemoved,(void))

bool ForgotPasswordDialog_obj::isEmailValid(){
            	HX_STACKFRAME(&_hx_pos_3368d9c5cee9f1b1_51_isEmailValid)
HXLINE(  52)		bool isValid = (this->emailInput->text() != HX_("",00,00,00,00));
HXLINE(  53)		if (!(isValid)) {
HXLINE(  54)			this->emailInput->setError(HX_("Not a valid email address",60,f8,d9,6a));
            		}
HXLINE(  56)		return isValid;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ForgotPasswordDialog_obj,isEmailValid,return )

void ForgotPasswordDialog_obj::onSubmit( ::openfl::events::MouseEvent _){
            	HX_STACKFRAME(&_hx_pos_3368d9c5cee9f1b1_59_onSubmit)
HXDLIN(  59)		 ::account::view::ForgotPasswordDialog _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE(  60)		if (this->isEmailValid()) {
            			HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::account::view::ForgotPasswordDialog,_gthis) HXARGC(1)
            			void _hx_run( ::lib::tasks::TaskData taskData){
            				HX_GC_STACKFRAME(&_hx_pos_3368d9c5cee9f1b1_66_onSubmit)
HXLINE(  66)				if (taskData->success) {
HXLINE(  67)					 ::ui::dialogs::DialogsView _hx_tmp = ::Global_obj::layers->dialogs;
HXDLIN(  67)					_hx_tmp->openDialog( ::account::view::LoginDialog_obj::__alloc( HX_CTX ));
            				}
            				else {
HXLINE(  69)					_gthis->emailInput->setError(taskData->error);
HXLINE(  70)					_gthis->enable();
            				}
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE(  61)			this->disable();
HXLINE(  63)			::account::services::SendPasswordReminderTask_obj::email = this->emailInput->text();
HXLINE(  65)			::Global_obj::sendPasswordReminderTask->finished->once( ::Dynamic(new _hx_Closure_0(_gthis)));
HXLINE(  73)			::Global_obj::sendPasswordReminderTask->start();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ForgotPasswordDialog_obj,onSubmit,(void))

void ForgotPasswordDialog_obj::onRegister( ::openfl::events::MouseEvent _){
            	HX_GC_STACKFRAME(&_hx_pos_3368d9c5cee9f1b1_44_onRegister)
HXDLIN(  44)		 ::ui::dialogs::DialogsView _hx_tmp = ::Global_obj::layers->dialogs;
HXDLIN(  44)		_hx_tmp->openDialog( ::account::view::RegisterDialog_obj::__alloc( HX_CTX ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ForgotPasswordDialog_obj,onRegister,(void))

void ForgotPasswordDialog_obj::onCancel( ::openfl::events::MouseEvent _){
            	HX_GC_STACKFRAME(&_hx_pos_3368d9c5cee9f1b1_48_onCancel)
HXDLIN(  48)		 ::ui::dialogs::DialogsView _hx_tmp = ::Global_obj::layers->dialogs;
HXDLIN(  48)		_hx_tmp->openDialog( ::account::view::LoginDialog_obj::__alloc( HX_CTX ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ForgotPasswordDialog_obj,onCancel,(void))


::hx::ObjectPtr< ForgotPasswordDialog_obj > ForgotPasswordDialog_obj::__new() {
	::hx::ObjectPtr< ForgotPasswordDialog_obj > __this = new ForgotPasswordDialog_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< ForgotPasswordDialog_obj > ForgotPasswordDialog_obj::__alloc(::hx::Ctx *_hx_ctx) {
	ForgotPasswordDialog_obj *__this = (ForgotPasswordDialog_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ForgotPasswordDialog_obj), true, "account.view.ForgotPasswordDialog"));
	*(void **)__this = ForgotPasswordDialog_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

ForgotPasswordDialog_obj::ForgotPasswordDialog_obj()
{
}

void ForgotPasswordDialog_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ForgotPasswordDialog);
	HX_MARK_MEMBER_NAME(emailInput,"emailInput");
	HX_MARK_MEMBER_NAME(registerText,"registerText");
	 ::ui::Frame_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void ForgotPasswordDialog_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(emailInput,"emailInput");
	HX_VISIT_MEMBER_NAME(registerText,"registerText");
	 ::ui::Frame_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val ForgotPasswordDialog_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"onAdded") ) { return ::hx::Val( onAdded_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"onSubmit") ) { return ::hx::Val( onSubmit_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"onRemoved") ) { return ::hx::Val( onRemoved_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"emailInput") ) { return ::hx::Val( emailInput ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"registerText") ) { return ::hx::Val( registerText ); }
		if (HX_FIELD_EQ(inName,"isEmailValid") ) { return ::hx::Val( isEmailValid_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool ForgotPasswordDialog_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"onCancel") ) { outValue = onCancel_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"onRegister") ) { outValue = onRegister_dyn(); return true; }
	}
	return false;
}

::hx::Val ForgotPasswordDialog_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"emailInput") ) { emailInput=inValue.Cast<  ::ui::TextInputField >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"registerText") ) { registerText=inValue.Cast<  ::ui::ClickableText >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ForgotPasswordDialog_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("emailInput",4e,1f,6c,e8));
	outFields->push(HX_("registerText",b0,0c,e9,c8));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo ForgotPasswordDialog_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::ui::TextInputField */ ,(int)offsetof(ForgotPasswordDialog_obj,emailInput),HX_("emailInput",4e,1f,6c,e8)},
	{::hx::fsObject /*  ::ui::ClickableText */ ,(int)offsetof(ForgotPasswordDialog_obj,registerText),HX_("registerText",b0,0c,e9,c8)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *ForgotPasswordDialog_obj_sStaticStorageInfo = 0;
#endif

static ::String ForgotPasswordDialog_obj_sMemberFields[] = {
	HX_("emailInput",4e,1f,6c,e8),
	HX_("registerText",b0,0c,e9,c8),
	HX_("onAdded",21,73,81,b2),
	HX_("onRemoved",41,d8,aa,ca),
	HX_("isEmailValid",ca,f8,25,2e),
	HX_("onSubmit",97,4e,b3,79),
	::String(null()) };

::hx::Class ForgotPasswordDialog_obj::__mClass;

static ::String ForgotPasswordDialog_obj_sStaticFields[] = {
	HX_("onRegister",a2,7a,56,ae),
	HX_("onCancel",f9,e3,e0,97),
	::String(null())
};

void ForgotPasswordDialog_obj::__register()
{
	ForgotPasswordDialog_obj _hx_dummy;
	ForgotPasswordDialog_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("account.view.ForgotPasswordDialog",4e,57,e0,a1);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ForgotPasswordDialog_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(ForgotPasswordDialog_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ForgotPasswordDialog_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ForgotPasswordDialog_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ForgotPasswordDialog_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ForgotPasswordDialog_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace account
} // end namespace view
