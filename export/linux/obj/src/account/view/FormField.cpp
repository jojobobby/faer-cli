// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_account_view_FormField
#include <account/view/FormField.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_Graphics
#include <openfl/display/Graphics.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_text_TextField
#include <openfl/text/TextField.h>
#endif
#ifndef INCLUDED_ui_SimpleText
#include <ui/SimpleText.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_b214d7680234c186_8_new,"account.view.FormField","new",0xad45bc00,"account.view.FormField.new","account/view/FormField.hx",8,0x8b6e2fd0)
HX_LOCAL_STACK_FRAME(_hx_pos_b214d7680234c186_18_drawSimpleTextBackground,"account.view.FormField","drawSimpleTextBackground",0xaa508d51,"account.view.FormField.drawSimpleTextBackground","account/view/FormField.hx",18,0x8b6e2fd0)
namespace account{
namespace view{

void FormField_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_b214d7680234c186_8_new)
HXDLIN(   8)		super::__construct();
            	}

Dynamic FormField_obj::__CreateEmpty() { return new FormField_obj; }

void *FormField_obj::_hx_vtable = 0;

Dynamic FormField_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< FormField_obj > _hx_result = new FormField_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool FormField_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x18964090) {
		if (inClassId<=(int)0x0c89e854) {
			if (inClassId<=(int)0x0330636f) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0330636f;
			} else {
				return inClassId==(int)0x0c89e854;
			}
		} else {
			return inClassId==(int)0x18964090;
		}
	} else {
		if (inClassId<=(int)0x4af7dd8e) {
			return inClassId==(int)0x1f4df417 || inClassId==(int)0x4af7dd8e;
		} else {
			return inClassId==(int)0x6b353933;
		}
	}
}

void FormField_obj::drawSimpleTextBackground( ::ui::SimpleText simpleText,int hPadding,int vPadding,bool hasError){
            	HX_STACKFRAME(&_hx_pos_b214d7680234c186_18_drawSimpleTextBackground)
HXLINE(  19)		int borderColor;
HXDLIN(  19)		if (hasError) {
HXLINE(  19)			borderColor = 16549442;
            		}
            		else {
HXLINE(  19)			borderColor = 4539717;
            		}
HXLINE(  20)		this->get_graphics()->lineStyle(2,borderColor,1,false,2,1,2,null());
HXLINE(  21)		this->get_graphics()->beginFill(3355443,1);
HXLINE(  22)		 ::openfl::display::Graphics _hx_tmp = this->get_graphics();
HXDLIN(  22)		Float _hx_tmp1 = ((simpleText->get_x() - ( (Float)(hPadding) )) - ( (Float)(5) ));
HXDLIN(  22)		Float _hx_tmp2 = (simpleText->get_y() - ( (Float)(vPadding) ));
HXDLIN(  22)		Float _hx_tmp3 = (simpleText->get_width() + (hPadding * 2));
HXDLIN(  22)		_hx_tmp->drawRect(_hx_tmp1,_hx_tmp2,_hx_tmp3,(simpleText->get_height() + (vPadding * 2)));
HXLINE(  23)		this->get_graphics()->endFill();
HXLINE(  24)		this->get_graphics()->lineStyle(null(),null(),null(),null(),null(),null(),null(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC4(FormField_obj,drawSimpleTextBackground,(void))


::hx::ObjectPtr< FormField_obj > FormField_obj::__new() {
	::hx::ObjectPtr< FormField_obj > __this = new FormField_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< FormField_obj > FormField_obj::__alloc(::hx::Ctx *_hx_ctx) {
	FormField_obj *__this = (FormField_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(FormField_obj), true, "account.view.FormField"));
	*(void **)__this = FormField_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

FormField_obj::FormField_obj()
{
}

::hx::Val FormField_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 24:
		if (HX_FIELD_EQ(inName,"drawSimpleTextBackground") ) { return ::hx::Val( drawSimpleTextBackground_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *FormField_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *FormField_obj_sStaticStorageInfo = 0;
#endif

static ::String FormField_obj_sMemberFields[] = {
	HX_("drawSimpleTextBackground",f1,dc,ad,43),
	::String(null()) };

::hx::Class FormField_obj::__mClass;

void FormField_obj::__register()
{
	FormField_obj _hx_dummy;
	FormField_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("account.view.FormField",0e,fc,3f,79);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(FormField_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< FormField_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FormField_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FormField_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace account
} // end namespace view
