// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_account_view_FormField
#include <account/view/FormField.h>
#endif
#ifndef INCLUDED_account_view_LabeledField
#include <account/view/LabeledField.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_filters_BitmapFilter
#include <openfl/filters/BitmapFilter.h>
#endif
#ifndef INCLUDED_openfl_filters_DropShadowFilter
#include <openfl/filters/DropShadowFilter.h>
#endif
#ifndef INCLUDED_openfl_text_TextField
#include <openfl/text/TextField.h>
#endif
#ifndef INCLUDED_ui_SimpleText
#include <ui/SimpleText.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_bc1f566d96947752_7_new,"account.view.LabeledField","new",0xc85c14a1,"account.view.LabeledField.new","account/view/LabeledField.hx",7,0xb3baa98f)
HX_LOCAL_STACK_FRAME(_hx_pos_bc1f566d96947752_32_getHeight,"account.view.LabeledField","getHeight",0x3f28fc1e,"account.view.LabeledField.getHeight","account/view/LabeledField.hx",32,0xb3baa98f)
HX_LOCAL_STACK_FRAME(_hx_pos_bc1f566d96947752_36_text,"account.view.LabeledField","text",0x8c2d414c,"account.view.LabeledField.text","account/view/LabeledField.hx",36,0xb3baa98f)
HX_LOCAL_STACK_FRAME(_hx_pos_bc1f566d96947752_39_setErrorHighlight,"account.view.LabeledField","setErrorHighlight",0x3c020c8f,"account.view.LabeledField.setErrorHighlight","account/view/LabeledField.hx",39,0xb3baa98f)
namespace account{
namespace view{

void LabeledField_obj::__construct(::String name,bool isPassword,::hx::Null< int >  __o_w,::hx::Null< int >  __o_h){
            		int w = __o_w.Default(238);
            		int h = __o_h.Default(30);
            	HX_GC_STACKFRAME(&_hx_pos_bc1f566d96947752_7_new)
HXLINE(  10)		this->isHighlighted = false;
HXLINE(  13)		super::__construct();
HXLINE(  15)		this->nameText =  ::ui::SimpleText_obj::__alloc( HX_CTX ,18,11776947,false,0,0,null());
HXLINE(  16)		this->nameText->setBold(true);
HXLINE(  17)		this->nameText->set_text(name);
HXLINE(  18)		this->nameText->updateMetrics();
HXLINE(  19)		 ::ui::SimpleText _hx_tmp = this->nameText;
HXDLIN(  19)		_hx_tmp->set_filters(::Array_obj< ::Dynamic>::__new(1)->init(0, ::openfl::filters::DropShadowFilter_obj::__alloc( HX_CTX ,0,0,0,null(),null(),null(),null(),null(),null(),null(),null())));
HXLINE(  20)		this->addChild(this->nameText);
HXLINE(  21)		this->inputText =  ::ui::SimpleText_obj::__alloc( HX_CTX ,20,11776947,true,w,h,null());
HXLINE(  22)		this->inputText->set_y(( (Float)(30) ));
HXLINE(  23)		this->inputText->set_x(( (Float)(6) ));
HXLINE(  24)		this->inputText->set_border(false);
HXLINE(  25)		this->inputText->set_displayAsPassword(isPassword);
HXLINE(  26)		this->inputText->updateMetrics();
HXLINE(  27)		this->addChild(this->inputText);
HXLINE(  28)		this->setErrorHighlight(false);
            	}

Dynamic LabeledField_obj::__CreateEmpty() { return new LabeledField_obj; }

void *LabeledField_obj::_hx_vtable = 0;

Dynamic LabeledField_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< LabeledField_obj > _hx_result = new LabeledField_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3]);
	return _hx_result;
}

bool LabeledField_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x18964090) {
		if (inClassId<=(int)0x0b4d28ed) {
			if (inClassId<=(int)0x0330636f) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0330636f;
			} else {
				return inClassId==(int)0x0b4d28ed;
			}
		} else {
			return inClassId==(int)0x0c89e854 || inClassId==(int)0x18964090;
		}
	} else {
		if (inClassId<=(int)0x4af7dd8e) {
			return inClassId==(int)0x1f4df417 || inClassId==(int)0x4af7dd8e;
		} else {
			return inClassId==(int)0x6b353933;
		}
	}
}

int LabeledField_obj::getHeight(){
            	HX_STACKFRAME(&_hx_pos_bc1f566d96947752_32_getHeight)
HXDLIN(  32)		return 68;
            	}


HX_DEFINE_DYNAMIC_FUNC0(LabeledField_obj,getHeight,return )

::String LabeledField_obj::text(){
            	HX_STACKFRAME(&_hx_pos_bc1f566d96947752_36_text)
HXDLIN(  36)		return this->inputText->get_text();
            	}


HX_DEFINE_DYNAMIC_FUNC0(LabeledField_obj,text,return )

void LabeledField_obj::setErrorHighlight(bool hasError){
            	HX_STACKFRAME(&_hx_pos_bc1f566d96947752_39_setErrorHighlight)
HXLINE(  40)		this->isHighlighted = hasError;
HXLINE(  41)		this->drawSimpleTextBackground(this->inputText,0,0,hasError);
            	}


HX_DEFINE_DYNAMIC_FUNC1(LabeledField_obj,setErrorHighlight,(void))


::hx::ObjectPtr< LabeledField_obj > LabeledField_obj::__new(::String name,bool isPassword,::hx::Null< int >  __o_w,::hx::Null< int >  __o_h) {
	::hx::ObjectPtr< LabeledField_obj > __this = new LabeledField_obj();
	__this->__construct(name,isPassword,__o_w,__o_h);
	return __this;
}

::hx::ObjectPtr< LabeledField_obj > LabeledField_obj::__alloc(::hx::Ctx *_hx_ctx,::String name,bool isPassword,::hx::Null< int >  __o_w,::hx::Null< int >  __o_h) {
	LabeledField_obj *__this = (LabeledField_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(LabeledField_obj), true, "account.view.LabeledField"));
	*(void **)__this = LabeledField_obj::_hx_vtable;
	__this->__construct(name,isPassword,__o_w,__o_h);
	return __this;
}

LabeledField_obj::LabeledField_obj()
{
}

void LabeledField_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(LabeledField);
	HX_MARK_MEMBER_NAME(nameText,"nameText");
	HX_MARK_MEMBER_NAME(inputText,"inputText");
	HX_MARK_MEMBER_NAME(isHighlighted,"isHighlighted");
	 ::openfl::display::Sprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void LabeledField_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(nameText,"nameText");
	HX_VISIT_MEMBER_NAME(inputText,"inputText");
	HX_VISIT_MEMBER_NAME(isHighlighted,"isHighlighted");
	 ::openfl::display::Sprite_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val LabeledField_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"text") ) { return ::hx::Val( text_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"nameText") ) { return ::hx::Val( nameText ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"inputText") ) { return ::hx::Val( inputText ); }
		if (HX_FIELD_EQ(inName,"getHeight") ) { return ::hx::Val( getHeight_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"isHighlighted") ) { return ::hx::Val( isHighlighted ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"setErrorHighlight") ) { return ::hx::Val( setErrorHighlight_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val LabeledField_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"nameText") ) { nameText=inValue.Cast<  ::ui::SimpleText >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"inputText") ) { inputText=inValue.Cast<  ::ui::SimpleText >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"isHighlighted") ) { isHighlighted=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void LabeledField_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("nameText",98,ec,80,49));
	outFields->push(HX_("inputText",d7,89,24,14));
	outFields->push(HX_("isHighlighted",c9,f3,8d,77));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo LabeledField_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::ui::SimpleText */ ,(int)offsetof(LabeledField_obj,nameText),HX_("nameText",98,ec,80,49)},
	{::hx::fsObject /*  ::ui::SimpleText */ ,(int)offsetof(LabeledField_obj,inputText),HX_("inputText",d7,89,24,14)},
	{::hx::fsBool,(int)offsetof(LabeledField_obj,isHighlighted),HX_("isHighlighted",c9,f3,8d,77)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *LabeledField_obj_sStaticStorageInfo = 0;
#endif

static ::String LabeledField_obj_sMemberFields[] = {
	HX_("nameText",98,ec,80,49),
	HX_("inputText",d7,89,24,14),
	HX_("isHighlighted",c9,f3,8d,77),
	HX_("getHeight",1d,91,a2,7e),
	HX_("text",ad,cc,f9,4c),
	HX_("setErrorHighlight",8e,38,a7,cb),
	::String(null()) };

::hx::Class LabeledField_obj::__mClass;

void LabeledField_obj::__register()
{
	LabeledField_obj _hx_dummy;
	LabeledField_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("account.view.LabeledField",2f,30,73,a8);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(LabeledField_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< LabeledField_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = LabeledField_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = LabeledField_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace account
} // end namespace view
