// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_assets_CharacterTemplate
#include <assets/CharacterTemplate.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_6d37b9b73b19d06a_3_new,"assets.CharacterTemplate","new",0xa6833f2a,"assets.CharacterTemplate.new","assets/CharacterTemplate.hx",3,0xc435ba07)
namespace assets{

void CharacterTemplate_obj::__construct(::String file,int index){
            	HX_STACKFRAME(&_hx_pos_6d37b9b73b19d06a_3_new)
HXLINE(   5)		this->index = 0;
HXLINE(   4)		this->file = HX_("",00,00,00,00);
HXLINE(   8)		this->file = file;
HXLINE(   9)		this->index = index;
            	}

Dynamic CharacterTemplate_obj::__CreateEmpty() { return new CharacterTemplate_obj; }

void *CharacterTemplate_obj::_hx_vtable = 0;

Dynamic CharacterTemplate_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< CharacterTemplate_obj > _hx_result = new CharacterTemplate_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool CharacterTemplate_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x62aefadc;
}


CharacterTemplate_obj::CharacterTemplate_obj()
{
}

void CharacterTemplate_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(CharacterTemplate);
	HX_MARK_MEMBER_NAME(file,"file");
	HX_MARK_MEMBER_NAME(index,"index");
	HX_MARK_END_CLASS();
}

void CharacterTemplate_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(file,"file");
	HX_VISIT_MEMBER_NAME(index,"index");
}

::hx::Val CharacterTemplate_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"file") ) { return ::hx::Val( file ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"index") ) { return ::hx::Val( index ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val CharacterTemplate_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"file") ) { file=inValue.Cast< ::String >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"index") ) { index=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void CharacterTemplate_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("file",7c,ce,bb,43));
	outFields->push(HX_("index",12,9b,14,be));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo CharacterTemplate_obj_sMemberStorageInfo[] = {
	{::hx::fsString,(int)offsetof(CharacterTemplate_obj,file),HX_("file",7c,ce,bb,43)},
	{::hx::fsInt,(int)offsetof(CharacterTemplate_obj,index),HX_("index",12,9b,14,be)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *CharacterTemplate_obj_sStaticStorageInfo = 0;
#endif

static ::String CharacterTemplate_obj_sMemberFields[] = {
	HX_("file",7c,ce,bb,43),
	HX_("index",12,9b,14,be),
	::String(null()) };

::hx::Class CharacterTemplate_obj::__mClass;

void CharacterTemplate_obj::__register()
{
	CharacterTemplate_obj _hx_dummy;
	CharacterTemplate_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("assets.CharacterTemplate",38,22,9e,02);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(CharacterTemplate_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< CharacterTemplate_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = CharacterTemplate_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = CharacterTemplate_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace assets
