// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_utils__Object_Object_Impl_
#include <openfl/utils/_Object/Object_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_c98f1d3e0b4ce330_106___get,"openfl.utils._Object.Object_Impl_","__get",0x156bee32,"openfl.utils._Object.Object_Impl_.__get","openfl/utils/Object.hx",106,0xcbd6e8e2)
HX_LOCAL_STACK_FRAME(_hx_pos_c98f1d3e0b4ce330_367___eq,"openfl.utils._Object.Object_Impl_","__eq",0x31759250,"openfl.utils._Object.Object_Impl_.__eq","openfl/utils/Object.hx",367,0xcbd6e8e2)
HX_LOCAL_STACK_FRAME(_hx_pos_c98f1d3e0b4ce330_11_boot,"openfl.utils._Object.Object_Impl_","boot",0x337d62f6,"openfl.utils._Object.Object_Impl_.boot","openfl/utils/Object.hx",11,0xcbd6e8e2)
namespace openfl{
namespace utils{
namespace _Object{

void Object_Impl__obj::__construct() { }

Dynamic Object_Impl__obj::__CreateEmpty() { return new Object_Impl__obj; }

void *Object_Impl__obj::_hx_vtable = 0;

Dynamic Object_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Object_Impl__obj > _hx_result = new Object_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Object_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x6bbb6220;
}

 ::Dynamic Object_Impl__obj::__get( ::Dynamic this1,::String key){
            	HX_STACKFRAME(&_hx_pos_c98f1d3e0b4ce330_106___get)
HXLINE( 107)		bool _hx_tmp;
HXDLIN( 107)		if (::hx::IsNotNull( this1 )) {
HXLINE( 107)			_hx_tmp = ::hx::IsNull( key );
            		}
            		else {
HXLINE( 107)			_hx_tmp = true;
            		}
HXDLIN( 107)		if (_hx_tmp) {
HXLINE( 107)			return null();
            		}
HXLINE( 109)		if (::Reflect_obj::hasField(this1,key)) {
HXLINE( 111)			return ::Reflect_obj::field(this1,key);
            		}
            		else {
HXLINE( 113)			if (::Std_obj::isOfType(this1,::hx::ClassOf< ::openfl::display::DisplayObjectContainer >())) {
HXLINE( 116)				 ::openfl::display::DisplayObject child = ( ( ::openfl::display::DisplayObjectContainer)(this1) )->getChildByName(key);
HXLINE( 117)				if (::hx::IsNotNull( child )) {
HXLINE( 117)					return child;
            				}
            			}
            		}
HXLINE( 119)		return ::Reflect_obj::getProperty(this1,key);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Object_Impl__obj,__get,return )

bool Object_Impl__obj::_hx___eq( ::Dynamic a, ::Dynamic b){
            	HX_STACKFRAME(&_hx_pos_c98f1d3e0b4ce330_367___eq)
HXDLIN( 367)		return ::hx::IsEq( a,b );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Object_Impl__obj,_hx___eq,return )


Object_Impl__obj::Object_Impl__obj()
{
}

bool Object_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"__eq") ) { outValue = _hx___eq_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"__get") ) { outValue = __get_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Object_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *Object_Impl__obj_sStaticStorageInfo = 0;
#endif

::hx::Class Object_Impl__obj::__mClass;

static ::String Object_Impl__obj_sStaticFields[] = {
	HX_("__get",76,e1,2a,f2),
	HX_("__eq",8c,b3,13,3f),
	::String(null())
};

void Object_Impl__obj::__register()
{
	Object_Impl__obj _hx_dummy;
	Object_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("openfl.utils._Object.Object_Impl_",2a,f8,c6,48);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Object_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Object_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Object_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Object_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Object_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Object_Impl__obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_c98f1d3e0b4ce330_11_boot)
HXDLIN(  11)		__mClass->__meta__ =  ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("statics",05,3c,65,36), ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("__get",76,e1,2a,f2), ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("SuppressWarnings",0c,d3,d2,00),::cpp::VirtualArray_obj::__new(1)->init(0,HX_("checkstyle:FieldDocComment",70,56,1b,20))))))));
            	}
}

} // end namespace openfl
} // end namespace utils
} // end namespace _Object
