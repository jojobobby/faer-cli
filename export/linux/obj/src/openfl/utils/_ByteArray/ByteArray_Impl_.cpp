// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_openfl_utils_ByteArrayData
#include <openfl/utils/ByteArrayData.h>
#endif
#ifndef INCLUDED_openfl_utils_IDataInput
#include <openfl/utils/IDataInput.h>
#endif
#ifndef INCLUDED_openfl_utils_IDataOutput
#include <openfl/utils/IDataOutput.h>
#endif
#ifndef INCLUDED_openfl_utils__ByteArray_ByteArray_Impl_
#include <openfl/utils/_ByteArray/ByteArray_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_67382ab39e6adff2_311_fromBytes,"openfl.utils._ByteArray.ByteArray_Impl_","fromBytes",0xcad779c3,"openfl.utils._ByteArray.ByteArray_Impl_.fromBytes","openfl/utils/ByteArray.hx",311,0xaa5cee4a)
HX_LOCAL_STACK_FRAME(_hx_pos_67382ab39e6adff2_382_fromLimeBytes,"openfl.utils._ByteArray.ByteArray_Impl_","fromLimeBytes",0xe68c926e,"openfl.utils._ByteArray.ByteArray_Impl_.fromLimeBytes","openfl/utils/ByteArray.hx",382,0xaa5cee4a)
HX_LOCAL_STACK_FRAME(_hx_pos_67382ab39e6adff2_731_toBytes,"openfl.utils._ByteArray.ByteArray_Impl_","toBytes",0xfc5d6f92,"openfl.utils._ByteArray.ByteArray_Impl_.toBytes","openfl/utils/ByteArray.hx",731,0xaa5cee4a)
HX_LOCAL_STACK_FRAME(_hx_pos_67382ab39e6adff2_1013_get_length,"openfl.utils._ByteArray.ByteArray_Impl_","get_length",0xd68ebb4d,"openfl.utils._ByteArray.ByteArray_Impl_.get_length","openfl/utils/ByteArray.hx",1013,0xaa5cee4a)
HX_LOCAL_STACK_FRAME(_hx_pos_67382ab39e6adff2_1018_set_length,"openfl.utils._ByteArray.ByteArray_Impl_","set_length",0xda0c59c1,"openfl.utils._ByteArray.ByteArray_Impl_.set_length","openfl/utils/ByteArray.hx",1018,0xaa5cee4a)
namespace openfl{
namespace utils{
namespace _ByteArray{

void ByteArray_Impl__obj::__construct() { }

Dynamic ByteArray_Impl__obj::__CreateEmpty() { return new ByteArray_Impl__obj; }

void *ByteArray_Impl__obj::_hx_vtable = 0;

Dynamic ByteArray_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ByteArray_Impl__obj > _hx_result = new ByteArray_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ByteArray_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x63baca82;
}

 ::openfl::utils::ByteArrayData ByteArray_Impl__obj::fromBytes( ::haxe::io::Bytes bytes){
            	HX_STACKFRAME(&_hx_pos_67382ab39e6adff2_311_fromBytes)
HXLINE( 312)		if (::hx::IsNull( bytes )) {
HXLINE( 312)			return null();
            		}
HXLINE( 317)		if (::Std_obj::isOfType(bytes,::hx::ClassOf< ::openfl::utils::ByteArrayData >())) {
HXLINE( 319)			return ( ( ::openfl::utils::ByteArrayData)(bytes) );
            		}
            		else {
HXLINE( 326)			return ::openfl::utils::ByteArrayData_obj::fromBytes(bytes);
            		}
HXLINE( 317)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ByteArray_Impl__obj,fromBytes,return )

 ::openfl::utils::ByteArrayData ByteArray_Impl__obj::fromLimeBytes( ::haxe::io::Bytes bytes){
            	HX_STACKFRAME(&_hx_pos_67382ab39e6adff2_382_fromLimeBytes)
HXDLIN( 382)		return ::openfl::utils::_ByteArray::ByteArray_Impl__obj::fromBytes(bytes);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ByteArray_Impl__obj,fromLimeBytes,return )

 ::haxe::io::Bytes ByteArray_Impl__obj::toBytes( ::openfl::utils::ByteArrayData byteArray){
            	HX_STACKFRAME(&_hx_pos_67382ab39e6adff2_731_toBytes)
HXDLIN( 731)		return byteArray;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ByteArray_Impl__obj,toBytes,return )

int ByteArray_Impl__obj::get_length( ::openfl::utils::ByteArrayData this1){
            	HX_STACKFRAME(&_hx_pos_67382ab39e6adff2_1013_get_length)
HXDLIN(1013)		if (::hx::IsNull( this1 )) {
HXDLIN(1013)			return 0;
            		}
            		else {
HXDLIN(1013)			return this1->length;
            		}
HXDLIN(1013)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ByteArray_Impl__obj,get_length,return )

int ByteArray_Impl__obj::set_length( ::openfl::utils::ByteArrayData this1,int value){
            	HX_STACKFRAME(&_hx_pos_67382ab39e6adff2_1018_set_length)
HXLINE(1025)		if ((value >= 0)) {
HXLINE(1027)			this1->_hx___resize(value);
HXLINE(1028)			if ((value < this1->position)) {
HXLINE(1028)				this1->position = value;
            			}
            		}
HXLINE(1031)		this1->length = value;
HXLINE(1034)		return value;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ByteArray_Impl__obj,set_length,return )


ByteArray_Impl__obj::ByteArray_Impl__obj()
{
}

bool ByteArray_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"toBytes") ) { outValue = toBytes_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"fromBytes") ) { outValue = fromBytes_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"get_length") ) { outValue = get_length_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_length") ) { outValue = set_length_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"fromLimeBytes") ) { outValue = fromLimeBytes_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *ByteArray_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *ByteArray_Impl__obj_sStaticStorageInfo = 0;
#endif

::hx::Class ByteArray_Impl__obj::__mClass;

static ::String ByteArray_Impl__obj_sStaticFields[] = {
	HX_("fromBytes",a1,f2,20,72),
	HX_("fromLimeBytes",4c,d2,e6,4e),
	HX_("toBytes",f0,54,1c,8a),
	HX_("get_length",af,04,8f,8f),
	HX_("set_length",23,a3,0c,93),
	::String(null())
};

void ByteArray_Impl__obj::__register()
{
	ByteArray_Impl__obj _hx_dummy;
	ByteArray_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("openfl.utils._ByteArray.ByteArray_Impl_",10,09,69,6e);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ByteArray_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(ByteArray_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< ByteArray_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ByteArray_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ByteArray_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace openfl
} // end namespace utils
} // end namespace _ByteArray
