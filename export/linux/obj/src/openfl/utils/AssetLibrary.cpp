// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_lime_app_Future
#include <lime/app/Future.h>
#endif
#ifndef INCLUDED_lime_graphics_Image
#include <lime/graphics/Image.h>
#endif
#ifndef INCLUDED_lime_media_AudioBuffer
#include <lime/media/AudioBuffer.h>
#endif
#ifndef INCLUDED_lime_text_Font
#include <lime/text/Font.h>
#endif
#ifndef INCLUDED_lime_utils_AssetBundle
#include <lime/utils/AssetBundle.h>
#endif
#ifndef INCLUDED_lime_utils_AssetLibrary
#include <lime/utils/AssetLibrary.h>
#endif
#ifndef INCLUDED_lime_utils_AssetManifest
#include <lime/utils/AssetManifest.h>
#endif
#ifndef INCLUDED_openfl_utils_AssetLibrary
#include <openfl/utils/AssetLibrary.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_547ec2a4bdcd47c7_26_new,"openfl.utils.AssetLibrary","new",0x69b47d78,"openfl.utils.AssetLibrary.new","openfl/utils/AssetLibrary.hx",26,0x41ec4c76)
HX_LOCAL_STACK_FRAME(_hx_pos_547ec2a4bdcd47c7_32_bind,"openfl.utils.AssetLibrary","bind",0x0c4dbda5,"openfl.utils.AssetLibrary.bind","openfl/utils/AssetLibrary.hx",32,0x41ec4c76)
HX_LOCAL_STACK_FRAME(_hx_pos_547ec2a4bdcd47c7_38_exists,"openfl.utils.AssetLibrary","exists",0xdc46afc4,"openfl.utils.AssetLibrary.exists","openfl/utils/AssetLibrary.hx",38,0x41ec4c76)
HX_LOCAL_STACK_FRAME(_hx_pos_547ec2a4bdcd47c7_124_getAsset,"openfl.utils.AssetLibrary","getAsset",0x76ad5562,"openfl.utils.AssetLibrary.getAsset","openfl/utils/AssetLibrary.hx",124,0x41ec4c76)
HX_LOCAL_STACK_FRAME(_hx_pos_547ec2a4bdcd47c7_138_getAudioBuffer,"openfl.utils.AssetLibrary","getAudioBuffer",0x0089fb68,"openfl.utils.AssetLibrary.getAudioBuffer","openfl/utils/AssetLibrary.hx",138,0x41ec4c76)
HX_LOCAL_STACK_FRAME(_hx_pos_547ec2a4bdcd47c7_152_getBytes,"openfl.utils.AssetLibrary","getBytes",0x0e0bf3dd,"openfl.utils.AssetLibrary.getBytes","openfl/utils/AssetLibrary.hx",152,0x41ec4c76)
HX_LOCAL_STACK_FRAME(_hx_pos_547ec2a4bdcd47c7_166_getFont,"openfl.utils.AssetLibrary","getFont",0xd39c269d,"openfl.utils.AssetLibrary.getFont","openfl/utils/AssetLibrary.hx",166,0x41ec4c76)
HX_LOCAL_STACK_FRAME(_hx_pos_547ec2a4bdcd47c7_180_getImage,"openfl.utils.AssetLibrary","getImage",0x0ddd0acd,"openfl.utils.AssetLibrary.getImage","openfl/utils/AssetLibrary.hx",180,0x41ec4c76)
HX_LOCAL_STACK_FRAME(_hx_pos_547ec2a4bdcd47c7_213_getText,"openfl.utils.AssetLibrary","getText",0xdcd5957b,"openfl.utils.AssetLibrary.getText","openfl/utils/AssetLibrary.hx",213,0x41ec4c76)
HX_LOCAL_STACK_FRAME(_hx_pos_547ec2a4bdcd47c7_227_isLocal,"openfl.utils.AssetLibrary","isLocal",0xd2cf8639,"openfl.utils.AssetLibrary.isLocal","openfl/utils/AssetLibrary.hx",227,0x41ec4c76)
HX_LOCAL_STACK_FRAME(_hx_pos_547ec2a4bdcd47c7_269_load,"openfl.utils.AssetLibrary","load",0x12ee620e,"openfl.utils.AssetLibrary.load","openfl/utils/AssetLibrary.hx",269,0x41ec4c76)
HX_LOCAL_STACK_FRAME(_hx_pos_547ec2a4bdcd47c7_283_loadAudioBuffer,"openfl.utils.AssetLibrary","loadAudioBuffer",0x7bb86308,"openfl.utils.AssetLibrary.loadAudioBuffer","openfl/utils/AssetLibrary.hx",283,0x41ec4c76)
HX_LOCAL_STACK_FRAME(_hx_pos_547ec2a4bdcd47c7_297_loadBytes,"openfl.utils.AssetLibrary","loadBytes",0x7172e37d,"openfl.utils.AssetLibrary.loadBytes","openfl/utils/AssetLibrary.hx",297,0x41ec4c76)
HX_LOCAL_STACK_FRAME(_hx_pos_547ec2a4bdcd47c7_311_loadFont,"openfl.utils.AssetLibrary","loadFont",0xa4fd0afd,"openfl.utils.AssetLibrary.loadFont","openfl/utils/AssetLibrary.hx",311,0x41ec4c76)
HX_LOCAL_STACK_FRAME(_hx_pos_547ec2a4bdcd47c7_370_loadImage,"openfl.utils.AssetLibrary","loadImage",0x7143fa6d,"openfl.utils.AssetLibrary.loadImage","openfl/utils/AssetLibrary.hx",370,0x41ec4c76)
HX_LOCAL_STACK_FRAME(_hx_pos_547ec2a4bdcd47c7_389_loadText,"openfl.utils.AssetLibrary","loadText",0xae3679db,"openfl.utils.AssetLibrary.loadText","openfl/utils/AssetLibrary.hx",389,0x41ec4c76)
HX_LOCAL_STACK_FRAME(_hx_pos_547ec2a4bdcd47c7_50_fromBundle,"openfl.utils.AssetLibrary","fromBundle",0x0f9a9e74,"openfl.utils.AssetLibrary.fromBundle","openfl/utils/AssetLibrary.hx",50,0x41ec4c76)
HX_LOCAL_STACK_FRAME(_hx_pos_547ec2a4bdcd47c7_95_fromManifest,"openfl.utils.AssetLibrary","fromManifest",0x34ddc721,"openfl.utils.AssetLibrary.fromManifest","openfl/utils/AssetLibrary.hx",95,0x41ec4c76)
namespace openfl{
namespace utils{

void AssetLibrary_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_547ec2a4bdcd47c7_26_new)
HXDLIN(  26)		super::__construct();
            	}

Dynamic AssetLibrary_obj::__CreateEmpty() { return new AssetLibrary_obj; }

void *AssetLibrary_obj::_hx_vtable = 0;

Dynamic AssetLibrary_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< AssetLibrary_obj > _hx_result = new AssetLibrary_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool AssetLibrary_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x12db4ee4) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x12db4ee4;
	} else {
		return inClassId==(int)0x25654723;
	}
}

bool AssetLibrary_obj::bind(::String className, ::Dynamic instance){
            	HX_STACKFRAME(&_hx_pos_547ec2a4bdcd47c7_32_bind)
HXDLIN(  32)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC2(AssetLibrary_obj,bind,return )

bool AssetLibrary_obj::exists(::String id,::String type){
            	HX_STACKFRAME(&_hx_pos_547ec2a4bdcd47c7_38_exists)
HXDLIN(  38)		if (::hx::IsNotNull( this->_hx___proxy )) {
HXLINE(  40)			return this->_hx___proxy->exists(id,type);
            		}
            		else {
HXLINE(  44)			return this->super::exists(id,type);
            		}
HXLINE(  38)		return false;
            	}


 ::Dynamic AssetLibrary_obj::getAsset(::String id,::String type){
            	HX_STACKFRAME(&_hx_pos_547ec2a4bdcd47c7_124_getAsset)
HXDLIN( 124)		if (::hx::IsNotNull( this->_hx___proxy )) {
HXLINE( 126)			return this->_hx___proxy->getAsset(id,type);
            		}
            		else {
HXLINE( 130)			return this->super::getAsset(id,type);
            		}
HXLINE( 124)		return null();
            	}


 ::lime::media::AudioBuffer AssetLibrary_obj::getAudioBuffer(::String id){
            	HX_STACKFRAME(&_hx_pos_547ec2a4bdcd47c7_138_getAudioBuffer)
HXDLIN( 138)		if (::hx::IsNotNull( this->_hx___proxy )) {
HXLINE( 140)			return this->_hx___proxy->getAudioBuffer(id);
            		}
            		else {
HXLINE( 144)			return this->super::getAudioBuffer(id);
            		}
HXLINE( 138)		return null();
            	}


 ::haxe::io::Bytes AssetLibrary_obj::getBytes(::String id){
            	HX_STACKFRAME(&_hx_pos_547ec2a4bdcd47c7_152_getBytes)
HXDLIN( 152)		if (::hx::IsNotNull( this->_hx___proxy )) {
HXLINE( 154)			return this->_hx___proxy->getBytes(id);
            		}
            		else {
HXLINE( 158)			return this->super::getBytes(id);
            		}
HXLINE( 152)		return null();
            	}


 ::lime::text::Font AssetLibrary_obj::getFont(::String id){
            	HX_STACKFRAME(&_hx_pos_547ec2a4bdcd47c7_166_getFont)
HXDLIN( 166)		if (::hx::IsNotNull( this->_hx___proxy )) {
HXLINE( 168)			return this->_hx___proxy->getFont(id);
            		}
            		else {
HXLINE( 172)			return this->super::getFont(id);
            		}
HXLINE( 166)		return null();
            	}


 ::lime::graphics::Image AssetLibrary_obj::getImage(::String id){
            	HX_STACKFRAME(&_hx_pos_547ec2a4bdcd47c7_180_getImage)
HXDLIN( 180)		if (::hx::IsNotNull( this->_hx___proxy )) {
HXLINE( 182)			return this->_hx___proxy->getImage(id);
            		}
            		else {
HXLINE( 186)			return this->super::getImage(id);
            		}
HXLINE( 180)		return null();
            	}


::String AssetLibrary_obj::getText(::String id){
            	HX_STACKFRAME(&_hx_pos_547ec2a4bdcd47c7_213_getText)
HXDLIN( 213)		if (::hx::IsNotNull( this->_hx___proxy )) {
HXLINE( 215)			return this->_hx___proxy->getText(id);
            		}
            		else {
HXLINE( 219)			return this->super::getText(id);
            		}
HXLINE( 213)		return null();
            	}


bool AssetLibrary_obj::isLocal(::String id,::String type){
            	HX_STACKFRAME(&_hx_pos_547ec2a4bdcd47c7_227_isLocal)
HXDLIN( 227)		if (::hx::IsNotNull( this->_hx___proxy )) {
HXLINE( 229)			return this->_hx___proxy->isLocal(id,type);
            		}
            		else {
HXLINE( 233)			return this->super::isLocal(id,type);
            		}
HXLINE( 227)		return false;
            	}


 ::lime::app::Future AssetLibrary_obj::load(){
            	HX_STACKFRAME(&_hx_pos_547ec2a4bdcd47c7_269_load)
HXDLIN( 269)		if (::hx::IsNotNull( this->_hx___proxy )) {
HXLINE( 271)			return this->_hx___proxy->load();
            		}
            		else {
HXLINE( 275)			return this->super::load();
            		}
HXLINE( 269)		return null();
            	}


 ::lime::app::Future AssetLibrary_obj::loadAudioBuffer(::String id){
            	HX_STACKFRAME(&_hx_pos_547ec2a4bdcd47c7_283_loadAudioBuffer)
HXDLIN( 283)		if (::hx::IsNotNull( this->_hx___proxy )) {
HXLINE( 285)			return this->_hx___proxy->loadAudioBuffer(id);
            		}
            		else {
HXLINE( 289)			return this->super::loadAudioBuffer(id);
            		}
HXLINE( 283)		return null();
            	}


 ::lime::app::Future AssetLibrary_obj::loadBytes(::String id){
            	HX_STACKFRAME(&_hx_pos_547ec2a4bdcd47c7_297_loadBytes)
HXDLIN( 297)		if (::hx::IsNotNull( this->_hx___proxy )) {
HXLINE( 299)			return this->_hx___proxy->loadBytes(id);
            		}
            		else {
HXLINE( 303)			return this->super::loadBytes(id);
            		}
HXLINE( 297)		return null();
            	}


 ::lime::app::Future AssetLibrary_obj::loadFont(::String id){
            	HX_STACKFRAME(&_hx_pos_547ec2a4bdcd47c7_311_loadFont)
HXDLIN( 311)		if (::hx::IsNotNull( this->_hx___proxy )) {
HXLINE( 313)			return this->_hx___proxy->loadFont(id);
            		}
            		else {
HXLINE( 317)			return this->super::loadFont(id);
            		}
HXLINE( 311)		return null();
            	}


 ::lime::app::Future AssetLibrary_obj::loadImage(::String id){
            	HX_STACKFRAME(&_hx_pos_547ec2a4bdcd47c7_370_loadImage)
HXDLIN( 370)		if (::hx::IsNotNull( this->_hx___proxy )) {
HXLINE( 372)			return this->_hx___proxy->loadImage(id);
            		}
            		else {
HXLINE( 376)			return this->super::loadImage(id);
            		}
HXLINE( 370)		return null();
            	}


 ::lime::app::Future AssetLibrary_obj::loadText(::String id){
            	HX_STACKFRAME(&_hx_pos_547ec2a4bdcd47c7_389_loadText)
HXDLIN( 389)		if (::hx::IsNotNull( this->_hx___proxy )) {
HXLINE( 391)			return this->_hx___proxy->loadText(id);
            		}
            		else {
HXLINE( 395)			return this->super::loadText(id);
            		}
HXLINE( 389)		return null();
            	}


 ::openfl::utils::AssetLibrary AssetLibrary_obj::fromBundle( ::lime::utils::AssetBundle bundle){
            	HX_GC_STACKFRAME(&_hx_pos_547ec2a4bdcd47c7_50_fromBundle)
HXLINE(  52)		 ::lime::utils::AssetLibrary library = ::lime::utils::AssetLibrary_obj::fromBundle(bundle);
HXLINE(  54)		if (::hx::IsNotNull( library )) {
HXLINE(  56)			if (::Std_obj::isOfType(library,::hx::ClassOf< ::openfl::utils::AssetLibrary >())) {
HXLINE(  58)				return ( ( ::openfl::utils::AssetLibrary)(library) );
            			}
            			else {
HXLINE(  62)				 ::openfl::utils::AssetLibrary _library =  ::openfl::utils::AssetLibrary_obj::__alloc( HX_CTX );
HXLINE(  63)				_library->_hx___proxy = library;
HXLINE(  64)				return _library;
            			}
            		}
            		else {
HXLINE(  69)			return null();
            		}
HXLINE(  54)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AssetLibrary_obj,fromBundle,return )

 ::openfl::utils::AssetLibrary AssetLibrary_obj::fromManifest( ::lime::utils::AssetManifest manifest){
            	HX_GC_STACKFRAME(&_hx_pos_547ec2a4bdcd47c7_95_fromManifest)
HXLINE(  97)		 ::lime::utils::AssetLibrary library = ::lime::utils::AssetLibrary_obj::fromManifest(manifest);
HXLINE(  99)		if (::hx::IsNotNull( library )) {
HXLINE( 101)			if (::Std_obj::isOfType(library,::hx::ClassOf< ::openfl::utils::AssetLibrary >())) {
HXLINE( 103)				return ( ( ::openfl::utils::AssetLibrary)(library) );
            			}
            			else {
HXLINE( 107)				 ::openfl::utils::AssetLibrary _library =  ::openfl::utils::AssetLibrary_obj::__alloc( HX_CTX );
HXLINE( 108)				_library->_hx___proxy = library;
HXLINE( 109)				return _library;
            			}
            		}
            		else {
HXLINE( 114)			return null();
            		}
HXLINE(  99)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AssetLibrary_obj,fromManifest,return )


::hx::ObjectPtr< AssetLibrary_obj > AssetLibrary_obj::__new() {
	::hx::ObjectPtr< AssetLibrary_obj > __this = new AssetLibrary_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< AssetLibrary_obj > AssetLibrary_obj::__alloc(::hx::Ctx *_hx_ctx) {
	AssetLibrary_obj *__this = (AssetLibrary_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(AssetLibrary_obj), true, "openfl.utils.AssetLibrary"));
	*(void **)__this = AssetLibrary_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

AssetLibrary_obj::AssetLibrary_obj()
{
}

void AssetLibrary_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(AssetLibrary);
	HX_MARK_MEMBER_NAME(_hx___proxy,"__proxy");
	 ::lime::utils::AssetLibrary_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void AssetLibrary_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_hx___proxy,"__proxy");
	 ::lime::utils::AssetLibrary_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val AssetLibrary_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"bind") ) { return ::hx::Val( bind_dyn() ); }
		if (HX_FIELD_EQ(inName,"load") ) { return ::hx::Val( load_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"exists") ) { return ::hx::Val( exists_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"__proxy") ) { return ::hx::Val( _hx___proxy ); }
		if (HX_FIELD_EQ(inName,"getFont") ) { return ::hx::Val( getFont_dyn() ); }
		if (HX_FIELD_EQ(inName,"getText") ) { return ::hx::Val( getText_dyn() ); }
		if (HX_FIELD_EQ(inName,"isLocal") ) { return ::hx::Val( isLocal_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"getAsset") ) { return ::hx::Val( getAsset_dyn() ); }
		if (HX_FIELD_EQ(inName,"getBytes") ) { return ::hx::Val( getBytes_dyn() ); }
		if (HX_FIELD_EQ(inName,"getImage") ) { return ::hx::Val( getImage_dyn() ); }
		if (HX_FIELD_EQ(inName,"loadFont") ) { return ::hx::Val( loadFont_dyn() ); }
		if (HX_FIELD_EQ(inName,"loadText") ) { return ::hx::Val( loadText_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"loadBytes") ) { return ::hx::Val( loadBytes_dyn() ); }
		if (HX_FIELD_EQ(inName,"loadImage") ) { return ::hx::Val( loadImage_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"getAudioBuffer") ) { return ::hx::Val( getAudioBuffer_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"loadAudioBuffer") ) { return ::hx::Val( loadAudioBuffer_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool AssetLibrary_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"fromBundle") ) { outValue = fromBundle_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"fromManifest") ) { outValue = fromManifest_dyn(); return true; }
	}
	return false;
}

::hx::Val AssetLibrary_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"__proxy") ) { _hx___proxy=inValue.Cast<  ::lime::utils::AssetLibrary >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void AssetLibrary_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("__proxy",4e,47,ee,32));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo AssetLibrary_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::lime::utils::AssetLibrary */ ,(int)offsetof(AssetLibrary_obj,_hx___proxy),HX_("__proxy",4e,47,ee,32)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *AssetLibrary_obj_sStaticStorageInfo = 0;
#endif

static ::String AssetLibrary_obj_sMemberFields[] = {
	HX_("__proxy",4e,47,ee,32),
	HX_("bind",bd,f5,16,41),
	HX_("exists",dc,1d,e0,bf),
	HX_("getAsset",7a,79,10,86),
	HX_("getAudioBuffer",80,41,e3,26),
	HX_("getBytes",f5,17,6f,1d),
	HX_("getFont",85,0d,43,16),
	HX_("getImage",e5,2e,40,1d),
	HX_("getText",63,7c,7c,1f),
	HX_("isLocal",21,6d,76,15),
	HX_("load",26,9a,b7,47),
	HX_("loadAudioBuffer",f0,71,7c,e3),
	HX_("loadBytes",65,54,cf,d8),
	HX_("loadFont",15,2f,60,b4),
	HX_("loadImage",55,6b,a0,d8),
	HX_("loadText",f3,9d,99,bd),
	::String(null()) };

::hx::Class AssetLibrary_obj::__mClass;

static ::String AssetLibrary_obj_sStaticFields[] = {
	HX_("fromBundle",8c,f8,20,19),
	HX_("fromManifest",39,d7,40,70),
	::String(null())
};

void AssetLibrary_obj::__register()
{
	AssetLibrary_obj _hx_dummy;
	AssetLibrary_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("openfl.utils.AssetLibrary",86,a1,e2,86);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &AssetLibrary_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(AssetLibrary_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(AssetLibrary_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< AssetLibrary_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = AssetLibrary_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = AssetLibrary_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace openfl
} // end namespace utils
