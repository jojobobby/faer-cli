// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_mapeditor_CommandMenuItem
#include <mapeditor/CommandMenuItem.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_Graphics
#include <openfl/display/Graphics.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_MouseEvent
#include <openfl/events/MouseEvent.h>
#endif
#ifndef INCLUDED_openfl_text_TextField
#include <openfl/text/TextField.h>
#endif
#ifndef INCLUDED_ui_SimpleText
#include <ui/SimpleText.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_036e55b15a7961c8_7_new,"mapeditor.CommandMenuItem","new",0x38d7166a,"mapeditor.CommandMenuItem.new","mapeditor/CommandMenuItem.hx",7,0xa3ba3887)
HX_LOCAL_STACK_FRAME(_hx_pos_036e55b15a7961c8_37_setSelected,"mapeditor.CommandMenuItem","setSelected",0x15755427,"mapeditor.CommandMenuItem.setSelected","mapeditor/CommandMenuItem.hx",37,0xa3ba3887)
HX_LOCAL_STACK_FRAME(_hx_pos_036e55b15a7961c8_47_redraw,"mapeditor.CommandMenuItem","redraw",0x0580816d,"mapeditor.CommandMenuItem.redraw","mapeditor/CommandMenuItem.hx",47,0xa3ba3887)
HX_LOCAL_STACK_FRAME(_hx_pos_036e55b15a7961c8_70_onMouseOver,"mapeditor.CommandMenuItem","onMouseOver",0x4bf78d04,"mapeditor.CommandMenuItem.onMouseOver","mapeditor/CommandMenuItem.hx",70,0xa3ba3887)
HX_LOCAL_STACK_FRAME(_hx_pos_036e55b15a7961c8_75_onMouseOut,"mapeditor.CommandMenuItem","onMouseOut",0xb6deaade,"mapeditor.CommandMenuItem.onMouseOut","mapeditor/CommandMenuItem.hx",75,0xa3ba3887)
HX_LOCAL_STACK_FRAME(_hx_pos_036e55b15a7961c8_81_onMouseDown,"mapeditor.CommandMenuItem","onMouseDown",0x44acf412,"mapeditor.CommandMenuItem.onMouseDown","mapeditor/CommandMenuItem.hx",81,0xa3ba3887)
HX_LOCAL_STACK_FRAME(_hx_pos_036e55b15a7961c8_86_onMouseUp,"mapeditor.CommandMenuItem","onMouseUp",0x1330160b,"mapeditor.CommandMenuItem.onMouseUp","mapeditor/CommandMenuItem.hx",86,0xa3ba3887)
HX_LOCAL_STACK_FRAME(_hx_pos_036e55b15a7961c8_92_onClick,"mapeditor.CommandMenuItem","onClick",0xe33c2db3,"mapeditor.CommandMenuItem.onClick","mapeditor/CommandMenuItem.hx",92,0xa3ba3887)
namespace mapeditor{

void CommandMenuItem_obj::__construct(::String label, ::Dynamic callback,int command){
            	HX_GC_STACKFRAME(&_hx_pos_036e55b15a7961c8_7_new)
HXLINE(  16)		this->selected = false;
HXLINE(  15)		this->down = false;
HXLINE(  14)		this->over = false;
HXLINE(  20)		super::__construct();
HXLINE(  21)		this->callback = callback;
HXLINE(  22)		this->command = command;
HXLINE(  23)		this->text =  ::ui::SimpleText_obj::__alloc( HX_CTX ,16,16777215,false,0,0,null());
HXLINE(  24)		this->text->setBold(true);
HXLINE(  25)		this->text->set_text(label);
HXLINE(  26)		this->text->updateMetrics();
HXLINE(  27)		this->text->set_x(( (Float)(2) ));
HXLINE(  28)		this->addChild(this->text);
HXLINE(  29)		this->redraw();
HXLINE(  30)		this->addEventListener(HX_("mouseOver",19,4a,0d,f6),this->onMouseOver_dyn(),null(),null(),null());
HXLINE(  31)		this->addEventListener(HX_("mouseOut",69,e7,1d,a4),this->onMouseOut_dyn(),null(),null(),null());
HXLINE(  32)		this->addEventListener(HX_("mouseDown",27,b1,c2,ee),this->onMouseDown_dyn(),null(),null(),null());
HXLINE(  33)		this->addEventListener(HX_("mouseUp",e0,f3,72,c0),this->onMouseUp_dyn(),null(),null(),null());
HXLINE(  34)		this->addEventListener(HX_("click",48,7c,5e,48),this->onClick_dyn(),null(),null(),null());
            	}

Dynamic CommandMenuItem_obj::__CreateEmpty() { return new CommandMenuItem_obj; }

void *CommandMenuItem_obj::_hx_vtable = 0;

Dynamic CommandMenuItem_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< CommandMenuItem_obj > _hx_result = new CommandMenuItem_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool CommandMenuItem_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1f4df417) {
		if (inClassId<=(int)0x0c89e854) {
			if (inClassId<=(int)0x0330636f) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0330636f;
			} else {
				return inClassId==(int)0x0c89e854;
			}
		} else {
			return inClassId==(int)0x1f4df417;
		}
	} else {
		if (inClassId<=(int)0x4af7dd8e) {
			return inClassId==(int)0x438c5598 || inClassId==(int)0x4af7dd8e;
		} else {
			return inClassId==(int)0x6b353933;
		}
	}
}

void CommandMenuItem_obj::setSelected(bool selected){
            	HX_STACKFRAME(&_hx_pos_036e55b15a7961c8_37_setSelected)
HXLINE(  38)		this->selected = selected;
HXLINE(  39)		this->redraw();
            	}


HX_DEFINE_DYNAMIC_FUNC1(CommandMenuItem_obj,setSelected,(void))

void CommandMenuItem_obj::redraw(){
            	HX_STACKFRAME(&_hx_pos_036e55b15a7961c8_47_redraw)
HXLINE(  48)		this->get_graphics()->clear();
HXLINE(  49)		bool _hx_tmp;
HXDLIN(  49)		if (!(this->selected)) {
HXLINE(  49)			_hx_tmp = this->down;
            		}
            		else {
HXLINE(  49)			_hx_tmp = true;
            		}
HXDLIN(  49)		if (_hx_tmp) {
HXLINE(  50)			this->get_graphics()->lineStyle(2,16777215,null(),null(),null(),null(),null(),null());
HXLINE(  51)			this->get_graphics()->beginFill(8355711,1);
HXLINE(  52)			this->get_graphics()->drawRect(( (Float)(0) ),( (Float)(0) ),( (Float)(80) ),( (Float)(25) ));
HXLINE(  53)			this->get_graphics()->endFill();
HXLINE(  54)			this->get_graphics()->lineStyle(null(),null(),null(),null(),null(),null(),null(),null());
            		}
            		else {
HXLINE(  55)			if (this->over) {
HXLINE(  56)				this->get_graphics()->lineStyle(2,16777215,null(),null(),null(),null(),null(),null());
HXLINE(  57)				this->get_graphics()->beginFill(0,0);
HXLINE(  58)				this->get_graphics()->drawRect(( (Float)(0) ),( (Float)(0) ),( (Float)(80) ),( (Float)(25) ));
HXLINE(  59)				this->get_graphics()->endFill();
HXLINE(  60)				this->get_graphics()->lineStyle(null(),null(),null(),null(),null(),null(),null(),null());
            			}
            			else {
HXLINE(  62)				this->get_graphics()->lineStyle(1,16777215,null(),null(),null(),null(),null(),null());
HXLINE(  63)				this->get_graphics()->beginFill(0,0);
HXLINE(  64)				this->get_graphics()->drawRect(( (Float)(0) ),( (Float)(0) ),( (Float)(80) ),( (Float)(25) ));
HXLINE(  65)				this->get_graphics()->endFill();
HXLINE(  66)				this->get_graphics()->lineStyle(null(),null(),null(),null(),null(),null(),null(),null());
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(CommandMenuItem_obj,redraw,(void))

void CommandMenuItem_obj::onMouseOver( ::openfl::events::MouseEvent _){
            	HX_STACKFRAME(&_hx_pos_036e55b15a7961c8_70_onMouseOver)
HXLINE(  71)		this->over = true;
HXLINE(  72)		this->redraw();
            	}


HX_DEFINE_DYNAMIC_FUNC1(CommandMenuItem_obj,onMouseOver,(void))

void CommandMenuItem_obj::onMouseOut( ::openfl::events::MouseEvent _){
            	HX_STACKFRAME(&_hx_pos_036e55b15a7961c8_75_onMouseOut)
HXLINE(  76)		this->over = false;
HXLINE(  77)		this->down = false;
HXLINE(  78)		this->redraw();
            	}


HX_DEFINE_DYNAMIC_FUNC1(CommandMenuItem_obj,onMouseOut,(void))

void CommandMenuItem_obj::onMouseDown( ::openfl::events::MouseEvent _){
            	HX_STACKFRAME(&_hx_pos_036e55b15a7961c8_81_onMouseDown)
HXLINE(  82)		this->down = true;
HXLINE(  83)		this->redraw();
            	}


HX_DEFINE_DYNAMIC_FUNC1(CommandMenuItem_obj,onMouseDown,(void))

void CommandMenuItem_obj::onMouseUp( ::openfl::events::MouseEvent _){
            	HX_STACKFRAME(&_hx_pos_036e55b15a7961c8_86_onMouseUp)
HXLINE(  87)		this->down = false;
HXLINE(  88)		this->redraw();
            	}


HX_DEFINE_DYNAMIC_FUNC1(CommandMenuItem_obj,onMouseUp,(void))

void CommandMenuItem_obj::onClick( ::openfl::events::MouseEvent _){
            	HX_STACKFRAME(&_hx_pos_036e55b15a7961c8_92_onClick)
HXDLIN(  92)		this->callback(::hx::ObjectPtr<OBJ_>(this));
            	}


HX_DEFINE_DYNAMIC_FUNC1(CommandMenuItem_obj,onClick,(void))


::hx::ObjectPtr< CommandMenuItem_obj > CommandMenuItem_obj::__new(::String label, ::Dynamic callback,int command) {
	::hx::ObjectPtr< CommandMenuItem_obj > __this = new CommandMenuItem_obj();
	__this->__construct(label,callback,command);
	return __this;
}

::hx::ObjectPtr< CommandMenuItem_obj > CommandMenuItem_obj::__alloc(::hx::Ctx *_hx_ctx,::String label, ::Dynamic callback,int command) {
	CommandMenuItem_obj *__this = (CommandMenuItem_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(CommandMenuItem_obj), true, "mapeditor.CommandMenuItem"));
	*(void **)__this = CommandMenuItem_obj::_hx_vtable;
	__this->__construct(label,callback,command);
	return __this;
}

CommandMenuItem_obj::CommandMenuItem_obj()
{
}

void CommandMenuItem_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(CommandMenuItem);
	HX_MARK_MEMBER_NAME(callback,"callback");
	HX_MARK_MEMBER_NAME(command,"command");
	HX_MARK_MEMBER_NAME(over,"over");
	HX_MARK_MEMBER_NAME(down,"down");
	HX_MARK_MEMBER_NAME(selected,"selected");
	HX_MARK_MEMBER_NAME(text,"text");
	 ::openfl::display::Sprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void CommandMenuItem_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(callback,"callback");
	HX_VISIT_MEMBER_NAME(command,"command");
	HX_VISIT_MEMBER_NAME(over,"over");
	HX_VISIT_MEMBER_NAME(down,"down");
	HX_VISIT_MEMBER_NAME(selected,"selected");
	HX_VISIT_MEMBER_NAME(text,"text");
	 ::openfl::display::Sprite_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val CommandMenuItem_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"over") ) { return ::hx::Val( over ); }
		if (HX_FIELD_EQ(inName,"down") ) { return ::hx::Val( down ); }
		if (HX_FIELD_EQ(inName,"text") ) { return ::hx::Val( text ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"redraw") ) { return ::hx::Val( redraw_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"command") ) { return ::hx::Val( command ); }
		if (HX_FIELD_EQ(inName,"onClick") ) { return ::hx::Val( onClick_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"callback") ) { return ::hx::Val( callback ); }
		if (HX_FIELD_EQ(inName,"selected") ) { return ::hx::Val( selected ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"onMouseUp") ) { return ::hx::Val( onMouseUp_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"onMouseOut") ) { return ::hx::Val( onMouseOut_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"setSelected") ) { return ::hx::Val( setSelected_dyn() ); }
		if (HX_FIELD_EQ(inName,"onMouseOver") ) { return ::hx::Val( onMouseOver_dyn() ); }
		if (HX_FIELD_EQ(inName,"onMouseDown") ) { return ::hx::Val( onMouseDown_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val CommandMenuItem_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"over") ) { over=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"down") ) { down=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"text") ) { text=inValue.Cast<  ::ui::SimpleText >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"command") ) { command=inValue.Cast< int >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"callback") ) { callback=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"selected") ) { selected=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void CommandMenuItem_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("command",4b,71,6d,81));
	outFields->push(HX_("over",54,91,b8,49));
	outFields->push(HX_("down",62,f8,6d,42));
	outFields->push(HX_("selected",5b,2a,6d,b1));
	outFields->push(HX_("text",ad,cc,f9,4c));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo CommandMenuItem_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(CommandMenuItem_obj,callback),HX_("callback",c5,99,06,7f)},
	{::hx::fsInt,(int)offsetof(CommandMenuItem_obj,command),HX_("command",4b,71,6d,81)},
	{::hx::fsBool,(int)offsetof(CommandMenuItem_obj,over),HX_("over",54,91,b8,49)},
	{::hx::fsBool,(int)offsetof(CommandMenuItem_obj,down),HX_("down",62,f8,6d,42)},
	{::hx::fsBool,(int)offsetof(CommandMenuItem_obj,selected),HX_("selected",5b,2a,6d,b1)},
	{::hx::fsObject /*  ::ui::SimpleText */ ,(int)offsetof(CommandMenuItem_obj,text),HX_("text",ad,cc,f9,4c)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *CommandMenuItem_obj_sStaticStorageInfo = 0;
#endif

static ::String CommandMenuItem_obj_sMemberFields[] = {
	HX_("callback",c5,99,06,7f),
	HX_("command",4b,71,6d,81),
	HX_("over",54,91,b8,49),
	HX_("down",62,f8,6d,42),
	HX_("selected",5b,2a,6d,b1),
	HX_("text",ad,cc,f9,4c),
	HX_("setSelected",1d,f4,cd,e1),
	HX_("redraw",37,e5,97,fe),
	HX_("onMouseOver",fa,2c,50,18),
	HX_("onMouseOut",a8,bb,d4,81),
	HX_("onMouseDown",08,94,05,11),
	HX_("onMouseUp",81,ac,1d,98),
	HX_("onClick",a9,1a,9c,de),
	::String(null()) };

::hx::Class CommandMenuItem_obj::__mClass;

void CommandMenuItem_obj::__register()
{
	CommandMenuItem_obj _hx_dummy;
	CommandMenuItem_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("mapeditor.CommandMenuItem",78,59,e5,01);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(CommandMenuItem_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< CommandMenuItem_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = CommandMenuItem_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = CommandMenuItem_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace mapeditor
