// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_mapeditor_Layer
#include <mapeditor/Layer.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_deba2d8cca686eca_7_boot,"mapeditor.Layer","boot",0xcd917f14,"mapeditor.Layer.boot","mapeditor/Layer.hx",7,0x9e59e273)
static const int _hx_array_data_2b2450cc_1[] = {
	(int)65535,(int)65535,(int)255,
};
namespace mapeditor{

void Layer_obj::__construct() { }

Dynamic Layer_obj::__CreateEmpty() { return new Layer_obj; }

void *Layer_obj::_hx_vtable = 0;

Dynamic Layer_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Layer_obj > _hx_result = new Layer_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Layer_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x03e0fb88;
}

::Array< int > Layer_obj::EMPTY_TILE;


Layer_obj::Layer_obj()
{
}

bool Layer_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"EMPTY_TILE") ) { outValue = ( EMPTY_TILE ); return true; }
	}
	return false;
}

bool Layer_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"EMPTY_TILE") ) { EMPTY_TILE=ioValue.Cast< ::Array< int > >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Layer_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo Layer_obj_sStaticStorageInfo[] = {
	{::hx::fsObject /* ::Array< int > */ ,(void *) &Layer_obj::EMPTY_TILE,HX_("EMPTY_TILE",80,51,0f,4c)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void Layer_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Layer_obj::EMPTY_TILE,"EMPTY_TILE");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Layer_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Layer_obj::EMPTY_TILE,"EMPTY_TILE");
};

#endif

::hx::Class Layer_obj::__mClass;

static ::String Layer_obj_sStaticFields[] = {
	HX_("EMPTY_TILE",80,51,0f,4c),
	::String(null())
};

void Layer_obj::__register()
{
	Layer_obj _hx_dummy;
	Layer_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("mapeditor.Layer",cc,50,24,2b);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Layer_obj::__GetStatic;
	__mClass->mSetStaticField = &Layer_obj::__SetStatic;
	__mClass->mMarkFunc = Layer_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Layer_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Layer_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Layer_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Layer_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Layer_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Layer_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_deba2d8cca686eca_7_boot)
HXDLIN(   7)		EMPTY_TILE = ::Array_obj< int >::fromData( _hx_array_data_2b2450cc_1,3);
            	}
}

} // end namespace mapeditor
