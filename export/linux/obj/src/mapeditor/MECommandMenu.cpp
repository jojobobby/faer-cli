// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_mapeditor_CommandEvent
#include <mapeditor/CommandEvent.h>
#endif
#ifndef INCLUDED_mapeditor_CommandMenu
#include <mapeditor/CommandMenu.h>
#endif
#ifndef INCLUDED_mapeditor_CommandMenuItem
#include <mapeditor/CommandMenuItem.h>
#endif
#ifndef INCLUDED_mapeditor_MECommandMenu
#include <mapeditor/MECommandMenu.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_7b8b25ea603ace5f_13_new,"mapeditor.MECommandMenu","new",0x8576f59f,"mapeditor.MECommandMenu.new","mapeditor/MECommandMenu.hx",13,0xf2e7b4b2)
HX_LOCAL_STACK_FRAME(_hx_pos_7b8b25ea603ace5f_32_select,"mapeditor.MECommandMenu","select",0x1b79871d,"mapeditor.MECommandMenu.select","mapeditor/MECommandMenu.hx",32,0xf2e7b4b2)
HX_LOCAL_STACK_FRAME(_hx_pos_7b8b25ea603ace5f_36_onUndo,"mapeditor.MECommandMenu","onUndo",0xa17a3b04,"mapeditor.MECommandMenu.onUndo","mapeditor/MECommandMenu.hx",36,0xf2e7b4b2)
HX_LOCAL_STACK_FRAME(_hx_pos_7b8b25ea603ace5f_40_onRedo,"mapeditor.MECommandMenu","onRedo",0x9f77c2de,"mapeditor.MECommandMenu.onRedo","mapeditor/MECommandMenu.hx",40,0xf2e7b4b2)
HX_LOCAL_STACK_FRAME(_hx_pos_7b8b25ea603ace5f_44_onClear,"mapeditor.MECommandMenu","onClear",0x4af140ad,"mapeditor.MECommandMenu.onClear","mapeditor/MECommandMenu.hx",44,0xf2e7b4b2)
HX_LOCAL_STACK_FRAME(_hx_pos_7b8b25ea603ace5f_48_onLoad,"mapeditor.MECommandMenu","onLoad",0x9b880f06,"mapeditor.MECommandMenu.onLoad","mapeditor/MECommandMenu.hx",48,0xf2e7b4b2)
HX_LOCAL_STACK_FRAME(_hx_pos_7b8b25ea603ace5f_52_onSave,"mapeditor.MECommandMenu","onSave",0xa01e001d,"mapeditor.MECommandMenu.onSave","mapeditor/MECommandMenu.hx",52,0xf2e7b4b2)
HX_LOCAL_STACK_FRAME(_hx_pos_7b8b25ea603ace5f_56_onTest,"mapeditor.MECommandMenu","onTest",0xa0ca3d32,"mapeditor.MECommandMenu.onTest","mapeditor/MECommandMenu.hx",56,0xf2e7b4b2)
HX_LOCAL_STACK_FRAME(_hx_pos_7b8b25ea603ace5f_60_onQuit,"mapeditor.MECommandMenu","onQuit",0x9edab4af,"mapeditor.MECommandMenu.onQuit","mapeditor/MECommandMenu.hx",60,0xf2e7b4b2)
namespace mapeditor{

void MECommandMenu_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_7b8b25ea603ace5f_13_new)
HXLINE(  14)		super::__construct();
HXLINE(  15)		this->addCommandMenuItem(HX_("(D)raw",7b,76,f6,40),( (int)(( (unsigned char)(68) )) ),this->select_dyn(),1);
HXLINE(  16)		this->addCommandMenuItem(HX_("(E)rase",6d,8e,0c,fd),( (int)(( (unsigned char)(69) )) ),this->select_dyn(),2);
HXLINE(  17)		this->addCommandMenuItem(HX_("S(A)mple",99,67,b7,eb),( (int)(( (unsigned char)(65) )) ),this->select_dyn(),3);
HXLINE(  18)		this->addCommandMenuItem(HX_("(F)ill",be,d4,bc,67),( (int)(( (unsigned char)(70) )) ),this->select_dyn(),4);
HXLINE(  19)		this->addCommandMenuItem(HX_("Ra(N)dom",2e,3d,b8,16),( (int)(( (unsigned char)(78) )) ),this->select_dyn(),5);
HXLINE(  20)		this->addCommandMenuItem(HX_("(U)ndo",9d,4c,c3,0a),( (int)(( (unsigned char)(85) )) ),this->onUndo_dyn(),0);
HXLINE(  21)		this->addCommandMenuItem(HX_("(R)edo",d1,ba,88,50),( (int)(( (unsigned char)(82) )) ),this->onRedo_dyn(),0);
HXLINE(  22)		this->addCommandMenuItem(HX_("(C)lear",58,87,61,2c),( (int)(( (unsigned char)(67) )) ),this->onClear_dyn(),0);
HXLINE(  23)		this->addBreak();
HXLINE(  24)		this->addCommandMenuItem(HX_("(L)oad",ad,d3,28,dc),( (int)(( (unsigned char)(76) )) ),this->onLoad_dyn(),0);
HXLINE(  25)		this->addCommandMenuItem(HX_("(S)ave",f2,55,ec,e3),( (int)(( (unsigned char)(83) )) ),this->onSave_dyn(),0);
HXLINE(  26)		this->addCommandMenuItem(HX_("(T)est",e9,f0,55,77),( (int)(( (unsigned char)(84) )) ),this->onTest_dyn(),0);
HXLINE(  27)		this->addBreak();
HXLINE(  28)		this->addCommandMenuItem(HX_("Quit",ef,6b,e3,35),( (int)(( (unsigned char)(0) )) ),this->onQuit_dyn(),0);
            	}

Dynamic MECommandMenu_obj::__CreateEmpty() { return new MECommandMenu_obj; }

void *MECommandMenu_obj::_hx_vtable = 0;

Dynamic MECommandMenu_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< MECommandMenu_obj > _hx_result = new MECommandMenu_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool MECommandMenu_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x24c1dbb1) {
		if (inClassId<=(int)0x0c89e854) {
			if (inClassId<=(int)0x0330636f) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0330636f;
			} else {
				return inClassId==(int)0x0c89e854;
			}
		} else {
			return inClassId==(int)0x1f4df417 || inClassId==(int)0x24c1dbb1;
		}
	} else {
		if (inClassId<=(int)0x4af7dd8e) {
			return inClassId==(int)0x37a60de5 || inClassId==(int)0x4af7dd8e;
		} else {
			return inClassId==(int)0x6b353933;
		}
	}
}

void MECommandMenu_obj::select( ::mapeditor::CommandMenuItem item){
            	HX_STACKFRAME(&_hx_pos_7b8b25ea603ace5f_32_select)
HXDLIN(  32)		this->setSelected(item);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MECommandMenu_obj,select,(void))

void MECommandMenu_obj::onUndo( ::mapeditor::CommandMenuItem _){
            	HX_GC_STACKFRAME(&_hx_pos_7b8b25ea603ace5f_36_onUndo)
HXDLIN(  36)		this->dispatchEvent( ::mapeditor::CommandEvent_obj::__alloc( HX_CTX ,HX_("UNDO_COMMAND_EVENT",0b,b4,f3,3e)));
            	}


HX_DEFINE_DYNAMIC_FUNC1(MECommandMenu_obj,onUndo,(void))

void MECommandMenu_obj::onRedo( ::mapeditor::CommandMenuItem _){
            	HX_GC_STACKFRAME(&_hx_pos_7b8b25ea603ace5f_40_onRedo)
HXDLIN(  40)		this->dispatchEvent( ::mapeditor::CommandEvent_obj::__alloc( HX_CTX ,HX_("REDO_COMMAND_EVENT",65,85,35,6d)));
            	}


HX_DEFINE_DYNAMIC_FUNC1(MECommandMenu_obj,onRedo,(void))

void MECommandMenu_obj::onClear( ::mapeditor::CommandMenuItem _){
            	HX_GC_STACKFRAME(&_hx_pos_7b8b25ea603ace5f_44_onClear)
HXDLIN(  44)		this->dispatchEvent( ::mapeditor::CommandEvent_obj::__alloc( HX_CTX ,HX_("CLEAR_COMMAND_EVENT",14,9d,ac,ba)));
            	}


HX_DEFINE_DYNAMIC_FUNC1(MECommandMenu_obj,onClear,(void))

void MECommandMenu_obj::onLoad( ::mapeditor::CommandMenuItem _){
            	HX_GC_STACKFRAME(&_hx_pos_7b8b25ea603ace5f_48_onLoad)
HXDLIN(  48)		this->dispatchEvent( ::mapeditor::CommandEvent_obj::__alloc( HX_CTX ,HX_("LOAD_COMMAND_EVENT",8d,c7,03,60)));
            	}


HX_DEFINE_DYNAMIC_FUNC1(MECommandMenu_obj,onLoad,(void))

void MECommandMenu_obj::onSave( ::mapeditor::CommandMenuItem _){
            	HX_GC_STACKFRAME(&_hx_pos_7b8b25ea603ace5f_52_onSave)
HXDLIN(  52)		this->dispatchEvent( ::mapeditor::CommandEvent_obj::__alloc( HX_CTX ,HX_("SAVE_COMMAND_EVENT",e4,d2,58,a3)));
            	}


HX_DEFINE_DYNAMIC_FUNC1(MECommandMenu_obj,onSave,(void))

void MECommandMenu_obj::onTest( ::mapeditor::CommandMenuItem _){
            	HX_GC_STACKFRAME(&_hx_pos_7b8b25ea603ace5f_56_onTest)
HXDLIN(  56)		this->dispatchEvent( ::mapeditor::CommandEvent_obj::__alloc( HX_CTX ,HX_("TEST_COMMAND_EVENT",b9,ea,b9,26)));
            	}


HX_DEFINE_DYNAMIC_FUNC1(MECommandMenu_obj,onTest,(void))

void MECommandMenu_obj::onQuit( ::mapeditor::CommandMenuItem _){
            	HX_GC_STACKFRAME(&_hx_pos_7b8b25ea603ace5f_60_onQuit)
HXDLIN(  60)		this->dispatchEvent( ::mapeditor::CommandEvent_obj::__alloc( HX_CTX ,HX_("QUIT_COMMAND_EVENT",f6,a2,e9,56)));
            	}


HX_DEFINE_DYNAMIC_FUNC1(MECommandMenu_obj,onQuit,(void))


::hx::ObjectPtr< MECommandMenu_obj > MECommandMenu_obj::__new() {
	::hx::ObjectPtr< MECommandMenu_obj > __this = new MECommandMenu_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< MECommandMenu_obj > MECommandMenu_obj::__alloc(::hx::Ctx *_hx_ctx) {
	MECommandMenu_obj *__this = (MECommandMenu_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(MECommandMenu_obj), true, "mapeditor.MECommandMenu"));
	*(void **)__this = MECommandMenu_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

MECommandMenu_obj::MECommandMenu_obj()
{
}

::hx::Val MECommandMenu_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"select") ) { return ::hx::Val( select_dyn() ); }
		if (HX_FIELD_EQ(inName,"onUndo") ) { return ::hx::Val( onUndo_dyn() ); }
		if (HX_FIELD_EQ(inName,"onRedo") ) { return ::hx::Val( onRedo_dyn() ); }
		if (HX_FIELD_EQ(inName,"onLoad") ) { return ::hx::Val( onLoad_dyn() ); }
		if (HX_FIELD_EQ(inName,"onSave") ) { return ::hx::Val( onSave_dyn() ); }
		if (HX_FIELD_EQ(inName,"onTest") ) { return ::hx::Val( onTest_dyn() ); }
		if (HX_FIELD_EQ(inName,"onQuit") ) { return ::hx::Val( onQuit_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"onClear") ) { return ::hx::Val( onClear_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *MECommandMenu_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *MECommandMenu_obj_sStaticStorageInfo = 0;
#endif

static ::String MECommandMenu_obj_sMemberFields[] = {
	HX_("select",fc,1a,33,6a),
	HX_("onUndo",e3,ce,33,f0),
	HX_("onRedo",bd,56,31,ee),
	HX_("onClear",ee,0f,99,de),
	HX_("onLoad",e5,a2,41,ea),
	HX_("onSave",fc,93,d7,ee),
	HX_("onTest",11,d1,83,ef),
	HX_("onQuit",8e,48,94,ed),
	::String(null()) };

::hx::Class MECommandMenu_obj::__mClass;

void MECommandMenu_obj::__register()
{
	MECommandMenu_obj _hx_dummy;
	MECommandMenu_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("mapeditor.MECommandMenu",2d,3a,0e,a1);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(MECommandMenu_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< MECommandMenu_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MECommandMenu_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MECommandMenu_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace mapeditor
