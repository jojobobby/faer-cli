// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_Xml
#include <Xml.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_IntMap
#include <haxe/ds/IntMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_map_GroundLibrary
#include <map/GroundLibrary.h>
#endif
#ifndef INCLUDED_mapeditor_Chooser
#include <mapeditor/Chooser.h>
#endif
#ifndef INCLUDED_mapeditor_Element
#include <mapeditor/Element.h>
#endif
#ifndef INCLUDED_mapeditor_GroundChooser
#include <mapeditor/GroundChooser.h>
#endif
#ifndef INCLUDED_mapeditor_GroundElement
#include <mapeditor/GroundElement.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_8ac18de1359a9c8f_12_new,"mapeditor.GroundChooser","new",0x98921c61,"mapeditor.GroundChooser.new","mapeditor/GroundChooser.hx",12,0x33471c30)
HX_DEFINE_STACK_FRAME(_hx_pos_8ac18de1359a9c8f_6_new,"mapeditor.GroundChooser","new",0x98921c61,"mapeditor.GroundChooser.new","mapeditor/GroundChooser.hx",6,0x33471c30)
HX_LOCAL_STACK_FRAME(_hx_pos_8ac18de1359a9c8f_35_reloadObjects,"mapeditor.GroundChooser","reloadObjects",0x6d9f01bc,"mapeditor.GroundChooser.reloadObjects","mapeditor/GroundChooser.hx",35,0x33471c30)
HX_LOCAL_STACK_FRAME(_hx_pos_8ac18de1359a9c8f_27_reloadObjects,"mapeditor.GroundChooser","reloadObjects",0x6d9f01bc,"mapeditor.GroundChooser.reloadObjects","mapeditor/GroundChooser.hx",27,0x33471c30)
namespace mapeditor{

void GroundChooser_obj::__construct(){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(2)
            		int _hx_run(::String s1,::String s2){
            			HX_STACKFRAME(&_hx_pos_8ac18de1359a9c8f_12_new)
HXLINE(  13)			::String a = s1.toLowerCase();
HXLINE(  14)			::String b = s2.toLowerCase();
HXLINE(  15)			if ((a < b)) {
HXLINE(  16)				return -1;
            			}
HXLINE(  17)			if ((a > b)) {
HXLINE(  18)				return 1;
            			}
HXLINE(  19)			return 0;
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_GC_STACKFRAME(&_hx_pos_8ac18de1359a9c8f_6_new)
HXLINE(   7)		super::__construct(0);
HXLINE(   8)		::Array< ::String > ids = ::Array_obj< ::String >::__new();
HXLINE(   9)		{
HXLINE(   9)			 ::Dynamic id = ::map::GroundLibrary_obj::idToType->keys();
HXDLIN(   9)			while(( (bool)(id->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic)()) )){
HXLINE(  10)				ids->push(id->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic)());
            			}
            		}
HXLINE(  12)		ids->sort( ::Dynamic(new _hx_Closure_0()));
HXLINE(  21)		{
HXLINE(  21)			int _g = 0;
HXDLIN(  21)			while((_g < ids->length)){
HXLINE(  21)				::String id1 = ids->__get(_g);
HXDLIN(  21)				_g = (_g + 1);
HXLINE(  22)				 ::Dynamic type = ::map::GroundLibrary_obj::idToType->get(id1);
HXLINE(  23)				this->addElement( ::mapeditor::GroundElement_obj::__alloc( HX_CTX ,( ( ::Xml)(::map::GroundLibrary_obj::xmlLibrary->get(type)) )));
            			}
            		}
            	}

Dynamic GroundChooser_obj::__CreateEmpty() { return new GroundChooser_obj; }

void *GroundChooser_obj::_hx_vtable = 0;

Dynamic GroundChooser_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< GroundChooser_obj > _hx_result = new GroundChooser_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool GroundChooser_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1f4df417) {
		if (inClassId<=(int)0x0c89e854) {
			if (inClassId<=(int)0x0330636f) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0330636f;
			} else {
				return inClassId==(int)0x0c89e854;
			}
		} else {
			return inClassId==(int)0x1596b732 || inClassId==(int)0x1f4df417;
		}
	} else {
		if (inClassId<=(int)0x595a1eab) {
			return inClassId==(int)0x4af7dd8e || inClassId==(int)0x595a1eab;
		} else {
			return inClassId==(int)0x6b353933;
		}
	}
}

void GroundChooser_obj::reloadObjects(::String search){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(2)
            		int _hx_run(::String s1,::String s2){
            			HX_STACKFRAME(&_hx_pos_8ac18de1359a9c8f_35_reloadObjects)
HXLINE(  36)			::String a = s1.toLowerCase();
HXLINE(  37)			::String b = s2.toLowerCase();
HXLINE(  38)			if ((a < b)) {
HXLINE(  39)				return -1;
            			}
HXLINE(  40)			if ((a > b)) {
HXLINE(  41)				return 1;
            			}
HXLINE(  42)			return 0;
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_GC_STACKFRAME(&_hx_pos_8ac18de1359a9c8f_27_reloadObjects)
HXLINE(  28)		this->removeElements();
HXLINE(  30)		::Array< ::String > ids = ::Array_obj< ::String >::__new();
HXLINE(  31)		{
HXLINE(  31)			 ::Dynamic id = ::map::GroundLibrary_obj::idToType->keys();
HXDLIN(  31)			while(( (bool)(id->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic)()) )){
HXLINE(  31)				::String id1 = ( (::String)(id->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic)()) );
HXLINE(  32)				bool _hx_tmp;
HXDLIN(  32)				if ((search != HX_("",00,00,00,00))) {
HXLINE(  32)					_hx_tmp = (id1.toLowerCase().indexOf(search,null()) != -1);
            				}
            				else {
HXLINE(  32)					_hx_tmp = true;
            				}
HXDLIN(  32)				if (_hx_tmp) {
HXLINE(  33)					ids->push(id1);
            				}
            			}
            		}
HXLINE(  35)		ids->sort( ::Dynamic(new _hx_Closure_0()));
HXLINE(  44)		{
HXLINE(  44)			int _g = 0;
HXDLIN(  44)			while((_g < ids->length)){
HXLINE(  44)				::String id2 = ids->__get(_g);
HXDLIN(  44)				_g = (_g + 1);
HXLINE(  45)				 ::Dynamic type = ::map::GroundLibrary_obj::idToType->get(id2);
HXLINE(  46)				this->addElement( ::mapeditor::GroundElement_obj::__alloc( HX_CTX ,( ( ::Xml)(::map::GroundLibrary_obj::xmlLibrary->get(type)) )));
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(GroundChooser_obj,reloadObjects,(void))


::hx::ObjectPtr< GroundChooser_obj > GroundChooser_obj::__new() {
	::hx::ObjectPtr< GroundChooser_obj > __this = new GroundChooser_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< GroundChooser_obj > GroundChooser_obj::__alloc(::hx::Ctx *_hx_ctx) {
	GroundChooser_obj *__this = (GroundChooser_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(GroundChooser_obj), true, "mapeditor.GroundChooser"));
	*(void **)__this = GroundChooser_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

GroundChooser_obj::GroundChooser_obj()
{
}

::hx::Val GroundChooser_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 13:
		if (HX_FIELD_EQ(inName,"reloadObjects") ) { return ::hx::Val( reloadObjects_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *GroundChooser_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *GroundChooser_obj_sStaticStorageInfo = 0;
#endif

static ::String GroundChooser_obj_sMemberFields[] = {
	HX_("reloadObjects",7b,4a,2b,53),
	::String(null()) };

::hx::Class GroundChooser_obj::__mClass;

void GroundChooser_obj::__register()
{
	GroundChooser_obj _hx_dummy;
	GroundChooser_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("mapeditor.GroundChooser",ef,57,9a,2b);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(GroundChooser_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< GroundChooser_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = GroundChooser_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = GroundChooser_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace mapeditor
