// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_Xml
#include <Xml.h>
#endif
#ifndef INCLUDED_appengine_SavedCharacter
#include <appengine/SavedCharacter.h>
#endif
#ifndef INCLUDED_appengine_SavedCharactersList
#include <appengine/SavedCharactersList.h>
#endif
#ifndef INCLUDED_core_PlayerModel
#include <core/PlayerModel.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_servers_LatLong
#include <servers/LatLong.h>
#endif
#ifndef INCLUDED_util_Signal
#include <util/Signal.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_8fb5a10071bbbcfc_8_new,"core.PlayerModel","new",0x46f2644b,"core.PlayerModel.new","core/PlayerModel.hx",8,0xb7bd8d46)
HX_LOCAL_STACK_FRAME(_hx_pos_8fb5a10071bbbcfc_22_getMaxCharacters,"core.PlayerModel","getMaxCharacters",0x65fd5b2d,"core.PlayerModel.getMaxCharacters","core/PlayerModel.hx",22,0xb7bd8d46)
HX_LOCAL_STACK_FRAME(_hx_pos_8fb5a10071bbbcfc_33_getGems,"core.PlayerModel","getGems",0x3af31225,"core.PlayerModel.getGems","core/PlayerModel.hx",33,0xb7bd8d46)
HX_LOCAL_STACK_FRAME(_hx_pos_8fb5a10071bbbcfc_36_addGems,"core.PlayerModel","addGems",0xa4ada530,"core.PlayerModel.addGems","core/PlayerModel.hx",36,0xb7bd8d46)
HX_LOCAL_STACK_FRAME(_hx_pos_8fb5a10071bbbcfc_52_getGold,"core.PlayerModel","getGold",0x3afaa7c1,"core.PlayerModel.getGold","core/PlayerModel.hx",52,0xb7bd8d46)
HX_LOCAL_STACK_FRAME(_hx_pos_8fb5a10071bbbcfc_71_getCrowns,"core.PlayerModel","getCrowns",0x0f9594fd,"core.PlayerModel.getCrowns","core/PlayerModel.hx",71,0xb7bd8d46)
HX_LOCAL_STACK_FRAME(_hx_pos_8fb5a10071bbbcfc_90_getCharacterCount,"core.PlayerModel","getCharacterCount",0x31be1cc7,"core.PlayerModel.getCharacterCount","core/PlayerModel.hx",90,0xb7bd8d46)
HX_LOCAL_STACK_FRAME(_hx_pos_8fb5a10071bbbcfc_97_deleteCharacter,"core.PlayerModel","deleteCharacter",0xcf986669,"core.PlayerModel.deleteCharacter","core/PlayerModel.hx",97,0xb7bd8d46)
HX_LOCAL_STACK_FRAME(_hx_pos_8fb5a10071bbbcfc_121_getGuildName,"core.PlayerModel","getGuildName",0x541c68dd,"core.PlayerModel.getGuildName","core/PlayerModel.hx",121,0xb7bd8d46)
HX_LOCAL_STACK_FRAME(_hx_pos_8fb5a10071bbbcfc_125_getGuildRank,"core.PlayerModel","getGuildRank",0x56c1443e,"core.PlayerModel.getGuildRank","core/PlayerModel.hx",125,0xb7bd8d46)
HX_LOCAL_STACK_FRAME(_hx_pos_8fb5a10071bbbcfc_129_getNextCharSlotPrice,"core.PlayerModel","getNextCharSlotPrice",0x714e5741,"core.PlayerModel.getNextCharSlotPrice","core/PlayerModel.hx",129,0xb7bd8d46)
HX_LOCAL_STACK_FRAME(_hx_pos_8fb5a10071bbbcfc_133_getNextCharSlotCurrency,"core.PlayerModel","getNextCharSlotCurrency",0x51b64199,"core.PlayerModel.getNextCharSlotCurrency","core/PlayerModel.hx",133,0xb7bd8d46)
HX_LOCAL_STACK_FRAME(_hx_pos_8fb5a10071bbbcfc_137_isNextCharSlotCurrencyGems,"core.PlayerModel","isNextCharSlotCurrencyGems",0x6511af1b,"core.PlayerModel.isNextCharSlotCurrencyGems","core/PlayerModel.hx",137,0xb7bd8d46)
HX_LOCAL_STACK_FRAME(_hx_pos_8fb5a10071bbbcfc_141_getNextCharId,"core.PlayerModel","getNextCharId",0xc4fa5585,"core.PlayerModel.getNextCharId","core/PlayerModel.hx",141,0xb7bd8d46)
HX_LOCAL_STACK_FRAME(_hx_pos_8fb5a10071bbbcfc_145_getCharacterByIndex,"core.PlayerModel","getCharacterByIndex",0x3362efb3,"core.PlayerModel.getCharacterByIndex","core/PlayerModel.hx",145,0xb7bd8d46)
HX_LOCAL_STACK_FRAME(_hx_pos_8fb5a10071bbbcfc_149_isAdmin,"core.PlayerModel","isAdmin",0xdcdeb5b0,"core.PlayerModel.isAdmin","core/PlayerModel.hx",149,0xb7bd8d46)
HX_LOCAL_STACK_FRAME(_hx_pos_8fb5a10071bbbcfc_153_getMyPos,"core.PlayerModel","getMyPos",0xdb468947,"core.PlayerModel.getMyPos","core/PlayerModel.hx",153,0xb7bd8d46)
HX_LOCAL_STACK_FRAME(_hx_pos_8fb5a10071bbbcfc_157_getName,"core.PlayerModel","getName",0x3f90876c,"core.PlayerModel.getName","core/PlayerModel.hx",157,0xb7bd8d46)
HX_LOCAL_STACK_FRAME(_hx_pos_8fb5a10071bbbcfc_161_hasAvailableCharSlot,"core.PlayerModel","hasAvailableCharSlot",0x52c101d8,"core.PlayerModel.hasAvailableCharSlot","core/PlayerModel.hx",161,0xb7bd8d46)
HX_LOCAL_STACK_FRAME(_hx_pos_8fb5a10071bbbcfc_165_getAvailableCharSlots,"core.PlayerModel","getAvailableCharSlots",0x8314dbd7,"core.PlayerModel.getAvailableCharSlots","core/PlayerModel.hx",165,0xb7bd8d46)
HX_LOCAL_STACK_FRAME(_hx_pos_8fb5a10071bbbcfc_169_getSavedCharacters,"core.PlayerModel","getSavedCharacters",0x7a10e290,"core.PlayerModel.getSavedCharacters","core/PlayerModel.hx",169,0xb7bd8d46)
HX_LOCAL_STACK_FRAME(_hx_pos_8fb5a10071bbbcfc_173_setCharacterList,"core.PlayerModel","setCharacterList",0xab9f58da,"core.PlayerModel.setCharacterList","core/PlayerModel.hx",173,0xb7bd8d46)
namespace core{

void PlayerModel_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_8fb5a10071bbbcfc_8_new)
HXLINE(  15)		this->currentCharId = 0;
HXLINE(  14)		this->isInvalidated = false;
HXLINE(  11)		this->crownsChanged =  ::util::Signal_obj::__alloc( HX_CTX );
HXLINE(  10)		this->goldChanged =  ::util::Signal_obj::__alloc( HX_CTX );
HXLINE(   9)		this->gemsChanged =  ::util::Signal_obj::__alloc( HX_CTX );
HXLINE(  18)		this->isInvalidated = true;
            	}

Dynamic PlayerModel_obj::__CreateEmpty() { return new PlayerModel_obj; }

void *PlayerModel_obj::_hx_vtable = 0;

Dynamic PlayerModel_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< PlayerModel_obj > _hx_result = new PlayerModel_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool PlayerModel_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x229a6e29;
}

int PlayerModel_obj::getMaxCharacters(){
            	HX_STACKFRAME(&_hx_pos_8fb5a10071bbbcfc_22_getMaxCharacters)
HXDLIN(  22)		 ::appengine::SavedCharactersList tmp = this->charList;
HXDLIN(  22)		 ::Dynamic tmp1;
HXDLIN(  22)		if (::hx::IsNotNull( tmp )) {
HXDLIN(  22)			tmp1 = tmp->maxNumChars;
            		}
            		else {
HXDLIN(  22)			tmp1 = null();
            		}
HXDLIN(  22)		if (::hx::IsNotNull( tmp1 )) {
HXDLIN(  22)			return ( (int)(tmp1) );
            		}
            		else {
HXDLIN(  22)			return 0;
            		}
HXDLIN(  22)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(PlayerModel_obj,getMaxCharacters,return )

int PlayerModel_obj::getGems(){
            	HX_STACKFRAME(&_hx_pos_8fb5a10071bbbcfc_33_getGems)
HXDLIN(  33)		 ::appengine::SavedCharactersList tmp = this->charList;
HXDLIN(  33)		 ::Dynamic tmp1;
HXDLIN(  33)		if (::hx::IsNotNull( tmp )) {
HXDLIN(  33)			tmp1 = tmp->gems;
            		}
            		else {
HXDLIN(  33)			tmp1 = null();
            		}
HXDLIN(  33)		if (::hx::IsNotNull( tmp1 )) {
HXDLIN(  33)			return ( (int)(tmp1) );
            		}
            		else {
HXDLIN(  33)			return 0;
            		}
HXDLIN(  33)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(PlayerModel_obj,getGems,return )

void PlayerModel_obj::addGems(int gems){
            	HX_STACKFRAME(&_hx_pos_8fb5a10071bbbcfc_36_addGems)
HXLINE(  37)		if (::hx::IsNull( this->charList )) {
HXLINE(  38)			return;
            		}
HXLINE(  40)		 ::appengine::SavedCharactersList fh = this->charList;
HXDLIN(  40)		fh->gems = (fh->gems + gems);
HXLINE(  41)		this->gemsChanged->emit(this->charList->gems);
            	}


HX_DEFINE_DYNAMIC_FUNC1(PlayerModel_obj,addGems,(void))

int PlayerModel_obj::getGold(){
            	HX_STACKFRAME(&_hx_pos_8fb5a10071bbbcfc_52_getGold)
HXDLIN(  52)		 ::appengine::SavedCharactersList tmp = this->charList;
HXDLIN(  52)		 ::Dynamic tmp1;
HXDLIN(  52)		if (::hx::IsNotNull( tmp )) {
HXDLIN(  52)			tmp1 = tmp->gold;
            		}
            		else {
HXDLIN(  52)			tmp1 = null();
            		}
HXDLIN(  52)		if (::hx::IsNotNull( tmp1 )) {
HXDLIN(  52)			return ( (int)(tmp1) );
            		}
            		else {
HXDLIN(  52)			return 0;
            		}
HXDLIN(  52)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(PlayerModel_obj,getGold,return )

int PlayerModel_obj::getCrowns(){
            	HX_STACKFRAME(&_hx_pos_8fb5a10071bbbcfc_71_getCrowns)
HXDLIN(  71)		 ::appengine::SavedCharactersList tmp = this->charList;
HXDLIN(  71)		 ::Dynamic tmp1;
HXDLIN(  71)		if (::hx::IsNotNull( tmp )) {
HXDLIN(  71)			tmp1 = tmp->crowns;
            		}
            		else {
HXDLIN(  71)			tmp1 = null();
            		}
HXDLIN(  71)		if (::hx::IsNotNull( tmp1 )) {
HXDLIN(  71)			return ( (int)(tmp1) );
            		}
            		else {
HXDLIN(  71)			return 0;
            		}
HXDLIN(  71)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(PlayerModel_obj,getCrowns,return )

int PlayerModel_obj::getCharacterCount(){
            	HX_STACKFRAME(&_hx_pos_8fb5a10071bbbcfc_90_getCharacterCount)
HXDLIN(  90)		 ::appengine::SavedCharactersList tmp = this->charList;
HXDLIN(  90)		 ::Dynamic tmp1;
HXDLIN(  90)		if (::hx::IsNotNull( tmp )) {
HXDLIN(  90)			tmp1 = tmp->numChars;
            		}
            		else {
HXDLIN(  90)			tmp1 = null();
            		}
HXDLIN(  90)		if (::hx::IsNotNull( tmp1 )) {
HXDLIN(  90)			return ( (int)(tmp1) );
            		}
            		else {
HXDLIN(  90)			return 0;
            		}
HXDLIN(  90)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(PlayerModel_obj,getCharacterCount,return )

void PlayerModel_obj::deleteCharacter(int characterId){
            	HX_STACKFRAME(&_hx_pos_8fb5a10071bbbcfc_97_deleteCharacter)
HXLINE(  98)		if (::hx::IsNull( this->charList )) {
HXLINE(  99)			return;
            		}
HXLINE( 101)		 ::appengine::SavedCharacter savedChar = this->charList->getCharById(characterId);
HXLINE( 102)		int idx = this->charList->savedChars->indexOf(savedChar,null());
HXLINE( 103)		if ((idx != -1)) {
HXLINE( 104)			this->charList->savedChars->removeRange(idx,1);
HXLINE( 105)			this->charList->numChars--;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(PlayerModel_obj,deleteCharacter,(void))

::String PlayerModel_obj::getGuildName(){
            	HX_STACKFRAME(&_hx_pos_8fb5a10071bbbcfc_121_getGuildName)
HXDLIN( 121)		 ::appengine::SavedCharactersList tmp = this->charList;
HXDLIN( 121)		::String tmp1;
HXDLIN( 121)		if (::hx::IsNotNull( tmp )) {
HXDLIN( 121)			tmp1 = tmp->guildName;
            		}
            		else {
HXDLIN( 121)			tmp1 = null();
            		}
HXDLIN( 121)		if (::hx::IsNotNull( tmp1 )) {
HXDLIN( 121)			return tmp1;
            		}
            		else {
HXDLIN( 121)			return HX_("",00,00,00,00);
            		}
HXDLIN( 121)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(PlayerModel_obj,getGuildName,return )

int PlayerModel_obj::getGuildRank(){
            	HX_STACKFRAME(&_hx_pos_8fb5a10071bbbcfc_125_getGuildRank)
HXDLIN( 125)		 ::appengine::SavedCharactersList tmp = this->charList;
HXDLIN( 125)		 ::Dynamic tmp1;
HXDLIN( 125)		if (::hx::IsNotNull( tmp )) {
HXDLIN( 125)			tmp1 = tmp->guildRank;
            		}
            		else {
HXDLIN( 125)			tmp1 = null();
            		}
HXDLIN( 125)		if (::hx::IsNotNull( tmp1 )) {
HXDLIN( 125)			return ( (int)(tmp1) );
            		}
            		else {
HXDLIN( 125)			return 0;
            		}
HXDLIN( 125)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(PlayerModel_obj,getGuildRank,return )

int PlayerModel_obj::getNextCharSlotPrice(){
            	HX_STACKFRAME(&_hx_pos_8fb5a10071bbbcfc_129_getNextCharSlotPrice)
HXDLIN( 129)		 ::appengine::SavedCharactersList tmp = this->charList;
HXDLIN( 129)		 ::Dynamic tmp1;
HXDLIN( 129)		if (::hx::IsNotNull( tmp )) {
HXDLIN( 129)			tmp1 = tmp->nextCharSlotPrice;
            		}
            		else {
HXDLIN( 129)			tmp1 = null();
            		}
HXDLIN( 129)		if (::hx::IsNotNull( tmp1 )) {
HXDLIN( 129)			return ( (int)(tmp1) );
            		}
            		else {
HXDLIN( 129)			return 0;
            		}
HXDLIN( 129)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(PlayerModel_obj,getNextCharSlotPrice,return )

int PlayerModel_obj::getNextCharSlotCurrency(){
            	HX_STACKFRAME(&_hx_pos_8fb5a10071bbbcfc_133_getNextCharSlotCurrency)
HXDLIN( 133)		 ::appengine::SavedCharactersList tmp = this->charList;
HXDLIN( 133)		 ::Dynamic tmp1;
HXDLIN( 133)		if (::hx::IsNotNull( tmp )) {
HXDLIN( 133)			tmp1 = tmp->nextCharSlotCurrency;
            		}
            		else {
HXDLIN( 133)			tmp1 = null();
            		}
HXDLIN( 133)		if (::hx::IsNotNull( tmp1 )) {
HXDLIN( 133)			return ( (int)(tmp1) );
            		}
            		else {
HXDLIN( 133)			return 0;
            		}
HXDLIN( 133)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(PlayerModel_obj,getNextCharSlotCurrency,return )

bool PlayerModel_obj::isNextCharSlotCurrencyGems(){
            	HX_STACKFRAME(&_hx_pos_8fb5a10071bbbcfc_137_isNextCharSlotCurrencyGems)
HXDLIN( 137)		return (this->getNextCharSlotCurrency() == 1);
            	}


HX_DEFINE_DYNAMIC_FUNC0(PlayerModel_obj,isNextCharSlotCurrencyGems,return )

int PlayerModel_obj::getNextCharId(){
            	HX_STACKFRAME(&_hx_pos_8fb5a10071bbbcfc_141_getNextCharId)
HXDLIN( 141)		 ::appengine::SavedCharactersList tmp = this->charList;
HXDLIN( 141)		 ::Dynamic tmp1;
HXDLIN( 141)		if (::hx::IsNotNull( tmp )) {
HXDLIN( 141)			tmp1 = tmp->nextCharId;
            		}
            		else {
HXDLIN( 141)			tmp1 = null();
            		}
HXDLIN( 141)		if (::hx::IsNotNull( tmp1 )) {
HXDLIN( 141)			return ( (int)(tmp1) );
            		}
            		else {
HXDLIN( 141)			return 0;
            		}
HXDLIN( 141)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(PlayerModel_obj,getNextCharId,return )

 ::appengine::SavedCharacter PlayerModel_obj::getCharacterByIndex(int idx){
            	HX_GC_STACKFRAME(&_hx_pos_8fb5a10071bbbcfc_145_getCharacterByIndex)
HXDLIN( 145)		 ::appengine::SavedCharactersList tmp = this->charList;
HXDLIN( 145)		 ::appengine::SavedCharacter tmp1;
HXDLIN( 145)		if (::hx::IsNotNull( tmp )) {
HXDLIN( 145)			tmp1 = tmp->savedChars->__get(idx).StaticCast<  ::appengine::SavedCharacter >();
            		}
            		else {
HXDLIN( 145)			tmp1 = null();
            		}
HXDLIN( 145)		if (::hx::IsNotNull( tmp1 )) {
HXDLIN( 145)			return tmp1;
            		}
            		else {
HXDLIN( 145)			return  ::appengine::SavedCharacter_obj::__alloc( HX_CTX ,::Xml_obj::parse(HX_("",00,00,00,00)),HX_("Unknown",6a,4b,cc,ae));
            		}
HXDLIN( 145)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(PlayerModel_obj,getCharacterByIndex,return )

bool PlayerModel_obj::isAdmin(){
            	HX_STACKFRAME(&_hx_pos_8fb5a10071bbbcfc_149_isAdmin)
HXDLIN( 149)		 ::appengine::SavedCharactersList tmp = this->charList;
HXDLIN( 149)		 ::Dynamic tmp1;
HXDLIN( 149)		if (::hx::IsNotNull( tmp )) {
HXDLIN( 149)			tmp1 = tmp->isAdmin;
            		}
            		else {
HXDLIN( 149)			tmp1 = null();
            		}
HXDLIN( 149)		if (::hx::IsNotNull( tmp1 )) {
HXDLIN( 149)			return ( (bool)(tmp1) );
            		}
            		else {
HXDLIN( 149)			return false;
            		}
HXDLIN( 149)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC0(PlayerModel_obj,isAdmin,return )

 ::servers::LatLong PlayerModel_obj::getMyPos(){
            	HX_GC_STACKFRAME(&_hx_pos_8fb5a10071bbbcfc_153_getMyPos)
HXDLIN( 153)		 ::appengine::SavedCharactersList tmp = this->charList;
HXDLIN( 153)		 ::servers::LatLong tmp1;
HXDLIN( 153)		if (::hx::IsNotNull( tmp )) {
HXDLIN( 153)			tmp1 = tmp->myPos;
            		}
            		else {
HXDLIN( 153)			tmp1 = null();
            		}
HXDLIN( 153)		if (::hx::IsNotNull( tmp1 )) {
HXDLIN( 153)			return tmp1;
            		}
            		else {
HXDLIN( 153)			return  ::servers::LatLong_obj::__alloc( HX_CTX ,( (Float)(0) ),( (Float)(0) ));
            		}
HXDLIN( 153)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(PlayerModel_obj,getMyPos,return )

::String PlayerModel_obj::getName(){
            	HX_STACKFRAME(&_hx_pos_8fb5a10071bbbcfc_157_getName)
HXDLIN( 157)		 ::appengine::SavedCharactersList tmp = this->charList;
HXDLIN( 157)		::String tmp1;
HXDLIN( 157)		if (::hx::IsNotNull( tmp )) {
HXDLIN( 157)			tmp1 = tmp->name;
            		}
            		else {
HXDLIN( 157)			tmp1 = null();
            		}
HXDLIN( 157)		if (::hx::IsNotNull( tmp1 )) {
HXDLIN( 157)			return tmp1;
            		}
            		else {
HXDLIN( 157)			return HX_("Unknown",6a,4b,cc,ae);
            		}
HXDLIN( 157)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(PlayerModel_obj,getName,return )

bool PlayerModel_obj::hasAvailableCharSlot(){
            	HX_STACKFRAME(&_hx_pos_8fb5a10071bbbcfc_161_hasAvailableCharSlot)
HXDLIN( 161)		 ::appengine::SavedCharactersList tmp = this->charList;
HXDLIN( 161)		 ::Dynamic tmp1;
HXDLIN( 161)		if (::hx::IsNotNull( tmp )) {
HXDLIN( 161)			tmp1 = tmp->hasAvailableCharSlot();
            		}
            		else {
HXDLIN( 161)			tmp1 = null();
            		}
HXDLIN( 161)		if (::hx::IsNotNull( tmp1 )) {
HXDLIN( 161)			return ( (bool)(tmp1) );
            		}
            		else {
HXDLIN( 161)			return false;
            		}
HXDLIN( 161)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC0(PlayerModel_obj,hasAvailableCharSlot,return )

int PlayerModel_obj::getAvailableCharSlots(){
            	HX_STACKFRAME(&_hx_pos_8fb5a10071bbbcfc_165_getAvailableCharSlots)
HXDLIN( 165)		 ::appengine::SavedCharactersList tmp = this->charList;
HXDLIN( 165)		 ::Dynamic tmp1;
HXDLIN( 165)		if (::hx::IsNotNull( tmp )) {
HXDLIN( 165)			tmp1 = tmp->availableCharSlots();
            		}
            		else {
HXDLIN( 165)			tmp1 = null();
            		}
HXDLIN( 165)		if (::hx::IsNotNull( tmp1 )) {
HXDLIN( 165)			return ( (int)(tmp1) );
            		}
            		else {
HXDLIN( 165)			return 0;
            		}
HXDLIN( 165)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(PlayerModel_obj,getAvailableCharSlots,return )

::Array< ::Dynamic> PlayerModel_obj::getSavedCharacters(){
            	HX_STACKFRAME(&_hx_pos_8fb5a10071bbbcfc_169_getSavedCharacters)
HXDLIN( 169)		 ::appengine::SavedCharactersList tmp = this->charList;
HXDLIN( 169)		::Array< ::Dynamic> tmp1;
HXDLIN( 169)		if (::hx::IsNotNull( tmp )) {
HXDLIN( 169)			tmp1 = tmp->savedChars;
            		}
            		else {
HXDLIN( 169)			tmp1 = null();
            		}
HXDLIN( 169)		if (::hx::IsNotNull( tmp1 )) {
HXDLIN( 169)			return tmp1;
            		}
            		else {
HXDLIN( 169)			return ::Array_obj< ::Dynamic>::__new();
            		}
HXDLIN( 169)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(PlayerModel_obj,getSavedCharacters,return )

void PlayerModel_obj::setCharacterList( ::appengine::SavedCharactersList savedCharactersList){
            	HX_STACKFRAME(&_hx_pos_8fb5a10071bbbcfc_173_setCharacterList)
HXDLIN( 173)		this->charList = savedCharactersList;
            	}


HX_DEFINE_DYNAMIC_FUNC1(PlayerModel_obj,setCharacterList,(void))


::hx::ObjectPtr< PlayerModel_obj > PlayerModel_obj::__new() {
	::hx::ObjectPtr< PlayerModel_obj > __this = new PlayerModel_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< PlayerModel_obj > PlayerModel_obj::__alloc(::hx::Ctx *_hx_ctx) {
	PlayerModel_obj *__this = (PlayerModel_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(PlayerModel_obj), true, "core.PlayerModel"));
	*(void **)__this = PlayerModel_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

PlayerModel_obj::PlayerModel_obj()
{
}

void PlayerModel_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(PlayerModel);
	HX_MARK_MEMBER_NAME(gemsChanged,"gemsChanged");
	HX_MARK_MEMBER_NAME(goldChanged,"goldChanged");
	HX_MARK_MEMBER_NAME(crownsChanged,"crownsChanged");
	HX_MARK_MEMBER_NAME(charList,"charList");
	HX_MARK_MEMBER_NAME(isInvalidated,"isInvalidated");
	HX_MARK_MEMBER_NAME(currentCharId,"currentCharId");
	HX_MARK_END_CLASS();
}

void PlayerModel_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(gemsChanged,"gemsChanged");
	HX_VISIT_MEMBER_NAME(goldChanged,"goldChanged");
	HX_VISIT_MEMBER_NAME(crownsChanged,"crownsChanged");
	HX_VISIT_MEMBER_NAME(charList,"charList");
	HX_VISIT_MEMBER_NAME(isInvalidated,"isInvalidated");
	HX_VISIT_MEMBER_NAME(currentCharId,"currentCharId");
}

::hx::Val PlayerModel_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"getGems") ) { return ::hx::Val( getGems_dyn() ); }
		if (HX_FIELD_EQ(inName,"addGems") ) { return ::hx::Val( addGems_dyn() ); }
		if (HX_FIELD_EQ(inName,"getGold") ) { return ::hx::Val( getGold_dyn() ); }
		if (HX_FIELD_EQ(inName,"isAdmin") ) { return ::hx::Val( isAdmin_dyn() ); }
		if (HX_FIELD_EQ(inName,"getName") ) { return ::hx::Val( getName_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"charList") ) { return ::hx::Val( charList ); }
		if (HX_FIELD_EQ(inName,"getMyPos") ) { return ::hx::Val( getMyPos_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"getCrowns") ) { return ::hx::Val( getCrowns_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"gemsChanged") ) { return ::hx::Val( gemsChanged ); }
		if (HX_FIELD_EQ(inName,"goldChanged") ) { return ::hx::Val( goldChanged ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"getGuildName") ) { return ::hx::Val( getGuildName_dyn() ); }
		if (HX_FIELD_EQ(inName,"getGuildRank") ) { return ::hx::Val( getGuildRank_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"crownsChanged") ) { return ::hx::Val( crownsChanged ); }
		if (HX_FIELD_EQ(inName,"isInvalidated") ) { return ::hx::Val( isInvalidated ); }
		if (HX_FIELD_EQ(inName,"currentCharId") ) { return ::hx::Val( currentCharId ); }
		if (HX_FIELD_EQ(inName,"getNextCharId") ) { return ::hx::Val( getNextCharId_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"deleteCharacter") ) { return ::hx::Val( deleteCharacter_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"getMaxCharacters") ) { return ::hx::Val( getMaxCharacters_dyn() ); }
		if (HX_FIELD_EQ(inName,"setCharacterList") ) { return ::hx::Val( setCharacterList_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"getCharacterCount") ) { return ::hx::Val( getCharacterCount_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"getSavedCharacters") ) { return ::hx::Val( getSavedCharacters_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"getCharacterByIndex") ) { return ::hx::Val( getCharacterByIndex_dyn() ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"getNextCharSlotPrice") ) { return ::hx::Val( getNextCharSlotPrice_dyn() ); }
		if (HX_FIELD_EQ(inName,"hasAvailableCharSlot") ) { return ::hx::Val( hasAvailableCharSlot_dyn() ); }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"getAvailableCharSlots") ) { return ::hx::Val( getAvailableCharSlots_dyn() ); }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"getNextCharSlotCurrency") ) { return ::hx::Val( getNextCharSlotCurrency_dyn() ); }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"isNextCharSlotCurrencyGems") ) { return ::hx::Val( isNextCharSlotCurrencyGems_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val PlayerModel_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"charList") ) { charList=inValue.Cast<  ::appengine::SavedCharactersList >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"gemsChanged") ) { gemsChanged=inValue.Cast<  ::util::Signal >(); return inValue; }
		if (HX_FIELD_EQ(inName,"goldChanged") ) { goldChanged=inValue.Cast<  ::util::Signal >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"crownsChanged") ) { crownsChanged=inValue.Cast<  ::util::Signal >(); return inValue; }
		if (HX_FIELD_EQ(inName,"isInvalidated") ) { isInvalidated=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"currentCharId") ) { currentCharId=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void PlayerModel_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("gemsChanged",50,44,6f,d3));
	outFields->push(HX_("goldChanged",34,da,71,29));
	outFields->push(HX_("crownsChanged",b8,ce,3f,73));
	outFields->push(HX_("charList",54,ca,12,a2));
	outFields->push(HX_("isInvalidated",bf,82,d0,c6));
	outFields->push(HX_("currentCharId",6a,01,d2,9a));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo PlayerModel_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::util::Signal */ ,(int)offsetof(PlayerModel_obj,gemsChanged),HX_("gemsChanged",50,44,6f,d3)},
	{::hx::fsObject /*  ::util::Signal */ ,(int)offsetof(PlayerModel_obj,goldChanged),HX_("goldChanged",34,da,71,29)},
	{::hx::fsObject /*  ::util::Signal */ ,(int)offsetof(PlayerModel_obj,crownsChanged),HX_("crownsChanged",b8,ce,3f,73)},
	{::hx::fsObject /*  ::appengine::SavedCharactersList */ ,(int)offsetof(PlayerModel_obj,charList),HX_("charList",54,ca,12,a2)},
	{::hx::fsBool,(int)offsetof(PlayerModel_obj,isInvalidated),HX_("isInvalidated",bf,82,d0,c6)},
	{::hx::fsInt,(int)offsetof(PlayerModel_obj,currentCharId),HX_("currentCharId",6a,01,d2,9a)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *PlayerModel_obj_sStaticStorageInfo = 0;
#endif

static ::String PlayerModel_obj_sMemberFields[] = {
	HX_("gemsChanged",50,44,6f,d3),
	HX_("goldChanged",34,da,71,29),
	HX_("crownsChanged",b8,ce,3f,73),
	HX_("charList",54,ca,12,a2),
	HX_("isInvalidated",bf,82,d0,c6),
	HX_("currentCharId",6a,01,d2,9a),
	HX_("getMaxCharacters",f8,45,60,bb),
	HX_("getGems",ba,ac,e4,16),
	HX_("addGems",c5,3f,9f,80),
	HX_("getGold",56,42,ec,16),
	HX_("getCrowns",d2,be,12,ff),
	HX_("getCharacterCount",9c,a3,e8,92),
	HX_("deleteCharacter",fe,1d,36,84),
	HX_("getGuildName",28,52,49,17),
	HX_("getGuildRank",89,2d,ee,19),
	HX_("getNextCharSlotPrice",8c,03,c6,c5),
	HX_("getNextCharSlotCurrency",2e,16,e5,c3),
	HX_("isNextCharSlotCurrencyGems",a6,25,5c,87),
	HX_("getNextCharId",da,8d,19,c9),
	HX_("getCharacterByIndex",c8,95,5c,19),
	HX_("isAdmin",45,50,d0,b8),
	HX_("getMyPos",12,31,bc,72),
	HX_("getName",01,22,82,1b),
	HX_("hasAvailableCharSlot",23,ae,38,a7),
	HX_("getAvailableCharSlots",2c,f1,53,17),
	HX_("getSavedCharacters",1b,56,1c,1e),
	HX_("setCharacterList",a5,43,02,01),
	::String(null()) };

::hx::Class PlayerModel_obj::__mClass;

void PlayerModel_obj::__register()
{
	PlayerModel_obj _hx_dummy;
	PlayerModel_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("core.PlayerModel",d9,e2,a9,9e);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(PlayerModel_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< PlayerModel_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = PlayerModel_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = PlayerModel_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace core
