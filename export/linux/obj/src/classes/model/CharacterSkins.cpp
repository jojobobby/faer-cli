// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_classes_model_CharacterSkin
#include <classes/model/CharacterSkin.h>
#endif
#ifndef INCLUDED_classes_model_CharacterSkinState
#include <classes/model/CharacterSkinState.h>
#endif
#ifndef INCLUDED_classes_model_CharacterSkins
#include <classes/model/CharacterSkins.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_IntMap
#include <haxe/ds/IntMap.h>
#endif
#ifndef INCLUDED_util_Signal
#include <util/Signal.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_82985c93225d73ee_5_new,"classes.model.CharacterSkins","new",0x5f242eec,"classes.model.CharacterSkins.new","classes/model/CharacterSkins.hx",5,0xf190e102)
HX_LOCAL_STACK_FRAME(_hx_pos_82985c93225d73ee_15_getCount,"classes.model.CharacterSkins","getCount",0x1f4bba4d,"classes.model.CharacterSkins.getCount","classes/model/CharacterSkins.hx",15,0xf190e102)
HX_LOCAL_STACK_FRAME(_hx_pos_82985c93225d73ee_19_getDefaultSkin,"classes.model.CharacterSkins","getDefaultSkin",0x57d2b7dc,"classes.model.CharacterSkins.getDefaultSkin","classes/model/CharacterSkins.hx",19,0xf190e102)
HX_LOCAL_STACK_FRAME(_hx_pos_82985c93225d73ee_23_getSelectedSkin,"classes.model.CharacterSkins","getSelectedSkin",0x2a038cba,"classes.model.CharacterSkins.getSelectedSkin","classes/model/CharacterSkins.hx",23,0xf190e102)
HX_LOCAL_STACK_FRAME(_hx_pos_82985c93225d73ee_27_getSkinAt,"classes.model.CharacterSkins","getSkinAt",0x53240192,"classes.model.CharacterSkins.getSkinAt","classes/model/CharacterSkins.hx",27,0xf190e102)
HX_LOCAL_STACK_FRAME(_hx_pos_82985c93225d73ee_30_addSkin,"classes.model.CharacterSkins","addSkin",0xd602edca,"classes.model.CharacterSkins.addSkin","classes/model/CharacterSkins.hx",30,0xf190e102)
HX_LOCAL_STACK_FRAME(_hx_pos_82985c93225d73ee_46_getSkin,"classes.model.CharacterSkins","getSkin",0x6c485abf,"classes.model.CharacterSkins.getSkin","classes/model/CharacterSkins.hx",46,0xf190e102)
HX_LOCAL_STACK_FRAME(_hx_pos_82985c93225d73ee_50_onSkinChanged,"classes.model.CharacterSkins","onSkinChanged",0x8097dea4,"classes.model.CharacterSkins.onSkinChanged","classes/model/CharacterSkins.hx",50,0xf190e102)
HX_LOCAL_STACK_FRAME(_hx_pos_82985c93225d73ee_57_updateSkinState,"classes.model.CharacterSkins","updateSkinState",0x4504fb97,"classes.model.CharacterSkins.updateSkinState","classes/model/CharacterSkins.hx",57,0xf190e102)
namespace classes{
namespace model{

void CharacterSkins_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_82985c93225d73ee_5_new)
HXLINE(   8)		this->map =  ::haxe::ds::IntMap_obj::__alloc( HX_CTX );
HXLINE(   6)		this->skins = ::Array_obj< ::Dynamic>::__new();
            	}

Dynamic CharacterSkins_obj::__CreateEmpty() { return new CharacterSkins_obj; }

void *CharacterSkins_obj::_hx_vtable = 0;

Dynamic CharacterSkins_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< CharacterSkins_obj > _hx_result = new CharacterSkins_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool CharacterSkins_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x599672bc;
}

int CharacterSkins_obj::getCount(){
            	HX_STACKFRAME(&_hx_pos_82985c93225d73ee_15_getCount)
HXDLIN(  15)		return this->skins->length;
            	}


HX_DEFINE_DYNAMIC_FUNC0(CharacterSkins_obj,getCount,return )

 ::classes::model::CharacterSkin CharacterSkins_obj::getDefaultSkin(){
            	HX_STACKFRAME(&_hx_pos_82985c93225d73ee_19_getDefaultSkin)
HXDLIN(  19)		return this->defaultSkin;
            	}


HX_DEFINE_DYNAMIC_FUNC0(CharacterSkins_obj,getDefaultSkin,return )

 ::classes::model::CharacterSkin CharacterSkins_obj::getSelectedSkin(){
            	HX_STACKFRAME(&_hx_pos_82985c93225d73ee_23_getSelectedSkin)
HXDLIN(  23)		return this->selectedSkin;
            	}


HX_DEFINE_DYNAMIC_FUNC0(CharacterSkins_obj,getSelectedSkin,return )

 ::classes::model::CharacterSkin CharacterSkins_obj::getSkinAt(int index){
            	HX_STACKFRAME(&_hx_pos_82985c93225d73ee_27_getSkinAt)
HXDLIN(  27)		return this->skins->__get(index).StaticCast<  ::classes::model::CharacterSkin >();
            	}


HX_DEFINE_DYNAMIC_FUNC1(CharacterSkins_obj,getSkinAt,return )

void CharacterSkins_obj::addSkin( ::classes::model::CharacterSkin skin,::hx::Null< bool >  __o_isDefault){
            		bool isDefault = __o_isDefault.Default(false);
            	HX_STACKFRAME(&_hx_pos_82985c93225d73ee_30_addSkin)
HXLINE(  31)		skin->changed->on(this->onSkinChanged_dyn());
HXLINE(  32)		this->skins->push(skin);
HXLINE(  33)		this->map->set(skin->id,skin);
HXLINE(  34)		::classes::model::CharacterSkins_obj::updateSkinState(skin);
HXLINE(  35)		if (isDefault) {
HXLINE(  36)			this->defaultSkin = skin;
HXLINE(  37)			if (::hx::IsNull( this->selectedSkin )) {
HXLINE(  38)				this->selectedSkin = skin;
HXLINE(  39)				skin->setIsSelected(true);
            			}
            		}
            		else {
HXLINE(  41)			if (skin->getIsSelected()) {
HXLINE(  42)				this->selectedSkin = skin;
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(CharacterSkins_obj,addSkin,(void))

 ::classes::model::CharacterSkin CharacterSkins_obj::getSkin(int id){
            	HX_STACKFRAME(&_hx_pos_82985c93225d73ee_46_getSkin)
HXDLIN(  46)		if (this->map->exists(id)) {
HXDLIN(  46)			return ( ( ::classes::model::CharacterSkin)(this->map->get(id)) );
            		}
            		else {
HXDLIN(  46)			return this->defaultSkin;
            		}
HXDLIN(  46)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(CharacterSkins_obj,getSkin,return )

void CharacterSkins_obj::onSkinChanged( ::classes::model::CharacterSkin skin){
            	HX_STACKFRAME(&_hx_pos_82985c93225d73ee_50_onSkinChanged)
HXDLIN(  50)		bool _hx_tmp;
HXDLIN(  50)		if (skin->getIsSelected()) {
HXDLIN(  50)			_hx_tmp = ::hx::IsInstanceNotEq( this->selectedSkin,skin );
            		}
            		else {
HXDLIN(  50)			_hx_tmp = false;
            		}
HXDLIN(  50)		if (_hx_tmp) {
HXLINE(  51)			{
HXLINE(  51)				 ::classes::model::CharacterSkin tmp = this->selectedSkin;
HXDLIN(  51)				if (::hx::IsNotNull( tmp )) {
HXLINE(  51)					tmp->setIsSelected(false);
            				}
            			}
HXLINE(  52)			this->selectedSkin = skin;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(CharacterSkins_obj,onSkinChanged,(void))

void CharacterSkins_obj::updateSkinState( ::classes::model::CharacterSkin skin){
            	HX_STACKFRAME(&_hx_pos_82985c93225d73ee_57_updateSkinState)
HXDLIN(  57)		 ::classes::model::CharacterSkinState _hx_tmp = skin->getState();
HXDLIN(  57)		if (::hx::IsInstanceNotEq( _hx_tmp,::classes::model::CharacterSkinState_obj::OWNED )) {
HXLINE(  58)			skin->setState(::classes::model::CharacterSkinState_obj::PURCHASABLE);
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CharacterSkins_obj,updateSkinState,(void))


::hx::ObjectPtr< CharacterSkins_obj > CharacterSkins_obj::__new() {
	::hx::ObjectPtr< CharacterSkins_obj > __this = new CharacterSkins_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< CharacterSkins_obj > CharacterSkins_obj::__alloc(::hx::Ctx *_hx_ctx) {
	CharacterSkins_obj *__this = (CharacterSkins_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(CharacterSkins_obj), true, "classes.model.CharacterSkins"));
	*(void **)__this = CharacterSkins_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

CharacterSkins_obj::CharacterSkins_obj()
{
}

void CharacterSkins_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(CharacterSkins);
	HX_MARK_MEMBER_NAME(skins,"skins");
	HX_MARK_MEMBER_NAME(map,"map");
	HX_MARK_MEMBER_NAME(defaultSkin,"defaultSkin");
	HX_MARK_MEMBER_NAME(selectedSkin,"selectedSkin");
	HX_MARK_END_CLASS();
}

void CharacterSkins_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(skins,"skins");
	HX_VISIT_MEMBER_NAME(map,"map");
	HX_VISIT_MEMBER_NAME(defaultSkin,"defaultSkin");
	HX_VISIT_MEMBER_NAME(selectedSkin,"selectedSkin");
}

::hx::Val CharacterSkins_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"map") ) { return ::hx::Val( map ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"skins") ) { return ::hx::Val( skins ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"addSkin") ) { return ::hx::Val( addSkin_dyn() ); }
		if (HX_FIELD_EQ(inName,"getSkin") ) { return ::hx::Val( getSkin_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"getCount") ) { return ::hx::Val( getCount_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"getSkinAt") ) { return ::hx::Val( getSkinAt_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"defaultSkin") ) { return ::hx::Val( defaultSkin ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"selectedSkin") ) { return ::hx::Val( selectedSkin ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"onSkinChanged") ) { return ::hx::Val( onSkinChanged_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"getDefaultSkin") ) { return ::hx::Val( getDefaultSkin_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"getSelectedSkin") ) { return ::hx::Val( getSelectedSkin_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool CharacterSkins_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 15:
		if (HX_FIELD_EQ(inName,"updateSkinState") ) { outValue = updateSkinState_dyn(); return true; }
	}
	return false;
}

::hx::Val CharacterSkins_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"map") ) { map=inValue.Cast<  ::haxe::ds::IntMap >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"skins") ) { skins=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"defaultSkin") ) { defaultSkin=inValue.Cast<  ::classes::model::CharacterSkin >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"selectedSkin") ) { selectedSkin=inValue.Cast<  ::classes::model::CharacterSkin >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void CharacterSkins_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("skins",56,97,1e,7e));
	outFields->push(HX_("map",9c,0a,53,00));
	outFields->push(HX_("defaultSkin",de,0f,14,1e));
	outFields->push(HX_("selectedSkin",78,36,ef,dc));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo CharacterSkins_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(CharacterSkins_obj,skins),HX_("skins",56,97,1e,7e)},
	{::hx::fsObject /*  ::haxe::ds::IntMap */ ,(int)offsetof(CharacterSkins_obj,map),HX_("map",9c,0a,53,00)},
	{::hx::fsObject /*  ::classes::model::CharacterSkin */ ,(int)offsetof(CharacterSkins_obj,defaultSkin),HX_("defaultSkin",de,0f,14,1e)},
	{::hx::fsObject /*  ::classes::model::CharacterSkin */ ,(int)offsetof(CharacterSkins_obj,selectedSkin),HX_("selectedSkin",78,36,ef,dc)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *CharacterSkins_obj_sStaticStorageInfo = 0;
#endif

static ::String CharacterSkins_obj_sMemberFields[] = {
	HX_("skins",56,97,1e,7e),
	HX_("map",9c,0a,53,00),
	HX_("defaultSkin",de,0f,14,1e),
	HX_("selectedSkin",78,36,ef,dc),
	HX_("getCount",59,54,3a,aa),
	HX_("getDefaultSkin",e8,62,b2,a5),
	HX_("getSelectedSkin",2e,8c,d9,ff),
	HX_("getSkinAt",06,32,fc,58),
	HX_("addSkin",3e,59,92,88),
	HX_("getSkin",33,c6,d7,1e),
	HX_("onSkinChanged",18,59,c3,58),
	::String(null()) };

::hx::Class CharacterSkins_obj::__mClass;

static ::String CharacterSkins_obj_sStaticFields[] = {
	HX_("updateSkinState",0b,fb,da,1a),
	::String(null())
};

void CharacterSkins_obj::__register()
{
	CharacterSkins_obj _hx_dummy;
	CharacterSkins_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("classes.model.CharacterSkins",fa,88,d7,97);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &CharacterSkins_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(CharacterSkins_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(CharacterSkins_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< CharacterSkins_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = CharacterSkins_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = CharacterSkins_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace classes
} // end namespace model
