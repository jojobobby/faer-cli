// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_Global
#include <Global.h>
#endif
#ifndef INCLUDED_classes_model_CharacterClass
#include <classes/model/CharacterClass.h>
#endif
#ifndef INCLUDED_classes_model_CharacterSkins
#include <classes/model/CharacterSkins.h>
#endif
#ifndef INCLUDED_classes_model_ClassModel
#include <classes/model/ClassModel.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_40f9770aa5c56647_5_new,"classes.model.CharacterClass","new",0x1c5d28ce,"classes.model.CharacterClass.new","classes/model/CharacterClass.hx",5,0x36253960)
HX_LOCAL_STACK_FRAME(_hx_pos_40f9770aa5c56647_25_setIsSelected,"classes.model.CharacterClass","setIsSelected",0x834de895,"classes.model.CharacterClass.setIsSelected","classes/model/CharacterClass.hx",25,0x36253960)
namespace classes{
namespace model{

void CharacterClass_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_40f9770aa5c56647_5_new)
HXLINE(  16)		this->isSelected = false;
HXLINE(  12)		this->bloodProb = ( (float)(((Float)0.0)) );
HXLINE(  11)		this->deathSound = HX_("",00,00,00,00);
HXLINE(  10)		this->hitSound = HX_("",00,00,00,00);
HXLINE(   9)		this->description = HX_("",00,00,00,00);
HXLINE(   8)		this->name = HX_("",00,00,00,00);
HXLINE(   7)		this->id = 0;
HXLINE(   6)		this->skins =  ::classes::model::CharacterSkins_obj::__alloc( HX_CTX );
            	}

Dynamic CharacterClass_obj::__CreateEmpty() { return new CharacterClass_obj; }

void *CharacterClass_obj::_hx_vtable = 0;

Dynamic CharacterClass_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< CharacterClass_obj > _hx_result = new CharacterClass_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool CharacterClass_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x5ac4433a;
}

void CharacterClass_obj::setIsSelected(bool value){
            	HX_STACKFRAME(&_hx_pos_40f9770aa5c56647_25_setIsSelected)
HXDLIN(  25)		if ((this->isSelected != value)) {
HXLINE(  26)			this->isSelected = value;
HXLINE(  27)			if (this->isSelected) {
HXLINE(  28)				::Global_obj::classModel->selectClass(::hx::ObjectPtr<OBJ_>(this));
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(CharacterClass_obj,setIsSelected,(void))


::hx::ObjectPtr< CharacterClass_obj > CharacterClass_obj::__new() {
	::hx::ObjectPtr< CharacterClass_obj > __this = new CharacterClass_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< CharacterClass_obj > CharacterClass_obj::__alloc(::hx::Ctx *_hx_ctx) {
	CharacterClass_obj *__this = (CharacterClass_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(CharacterClass_obj), true, "classes.model.CharacterClass"));
	*(void **)__this = CharacterClass_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

CharacterClass_obj::CharacterClass_obj()
{
}

void CharacterClass_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(CharacterClass);
	HX_MARK_MEMBER_NAME(skins,"skins");
	HX_MARK_MEMBER_NAME(id,"id");
	HX_MARK_MEMBER_NAME(name,"name");
	HX_MARK_MEMBER_NAME(description,"description");
	HX_MARK_MEMBER_NAME(hitSound,"hitSound");
	HX_MARK_MEMBER_NAME(deathSound,"deathSound");
	HX_MARK_MEMBER_NAME(bloodProb,"bloodProb");
	HX_MARK_MEMBER_NAME(slotTypes,"slotTypes");
	HX_MARK_MEMBER_NAME(defaultEquipment,"defaultEquipment");
	HX_MARK_MEMBER_NAME(isSelected,"isSelected");
	HX_MARK_END_CLASS();
}

void CharacterClass_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(skins,"skins");
	HX_VISIT_MEMBER_NAME(id,"id");
	HX_VISIT_MEMBER_NAME(name,"name");
	HX_VISIT_MEMBER_NAME(description,"description");
	HX_VISIT_MEMBER_NAME(hitSound,"hitSound");
	HX_VISIT_MEMBER_NAME(deathSound,"deathSound");
	HX_VISIT_MEMBER_NAME(bloodProb,"bloodProb");
	HX_VISIT_MEMBER_NAME(slotTypes,"slotTypes");
	HX_VISIT_MEMBER_NAME(defaultEquipment,"defaultEquipment");
	HX_VISIT_MEMBER_NAME(isSelected,"isSelected");
}

::hx::Val CharacterClass_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"id") ) { return ::hx::Val( id ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { return ::hx::Val( name ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"skins") ) { return ::hx::Val( skins ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"hitSound") ) { return ::hx::Val( hitSound ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"bloodProb") ) { return ::hx::Val( bloodProb ); }
		if (HX_FIELD_EQ(inName,"slotTypes") ) { return ::hx::Val( slotTypes ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"deathSound") ) { return ::hx::Val( deathSound ); }
		if (HX_FIELD_EQ(inName,"isSelected") ) { return ::hx::Val( isSelected ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"description") ) { return ::hx::Val( description ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"setIsSelected") ) { return ::hx::Val( setIsSelected_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"defaultEquipment") ) { return ::hx::Val( defaultEquipment ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val CharacterClass_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"id") ) { id=inValue.Cast< int >(); return inValue; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { name=inValue.Cast< ::String >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"skins") ) { skins=inValue.Cast<  ::classes::model::CharacterSkins >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"hitSound") ) { hitSound=inValue.Cast< ::String >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"bloodProb") ) { bloodProb=inValue.Cast< float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"slotTypes") ) { slotTypes=inValue.Cast< ::Array< int > >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"deathSound") ) { deathSound=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"isSelected") ) { isSelected=inValue.Cast< bool >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"description") ) { description=inValue.Cast< ::String >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"defaultEquipment") ) { defaultEquipment=inValue.Cast< ::Array< int > >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void CharacterClass_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("skins",56,97,1e,7e));
	outFields->push(HX_("id",db,5b,00,00));
	outFields->push(HX_("name",4b,72,ff,48));
	outFields->push(HX_("description",fc,08,1d,5f));
	outFields->push(HX_("hitSound",7c,e9,2b,c0));
	outFields->push(HX_("deathSound",fb,d0,43,83));
	outFields->push(HX_("bloodProb",6f,d8,67,14));
	outFields->push(HX_("slotTypes",9b,89,e7,fa));
	outFields->push(HX_("defaultEquipment",4d,9b,7d,fd));
	outFields->push(HX_("isSelected",65,3c,1c,2c));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo CharacterClass_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::classes::model::CharacterSkins */ ,(int)offsetof(CharacterClass_obj,skins),HX_("skins",56,97,1e,7e)},
	{::hx::fsInt,(int)offsetof(CharacterClass_obj,id),HX_("id",db,5b,00,00)},
	{::hx::fsString,(int)offsetof(CharacterClass_obj,name),HX_("name",4b,72,ff,48)},
	{::hx::fsString,(int)offsetof(CharacterClass_obj,description),HX_("description",fc,08,1d,5f)},
	{::hx::fsString,(int)offsetof(CharacterClass_obj,hitSound),HX_("hitSound",7c,e9,2b,c0)},
	{::hx::fsString,(int)offsetof(CharacterClass_obj,deathSound),HX_("deathSound",fb,d0,43,83)},
	{::hx::fsUnknown /* float */ ,(int)offsetof(CharacterClass_obj,bloodProb),HX_("bloodProb",6f,d8,67,14)},
	{::hx::fsObject /* ::Array< int > */ ,(int)offsetof(CharacterClass_obj,slotTypes),HX_("slotTypes",9b,89,e7,fa)},
	{::hx::fsObject /* ::Array< int > */ ,(int)offsetof(CharacterClass_obj,defaultEquipment),HX_("defaultEquipment",4d,9b,7d,fd)},
	{::hx::fsBool,(int)offsetof(CharacterClass_obj,isSelected),HX_("isSelected",65,3c,1c,2c)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *CharacterClass_obj_sStaticStorageInfo = 0;
#endif

static ::String CharacterClass_obj_sMemberFields[] = {
	HX_("skins",56,97,1e,7e),
	HX_("id",db,5b,00,00),
	HX_("name",4b,72,ff,48),
	HX_("description",fc,08,1d,5f),
	HX_("hitSound",7c,e9,2b,c0),
	HX_("deathSound",fb,d0,43,83),
	HX_("bloodProb",6f,d8,67,14),
	HX_("slotTypes",9b,89,e7,fa),
	HX_("defaultEquipment",4d,9b,7d,fd),
	HX_("isSelected",65,3c,1c,2c),
	HX_("setIsSelected",a7,7a,94,cd),
	::String(null()) };

::hx::Class CharacterClass_obj::__mClass;

void CharacterClass_obj::__register()
{
	CharacterClass_obj _hx_dummy;
	CharacterClass_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("classes.model.CharacterClass",dc,69,11,62);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(CharacterClass_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< CharacterClass_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = CharacterClass_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = CharacterClass_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace classes
} // end namespace model
