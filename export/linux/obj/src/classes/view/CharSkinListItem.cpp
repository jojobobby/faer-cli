// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_Global
#include <Global.h>
#endif
#ifndef INCLUDED_account_services_BuySkinTask
#include <account/services/BuySkinTask.h>
#endif
#ifndef INCLUDED_classes_model_CharacterSkin
#include <classes/model/CharacterSkin.h>
#endif
#ifndef INCLUDED_classes_model_CharacterSkinState
#include <classes/model/CharacterSkinState.h>
#endif
#ifndef INCLUDED_classes_view_CharSkinListItem
#include <classes/view/CharSkinListItem.h>
#endif
#ifndef INCLUDED_core_Layers
#include <core/Layers.h>
#endif
#ifndef INCLUDED_core_PlayerModel
#include <core/PlayerModel.h>
#endif
#ifndef INCLUDED_lib_tasks_Task
#include <lib/tasks/Task.h>
#endif
#ifndef INCLUDED_openfl_display_Bitmap
#include <openfl/display/Bitmap.h>
#endif
#ifndef INCLUDED_openfl_display_BitmapData
#include <openfl/display/BitmapData.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_Graphics
#include <openfl/display/Graphics.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Shape
#include <openfl/display/Shape.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_MouseEvent
#include <openfl/events/MouseEvent.h>
#endif
#ifndef INCLUDED_openfl_filters_BitmapFilter
#include <openfl/filters/BitmapFilter.h>
#endif
#ifndef INCLUDED_openfl_filters_ColorMatrixFilter
#include <openfl/filters/ColorMatrixFilter.h>
#endif
#ifndef INCLUDED_openfl_filters_DropShadowFilter
#include <openfl/filters/DropShadowFilter.h>
#endif
#ifndef INCLUDED_openfl_geom_ColorTransform
#include <openfl/geom/ColorTransform.h>
#endif
#ifndef INCLUDED_openfl_geom_Transform
#include <openfl/geom/Transform.h>
#endif
#ifndef INCLUDED_openfl_text_TextField
#include <openfl/text/TextField.h>
#endif
#ifndef INCLUDED_ui_BuyButton
#include <ui/BuyButton.h>
#endif
#ifndef INCLUDED_ui_RadioButton
#include <ui/RadioButton.h>
#endif
#ifndef INCLUDED_ui_SimpleText
#include <ui/SimpleText.h>
#endif
#ifndef INCLUDED_ui_dialogs_Dialog
#include <ui/dialogs/Dialog.h>
#endif
#ifndef INCLUDED_ui_dialogs_DialogsView
#include <ui/dialogs/DialogsView.h>
#endif
#ifndef INCLUDED_ui_view_NotEnoughGoldDialog
#include <ui/view/NotEnoughGoldDialog.h>
#endif
#ifndef INCLUDED_util_ColorUtils
#include <util/ColorUtils.h>
#endif
#ifndef INCLUDED_util_Signal
#include <util/Signal.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_64f0c4ff8a564915_21_new,"classes.view.CharSkinListItem","new",0x38245417,"classes.view.CharSkinListItem.new","classes/view/CharSkinListItem.hx",21,0x87c7dad9)
HX_LOCAL_STACK_FRAME(_hx_pos_64f0c4ff8a564915_97_onAdded,"classes.view.CharSkinListItem","onAdded",0xeea39e58,"classes.view.CharSkinListItem.onAdded","classes/view/CharSkinListItem.hx",97,0x87c7dad9)
HX_LOCAL_STACK_FRAME(_hx_pos_64f0c4ff8a564915_102_onRemoved,"classes.view.CharSkinListItem","onRemoved",0xf4177f38,"classes.view.CharSkinListItem.onRemoved","classes/view/CharSkinListItem.hx",102,0x87c7dad9)
HX_LOCAL_STACK_FRAME(_hx_pos_64f0c4ff8a564915_110_onBuy,"classes.view.CharSkinListItem","onBuy",0x622476de,"classes.view.CharSkinListItem.onBuy","classes/view/CharSkinListItem.hx",110,0x87c7dad9)
HX_LOCAL_STACK_FRAME(_hx_pos_64f0c4ff8a564915_123_onSelected,"classes.view.CharSkinListItem","onSelected",0xa4c96fc3,"classes.view.CharSkinListItem.onSelected","classes/view/CharSkinListItem.hx",123,0x87c7dad9)
HX_LOCAL_STACK_FRAME(_hx_pos_64f0c4ff8a564915_126_setLockIcon,"classes.view.CharSkinListItem","setLockIcon",0x9655dd7d,"classes.view.CharSkinListItem.setLockIcon","classes/view/CharSkinListItem.hx",126,0x87c7dad9)
HX_LOCAL_STACK_FRAME(_hx_pos_64f0c4ff8a564915_131_setBuyButton,"classes.view.CharSkinListItem","setBuyButton",0x9da4df3f,"classes.view.CharSkinListItem.setBuyButton","classes/view/CharSkinListItem.hx",131,0x87c7dad9)
HX_LOCAL_STACK_FRAME(_hx_pos_64f0c4ff8a564915_141_setSkin,"classes.view.CharSkinListItem","setSkin",0x4dfb8276,"classes.view.CharSkinListItem.setSkin","classes/view/CharSkinListItem.hx",141,0x87c7dad9)
HX_LOCAL_STACK_FRAME(_hx_pos_64f0c4ff8a564915_150_getModel,"classes.view.CharSkinListItem","getModel",0xcdf2d81c,"classes.view.CharSkinListItem.getModel","classes/view/CharSkinListItem.hx",150,0x87c7dad9)
HX_LOCAL_STACK_FRAME(_hx_pos_64f0c4ff8a564915_153_setModel,"classes.view.CharSkinListItem","setModel",0x7c503190,"classes.view.CharSkinListItem.setModel","classes/view/CharSkinListItem.hx",153,0x87c7dad9)
HX_LOCAL_STACK_FRAME(_hx_pos_64f0c4ff8a564915_172_setIsSelected,"classes.view.CharSkinListItem","setIsSelected",0xd945691e,"classes.view.CharSkinListItem.setIsSelected","classes/view/CharSkinListItem.hx",172,0x87c7dad9)
HX_LOCAL_STACK_FRAME(_hx_pos_64f0c4ff8a564915_189_removeEventListeners,"classes.view.CharSkinListItem","removeEventListeners",0xb83d27d2,"classes.view.CharSkinListItem.removeEventListeners","classes/view/CharSkinListItem.hx",189,0x87c7dad9)
HX_LOCAL_STACK_FRAME(_hx_pos_64f0c4ff8a564915_192_onModelChanged,"classes.view.CharSkinListItem","onModelChanged",0x49bc85b3,"classes.view.CharSkinListItem.onModelChanged","classes/view/CharSkinListItem.hx",192,0x87c7dad9)
HX_LOCAL_STACK_FRAME(_hx_pos_64f0c4ff8a564915_203_updateName,"classes.view.CharSkinListItem","updateName",0x1759ce1d,"classes.view.CharSkinListItem.updateName","classes/view/CharSkinListItem.hx",203,0x87c7dad9)
HX_LOCAL_STACK_FRAME(_hx_pos_64f0c4ff8a564915_208_updateState,"classes.view.CharSkinListItem","updateState",0x44c171ff,"classes.view.CharSkinListItem.updateState","classes/view/CharSkinListItem.hx",208,0x87c7dad9)
HX_LOCAL_STACK_FRAME(_hx_pos_64f0c4ff8a564915_215_setButtonVisibilities,"classes.view.CharSkinListItem","setButtonVisibilities",0x3247597b,"classes.view.CharSkinListItem.setButtonVisibilities","classes/view/CharSkinListItem.hx",215,0x87c7dad9)
HX_LOCAL_STACK_FRAME(_hx_pos_64f0c4ff8a564915_228_setEventListeners,"classes.view.CharSkinListItem","setEventListeners",0x18a4273e,"classes.view.CharSkinListItem.setEventListeners","classes/view/CharSkinListItem.hx",228,0x87c7dad9)
HX_LOCAL_STACK_FRAME(_hx_pos_64f0c4ff8a564915_234_setCost,"classes.view.CharSkinListItem","setCost",0x436b2a46,"classes.view.CharSkinListItem.setCost","classes/view/CharSkinListItem.hx",234,0x87c7dad9)
HX_LOCAL_STACK_FRAME(_hx_pos_64f0c4ff8a564915_241_addEventListeners,"classes.view.CharSkinListItem","addEventListeners",0xcc953dfd,"classes.view.CharSkinListItem.addEventListeners","classes/view/CharSkinListItem.hx",241,0x87c7dad9)
HX_LOCAL_STACK_FRAME(_hx_pos_64f0c4ff8a564915_244_updateBackground,"classes.view.CharSkinListItem","updateBackground",0x71c99940,"classes.view.CharSkinListItem.updateBackground","classes/view/CharSkinListItem.hx",244,0x87c7dad9)
HX_LOCAL_STACK_FRAME(_hx_pos_64f0c4ff8a564915_250_getColor,"classes.view.CharSkinListItem","getColor",0x0bf725d6,"classes.view.CharSkinListItem.getColor","classes/view/CharSkinListItem.hx",250,0x87c7dad9)
HX_LOCAL_STACK_FRAME(_hx_pos_64f0c4ff8a564915_261_updateGrayFilter,"classes.view.CharSkinListItem","updateGrayFilter",0xa6aef54d,"classes.view.CharSkinListItem.updateGrayFilter","classes/view/CharSkinListItem.hx",261,0x87c7dad9)
HX_LOCAL_STACK_FRAME(_hx_pos_64f0c4ff8a564915_265_onClick,"classes.view.CharSkinListItem","onClick",0x1abe45e0,"classes.view.CharSkinListItem.onClick","classes/view/CharSkinListItem.hx",265,0x87c7dad9)
HX_LOCAL_STACK_FRAME(_hx_pos_64f0c4ff8a564915_268_onOver,"classes.view.CharSkinListItem","onOver",0x865c02bc,"classes.view.CharSkinListItem.onOver","classes/view/CharSkinListItem.hx",268,0x87c7dad9)
HX_LOCAL_STACK_FRAME(_hx_pos_64f0c4ff8a564915_274_onOut,"classes.view.CharSkinListItem","onOut",0x622e5426,"classes.view.CharSkinListItem.onOut","classes/view/CharSkinListItem.hx",274,0x87c7dad9)
HX_LOCAL_STACK_FRAME(_hx_pos_64f0c4ff8a564915_44_drawBackground,"classes.view.CharSkinListItem","drawBackground",0x38472abb,"classes.view.CharSkinListItem.drawBackground","classes/view/CharSkinListItem.hx",44,0x87c7dad9)
namespace classes{
namespace view{

void CharSkinListItem_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_64f0c4ff8a564915_21_new)
HXLINE(  42)		this->isOver = false;
HXLINE(  39)		this->isSelected = false;
HXLINE(  29)		this->grayscaleMatrix =  ::openfl::filters::ColorMatrixFilter_obj::__alloc( HX_CTX ,::util::ColorUtils_obj::greyscaleFilterMatrix);
HXLINE(  52)		super::__construct();
HXLINE(  54)		this->buyButtonContainer =  ::openfl::display::Sprite_obj::__alloc( HX_CTX );
HXLINE(  55)		this->buyButtonContainer->set_x(( (Float)(404) ));
HXLINE(  56)		this->buyButtonContainer->set_y(((Float)30.));
HXLINE(  57)		this->addChild(this->buyButtonContainer);
HXLINE(  58)		this->buyButtonContainer->addEventListener(HX_("click",48,7c,5e,48),this->onBuy_dyn(),null(),null(),null());
HXLINE(  60)		this->lockText =  ::ui::SimpleText_obj::__alloc( HX_CTX ,14,16777215,false,0,0,null());
HXLINE(  61)		this->addChild(this->lockText);
HXLINE(  63)		this->lock =  ::openfl::display::Bitmap_obj::__alloc( HX_CTX ,null(),null(),null());
HXLINE(  64)		this->lock->set_scaleX(( (Float)(2) ));
HXLINE(  65)		this->lock->set_scaleY(( (Float)(2) ));
HXLINE(  66)		this->lock->set_y(((Float)26.));
HXLINE(  67)		this->lock->set_visible(false);
HXLINE(  68)		this->addChild(this->lock);
HXLINE(  70)		this->selectionButton =  ::ui::RadioButton_obj::__alloc( HX_CTX );
HXLINE(  71)		this->selectionButton->setSelected(false);
HXLINE(  72)		 ::ui::RadioButton _hx_tmp = this->selectionButton;
HXDLIN(  72)		_hx_tmp->set_x(((( (Float)(420) ) - this->selectionButton->get_width()) - ( (Float)(15) )));
HXLINE(  73)		 ::ui::RadioButton _hx_tmp1 = this->selectionButton;
HXDLIN(  73)		_hx_tmp1->set_y((((Float)30.) - (this->selectionButton->get_height() / ( (Float)(2) ))));
HXLINE(  74)		this->addChild(this->selectionButton);
HXLINE(  75)		this->selectionButton->changed->on(this->onSelected_dyn());
HXLINE(  77)		this->nameText =  ::ui::SimpleText_obj::__alloc( HX_CTX ,18,16777215,false,0,0,null());
HXLINE(  78)		this->nameText->set_x(( (Float)(75) ));
HXLINE(  79)		this->nameText->set_y(( (Float)(15) ));
HXLINE(  80)		this->nameText->setBold(true);
HXLINE(  81)		 ::ui::SimpleText _hx_tmp2 = this->nameText;
HXDLIN(  81)		_hx_tmp2->set_filters(::Array_obj< ::Dynamic>::__new(1)->init(0, ::openfl::filters::DropShadowFilter_obj::__alloc( HX_CTX ,0,0,0,1,8,8,null(),null(),null(),null(),null())));
HXLINE(  82)		this->addChild(this->nameText);
HXLINE(  84)		this->skinContainer =  ::openfl::display::Sprite_obj::__alloc( HX_CTX );
HXLINE(  85)		this->skinContainer->set_x(( (Float)(8) ));
HXLINE(  86)		this->skinContainer->set_y(( (Float)(4) ));
HXLINE(  87)		this->addChild(this->skinContainer);
HXLINE(  89)		this->background =  ::openfl::display::Shape_obj::__alloc( HX_CTX );
HXLINE(  90)		::classes::view::CharSkinListItem_obj::drawBackground(this->background->get_graphics(),420);
HXLINE(  91)		this->addChild(this->background);
HXLINE(  93)		this->state = ::classes::model::CharacterSkinState_obj::_hx_NULL;
HXLINE(  94)		this->addEventListener(HX_("addedToStage",63,22,55,0c),this->onAdded_dyn(),null(),null(),null());
            	}

Dynamic CharSkinListItem_obj::__CreateEmpty() { return new CharSkinListItem_obj; }

void *CharSkinListItem_obj::_hx_vtable = 0;

Dynamic CharSkinListItem_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< CharSkinListItem_obj > _hx_result = new CharSkinListItem_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool CharSkinListItem_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1f4df417) {
		if (inClassId<=(int)0x0c89e854) {
			if (inClassId<=(int)0x0330636f) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0330636f;
			} else {
				return inClassId==(int)0x0c89e854;
			}
		} else {
			return inClassId==(int)0x1f4df417;
		}
	} else {
		if (inClassId<=(int)0x5f77b74f) {
			return inClassId==(int)0x4af7dd8e || inClassId==(int)0x5f77b74f;
		} else {
			return inClassId==(int)0x6b353933;
		}
	}
}

void CharSkinListItem_obj::onAdded( ::openfl::events::Event _){
            	HX_STACKFRAME(&_hx_pos_64f0c4ff8a564915_97_onAdded)
HXLINE(  98)		this->removeEventListener(HX_("addedToStage",63,22,55,0c),this->onAdded_dyn(),null());
HXLINE(  99)		this->addEventListener(HX_("removedFromStage",34,21,76,ba),this->onRemoved_dyn(),null(),null(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(CharSkinListItem_obj,onAdded,(void))

void CharSkinListItem_obj::onRemoved( ::openfl::events::Event _){
            	HX_STACKFRAME(&_hx_pos_64f0c4ff8a564915_102_onRemoved)
HXLINE( 103)		this->removeEventListener(HX_("removedFromStage",34,21,76,ba),this->onRemoved_dyn(),null());
HXLINE( 105)		this->buyButtonContainer->removeEventListener(HX_("click",48,7c,5e,48),this->onBuy_dyn(),null());
HXLINE( 106)		this->selectionButton->changed->off(this->onSelected_dyn());
HXLINE( 107)		this->setModel(null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(CharSkinListItem_obj,onRemoved,(void))

void CharSkinListItem_obj::onBuy( ::openfl::events::MouseEvent _){
            	HX_GC_STACKFRAME(&_hx_pos_64f0c4ff8a564915_110_onBuy)
HXLINE( 111)		 ::classes::model::CharacterSkin skin = this->getModel();
HXLINE( 112)		 ::classes::model::CharacterSkinState _hx_tmp = skin->getState();
HXDLIN( 112)		if (::hx::IsInstanceNotEq( _hx_tmp,::classes::model::CharacterSkinState_obj::PURCHASABLE )) {
HXLINE( 113)			return;
            		}
HXLINE( 115)		int _hx_tmp1 = ::Global_obj::playerModel->getGems();
HXDLIN( 115)		if ((_hx_tmp1 >= skin->cost)) {
HXLINE( 116)			::account::services::BuySkinTask_obj::skin = skin;
HXLINE( 117)			::Global_obj::buySkinTask->start();
            		}
            		else {
HXLINE( 119)			 ::ui::dialogs::DialogsView _hx_tmp2 = ::Global_obj::layers->dialogs;
HXDLIN( 119)			_hx_tmp2->openDialog( ::ui::view::NotEnoughGoldDialog_obj::__alloc( HX_CTX ,null()));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(CharSkinListItem_obj,onBuy,(void))

void CharSkinListItem_obj::onSelected(bool isSelected){
            	HX_STACKFRAME(&_hx_pos_64f0c4ff8a564915_123_onSelected)
HXDLIN( 123)		this->getModel()->setIsSelected(isSelected);
            	}


HX_DEFINE_DYNAMIC_FUNC1(CharSkinListItem_obj,onSelected,(void))

void CharSkinListItem_obj::setLockIcon( ::openfl::display::BitmapData data){
            	HX_STACKFRAME(&_hx_pos_64f0c4ff8a564915_126_setLockIcon)
HXLINE( 127)		this->lock->set_bitmapData(data);
HXLINE( 128)		 ::openfl::display::Bitmap _hx_tmp = this->lock;
HXDLIN( 128)		Float _hx_tmp1 = this->lockText->get_x();
HXDLIN( 128)		_hx_tmp->set_x(((_hx_tmp1 - this->lock->get_width()) - ( (Float)(5) )));
            	}


HX_DEFINE_DYNAMIC_FUNC1(CharSkinListItem_obj,setLockIcon,(void))

void CharSkinListItem_obj::setBuyButton( ::ui::BuyButton buyButton){
            	HX_STACKFRAME(&_hx_pos_64f0c4ff8a564915_131_setBuyButton)
HXLINE( 132)		this->buyButton = buyButton;
HXLINE( 133)		if (::hx::IsNotNull( this->model )) {
HXLINE( 134)			this->setCost();
            		}
HXLINE( 135)		this->buyButtonContainer->addChild(buyButton);
HXLINE( 136)		buyButton->set_x(-(buyButton->get_width()));
HXLINE( 137)		buyButton->set_y((-(buyButton->get_height()) * ((Float)0.5)));
HXLINE( 138)		this->buyButtonContainer->set_visible(::hx::IsInstanceEq( this->state,::classes::model::CharacterSkinState_obj::PURCHASABLE ));
            	}


HX_DEFINE_DYNAMIC_FUNC1(CharSkinListItem_obj,setBuyButton,(void))

void CharSkinListItem_obj::setSkin( ::openfl::display::Bitmap icon){
            	HX_STACKFRAME(&_hx_pos_64f0c4ff8a564915_141_setSkin)
HXLINE( 142)		if (::hx::IsNotNull( this->skinIcon )) {
HXLINE( 143)			this->skinContainer->removeChild(this->skinIcon);
            		}
HXLINE( 144)		this->skinIcon = icon;
HXLINE( 145)		if (::hx::IsNotNull( this->skinIcon )) {
HXLINE( 146)			this->skinContainer->addChild(this->skinIcon);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(CharSkinListItem_obj,setSkin,(void))

 ::classes::model::CharacterSkin CharSkinListItem_obj::getModel(){
            	HX_STACKFRAME(&_hx_pos_64f0c4ff8a564915_150_getModel)
HXDLIN( 150)		return this->model;
            	}


HX_DEFINE_DYNAMIC_FUNC0(CharSkinListItem_obj,getModel,return )

void CharSkinListItem_obj::setModel( ::classes::model::CharacterSkin value){
            	HX_STACKFRAME(&_hx_pos_64f0c4ff8a564915_153_setModel)
HXLINE( 154)		if (::hx::IsNotNull( this->model )) {
HXLINE( 155)			this->model->changed->off(this->onModelChanged_dyn());
            		}
HXLINE( 156)		this->model = value;
HXLINE( 157)		if (::hx::IsNotNull( this->model )) {
HXLINE( 158)			this->model->changed->on(this->onModelChanged_dyn());
            		}
HXLINE( 159)		this->onModelChanged(this->model);
HXLINE( 160)		this->addEventListener(HX_("mouseOver",19,4a,0d,f6),this->onOver_dyn(),null(),null(),null());
HXLINE( 161)		this->addEventListener(HX_("mouseOut",69,e7,1d,a4),this->onOut_dyn(),null(),null(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(CharSkinListItem_obj,setModel,(void))

void CharSkinListItem_obj::setIsSelected(bool value){
            	HX_STACKFRAME(&_hx_pos_64f0c4ff8a564915_172_setIsSelected)
HXLINE( 173)		this->isSelected = value;
HXLINE( 176)		this->selectionButton->setSelected(value);
HXLINE( 177)		this->updateBackground();
            	}


HX_DEFINE_DYNAMIC_FUNC1(CharSkinListItem_obj,setIsSelected,(void))

void CharSkinListItem_obj::removeEventListeners(){
            	HX_STACKFRAME(&_hx_pos_64f0c4ff8a564915_189_removeEventListeners)
HXDLIN( 189)		this->removeEventListener(HX_("click",48,7c,5e,48),this->onClick_dyn(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC0(CharSkinListItem_obj,removeEventListeners,(void))

void CharSkinListItem_obj::onModelChanged( ::classes::model::CharacterSkin skin){
            	HX_STACKFRAME(&_hx_pos_64f0c4ff8a564915_192_onModelChanged)
HXLINE( 193)		 ::classes::model::CharacterSkin tmp = this->model;
HXDLIN( 193)		 ::classes::model::CharacterSkinState tmp1;
HXDLIN( 193)		if (::hx::IsNotNull( tmp )) {
HXLINE( 193)			tmp1 = tmp->getState();
            		}
            		else {
HXLINE( 193)			tmp1 = null();
            		}
HXDLIN( 193)		 ::classes::model::CharacterSkinState _hx_tmp;
HXDLIN( 193)		if (::hx::IsNotNull( tmp1 )) {
HXLINE( 193)			_hx_tmp = tmp1;
            		}
            		else {
HXLINE( 193)			_hx_tmp = ::classes::model::CharacterSkinState_obj::_hx_NULL;
            		}
HXDLIN( 193)		this->state = _hx_tmp;
HXLINE( 194)		this->updateName();
HXLINE( 195)		this->updateState();
HXLINE( 196)		if (::hx::IsNotNull( this->buyButton )) {
HXLINE( 197)			this->setCost();
            		}
HXLINE( 199)		if (::hx::IsNotNull( this->model )) {
HXLINE( 200)			this->setIsSelected(this->model->getIsSelected());
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(CharSkinListItem_obj,onModelChanged,(void))

void CharSkinListItem_obj::updateName(){
            	HX_STACKFRAME(&_hx_pos_64f0c4ff8a564915_203_updateName)
HXLINE( 204)		::String _hx_tmp;
HXDLIN( 204)		if (::hx::IsNotNull( this->model )) {
HXLINE( 204)			_hx_tmp = this->model->name;
            		}
            		else {
HXLINE( 204)			_hx_tmp = HX_("",00,00,00,00);
            		}
HXDLIN( 204)		this->nameText->set_text(_hx_tmp);
HXLINE( 205)		this->nameText->updateMetrics();
            	}


HX_DEFINE_DYNAMIC_FUNC0(CharSkinListItem_obj,updateName,(void))

void CharSkinListItem_obj::updateState(){
            	HX_STACKFRAME(&_hx_pos_64f0c4ff8a564915_208_updateState)
HXLINE( 209)		this->setButtonVisibilities();
HXLINE( 210)		this->updateBackground();
HXLINE( 211)		this->setEventListeners();
HXLINE( 212)		this->updateGrayFilter();
            	}


HX_DEFINE_DYNAMIC_FUNC0(CharSkinListItem_obj,updateState,(void))

void CharSkinListItem_obj::setButtonVisibilities(){
            	HX_STACKFRAME(&_hx_pos_64f0c4ff8a564915_215_setButtonVisibilities)
HXLINE( 217)		bool isPurchasable = ::hx::IsInstanceEq( this->state,::classes::model::CharacterSkinState_obj::PURCHASABLE );
HXLINE( 218)		bool isPurchasing = ::hx::IsInstanceEq( this->state,::classes::model::CharacterSkinState_obj::PURCHASING );
HXLINE( 219)		bool isLocked = ::hx::IsInstanceEq( this->state,::classes::model::CharacterSkinState_obj::LOCKED );
HXLINE( 220)		this->selectionButton->set_visible(::hx::IsInstanceEq( this->state,::classes::model::CharacterSkinState_obj::OWNED ));
HXLINE( 221)		if (::hx::IsNotNull( this->buyButtonContainer )) {
HXLINE( 222)			this->buyButtonContainer->set_visible(isPurchasable);
            		}
HXLINE( 223)		this->lock->set_visible(isLocked);
HXLINE( 224)		bool _hx_tmp;
HXDLIN( 224)		if (!(isLocked)) {
HXLINE( 224)			_hx_tmp = isPurchasing;
            		}
            		else {
HXLINE( 224)			_hx_tmp = true;
            		}
HXDLIN( 224)		this->lockText->set_visible(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC0(CharSkinListItem_obj,setButtonVisibilities,(void))

void CharSkinListItem_obj::setEventListeners(){
            	HX_STACKFRAME(&_hx_pos_64f0c4ff8a564915_228_setEventListeners)
HXDLIN( 228)		if (::hx::IsInstanceEq( this->state,::classes::model::CharacterSkinState_obj::OWNED )) {
HXLINE( 229)			this->addEventListeners();
            		}
            		else {
HXLINE( 231)			this->removeEventListeners();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(CharSkinListItem_obj,setEventListeners,(void))

void CharSkinListItem_obj::setCost(){
            	HX_STACKFRAME(&_hx_pos_64f0c4ff8a564915_234_setCost)
HXLINE( 235)		int cost;
HXDLIN( 235)		if (::hx::IsNotNull( this->model )) {
HXLINE( 235)			cost = this->model->cost;
            		}
            		else {
HXLINE( 235)			cost = 0;
            		}
HXLINE( 236)		this->buyButton->setPrice(cost,0);
HXLINE( 237)		this->buyButton->setWidth(120);
            	}


HX_DEFINE_DYNAMIC_FUNC0(CharSkinListItem_obj,setCost,(void))

void CharSkinListItem_obj::addEventListeners(){
            	HX_STACKFRAME(&_hx_pos_64f0c4ff8a564915_241_addEventListeners)
HXDLIN( 241)		this->addEventListener(HX_("click",48,7c,5e,48),this->onClick_dyn(),null(),null(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC0(CharSkinListItem_obj,addEventListeners,(void))

void CharSkinListItem_obj::updateBackground(){
            	HX_STACKFRAME(&_hx_pos_64f0c4ff8a564915_244_updateBackground)
HXLINE( 245)		 ::openfl::geom::ColorTransform ct = this->background->get_transform()->get_colorTransform();
HXLINE( 246)		ct->set_color(this->getColor());
HXLINE( 247)		this->background->get_transform()->set_colorTransform(ct);
            	}


HX_DEFINE_DYNAMIC_FUNC0(CharSkinListItem_obj,updateBackground,(void))

int CharSkinListItem_obj::getColor(){
            	HX_STACKFRAME(&_hx_pos_64f0c4ff8a564915_250_getColor)
HXLINE( 251)		if (this->state->isDisabled) {
HXLINE( 252)			return 2631720;
            		}
HXLINE( 254)		bool _hx_tmp;
HXDLIN( 254)		if (!(this->isSelected)) {
HXLINE( 254)			_hx_tmp = this->isOver;
            		}
            		else {
HXLINE( 254)			_hx_tmp = true;
            		}
HXDLIN( 254)		if (_hx_tmp) {
HXLINE( 255)			return 8092539;
            		}
HXLINE( 257)		return 5921370;
            	}


HX_DEFINE_DYNAMIC_FUNC0(CharSkinListItem_obj,getColor,return )

void CharSkinListItem_obj::updateGrayFilter(){
            	HX_STACKFRAME(&_hx_pos_64f0c4ff8a564915_261_updateGrayFilter)
HXDLIN( 261)		::Array< ::Dynamic> _hx_tmp;
HXDLIN( 261)		if (::hx::IsInstanceEq( this->state,::classes::model::CharacterSkinState_obj::PURCHASING )) {
HXDLIN( 261)			_hx_tmp = ::Array_obj< ::Dynamic>::__new(1)->init(0,this->grayscaleMatrix);
            		}
            		else {
HXDLIN( 261)			_hx_tmp = ::Array_obj< ::Dynamic>::__new(0);
            		}
HXDLIN( 261)		this->set_filters(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC0(CharSkinListItem_obj,updateGrayFilter,(void))

void CharSkinListItem_obj::onClick( ::openfl::events::MouseEvent _){
            	HX_STACKFRAME(&_hx_pos_64f0c4ff8a564915_265_onClick)
HXDLIN( 265)		this->setIsSelected(true);
            	}


HX_DEFINE_DYNAMIC_FUNC1(CharSkinListItem_obj,onClick,(void))

void CharSkinListItem_obj::onOver( ::openfl::events::MouseEvent _){
            	HX_STACKFRAME(&_hx_pos_64f0c4ff8a564915_268_onOver)
HXLINE( 269)		this->isOver = true;
HXLINE( 270)		this->updateBackground();
HXLINE( 271)		 ::util::Signal _hx_tmp = ::Global_obj::focusCharSkin;
HXDLIN( 271)		_hx_tmp->emit(this->getModel());
            	}


HX_DEFINE_DYNAMIC_FUNC1(CharSkinListItem_obj,onOver,(void))

void CharSkinListItem_obj::onOut( ::openfl::events::MouseEvent _){
            	HX_STACKFRAME(&_hx_pos_64f0c4ff8a564915_274_onOut)
HXLINE( 275)		this->isOver = false;
HXLINE( 276)		this->updateBackground();
HXLINE( 277)		::Global_obj::focusCharSkin->emit(null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(CharSkinListItem_obj,onOut,(void))

void CharSkinListItem_obj::drawBackground( ::openfl::display::Graphics graphics,int width){
            	HX_STACKFRAME(&_hx_pos_64f0c4ff8a564915_44_drawBackground)
HXLINE(  45)		graphics->clear();
HXLINE(  46)		graphics->beginFill(5921370,null());
HXLINE(  47)		graphics->drawRect(( (Float)(0) ),( (Float)(0) ),( (Float)(width) ),( (Float)(60) ));
HXLINE(  48)		graphics->endFill();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CharSkinListItem_obj,drawBackground,(void))


::hx::ObjectPtr< CharSkinListItem_obj > CharSkinListItem_obj::__new() {
	::hx::ObjectPtr< CharSkinListItem_obj > __this = new CharSkinListItem_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< CharSkinListItem_obj > CharSkinListItem_obj::__alloc(::hx::Ctx *_hx_ctx) {
	CharSkinListItem_obj *__this = (CharSkinListItem_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(CharSkinListItem_obj), true, "classes.view.CharSkinListItem"));
	*(void **)__this = CharSkinListItem_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

CharSkinListItem_obj::CharSkinListItem_obj()
{
}

void CharSkinListItem_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(CharSkinListItem);
	HX_MARK_MEMBER_NAME(grayscaleMatrix,"grayscaleMatrix");
	HX_MARK_MEMBER_NAME(background,"background");
	HX_MARK_MEMBER_NAME(skinContainer,"skinContainer");
	HX_MARK_MEMBER_NAME(nameText,"nameText");
	HX_MARK_MEMBER_NAME(selectionButton,"selectionButton");
	HX_MARK_MEMBER_NAME(lock,"lock");
	HX_MARK_MEMBER_NAME(lockText,"lockText");
	HX_MARK_MEMBER_NAME(buyButtonContainer,"buyButtonContainer");
	HX_MARK_MEMBER_NAME(model,"model");
	HX_MARK_MEMBER_NAME(state,"state");
	HX_MARK_MEMBER_NAME(isSelected,"isSelected");
	HX_MARK_MEMBER_NAME(skinIcon,"skinIcon");
	HX_MARK_MEMBER_NAME(buyButton,"buyButton");
	HX_MARK_MEMBER_NAME(isOver,"isOver");
	 ::openfl::display::Sprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void CharSkinListItem_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(grayscaleMatrix,"grayscaleMatrix");
	HX_VISIT_MEMBER_NAME(background,"background");
	HX_VISIT_MEMBER_NAME(skinContainer,"skinContainer");
	HX_VISIT_MEMBER_NAME(nameText,"nameText");
	HX_VISIT_MEMBER_NAME(selectionButton,"selectionButton");
	HX_VISIT_MEMBER_NAME(lock,"lock");
	HX_VISIT_MEMBER_NAME(lockText,"lockText");
	HX_VISIT_MEMBER_NAME(buyButtonContainer,"buyButtonContainer");
	HX_VISIT_MEMBER_NAME(model,"model");
	HX_VISIT_MEMBER_NAME(state,"state");
	HX_VISIT_MEMBER_NAME(isSelected,"isSelected");
	HX_VISIT_MEMBER_NAME(skinIcon,"skinIcon");
	HX_VISIT_MEMBER_NAME(buyButton,"buyButton");
	HX_VISIT_MEMBER_NAME(isOver,"isOver");
	 ::openfl::display::Sprite_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val CharSkinListItem_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"lock") ) { return ::hx::Val( lock ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"model") ) { return ::hx::Val( model ); }
		if (HX_FIELD_EQ(inName,"state") ) { return ::hx::Val( state ); }
		if (HX_FIELD_EQ(inName,"onBuy") ) { return ::hx::Val( onBuy_dyn() ); }
		if (HX_FIELD_EQ(inName,"onOut") ) { return ::hx::Val( onOut_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"isOver") ) { return ::hx::Val( isOver ); }
		if (HX_FIELD_EQ(inName,"onOver") ) { return ::hx::Val( onOver_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"onAdded") ) { return ::hx::Val( onAdded_dyn() ); }
		if (HX_FIELD_EQ(inName,"setSkin") ) { return ::hx::Val( setSkin_dyn() ); }
		if (HX_FIELD_EQ(inName,"setCost") ) { return ::hx::Val( setCost_dyn() ); }
		if (HX_FIELD_EQ(inName,"onClick") ) { return ::hx::Val( onClick_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"nameText") ) { return ::hx::Val( nameText ); }
		if (HX_FIELD_EQ(inName,"lockText") ) { return ::hx::Val( lockText ); }
		if (HX_FIELD_EQ(inName,"skinIcon") ) { return ::hx::Val( skinIcon ); }
		if (HX_FIELD_EQ(inName,"getModel") ) { return ::hx::Val( getModel_dyn() ); }
		if (HX_FIELD_EQ(inName,"setModel") ) { return ::hx::Val( setModel_dyn() ); }
		if (HX_FIELD_EQ(inName,"getColor") ) { return ::hx::Val( getColor_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"buyButton") ) { return ::hx::Val( buyButton ); }
		if (HX_FIELD_EQ(inName,"onRemoved") ) { return ::hx::Val( onRemoved_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"background") ) { return ::hx::Val( background ); }
		if (HX_FIELD_EQ(inName,"isSelected") ) { return ::hx::Val( isSelected ); }
		if (HX_FIELD_EQ(inName,"onSelected") ) { return ::hx::Val( onSelected_dyn() ); }
		if (HX_FIELD_EQ(inName,"updateName") ) { return ::hx::Val( updateName_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"setLockIcon") ) { return ::hx::Val( setLockIcon_dyn() ); }
		if (HX_FIELD_EQ(inName,"updateState") ) { return ::hx::Val( updateState_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"setBuyButton") ) { return ::hx::Val( setBuyButton_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"skinContainer") ) { return ::hx::Val( skinContainer ); }
		if (HX_FIELD_EQ(inName,"setIsSelected") ) { return ::hx::Val( setIsSelected_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"onModelChanged") ) { return ::hx::Val( onModelChanged_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"grayscaleMatrix") ) { return ::hx::Val( grayscaleMatrix ); }
		if (HX_FIELD_EQ(inName,"selectionButton") ) { return ::hx::Val( selectionButton ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"updateBackground") ) { return ::hx::Val( updateBackground_dyn() ); }
		if (HX_FIELD_EQ(inName,"updateGrayFilter") ) { return ::hx::Val( updateGrayFilter_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"setEventListeners") ) { return ::hx::Val( setEventListeners_dyn() ); }
		if (HX_FIELD_EQ(inName,"addEventListeners") ) { return ::hx::Val( addEventListeners_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"buyButtonContainer") ) { return ::hx::Val( buyButtonContainer ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"removeEventListeners") ) { return ::hx::Val( removeEventListeners_dyn() ); }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"setButtonVisibilities") ) { return ::hx::Val( setButtonVisibilities_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool CharSkinListItem_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 14:
		if (HX_FIELD_EQ(inName,"drawBackground") ) { outValue = drawBackground_dyn(); return true; }
	}
	return false;
}

::hx::Val CharSkinListItem_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"lock") ) { lock=inValue.Cast<  ::openfl::display::Bitmap >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"model") ) { model=inValue.Cast<  ::classes::model::CharacterSkin >(); return inValue; }
		if (HX_FIELD_EQ(inName,"state") ) { state=inValue.Cast<  ::classes::model::CharacterSkinState >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"isOver") ) { isOver=inValue.Cast< bool >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"nameText") ) { nameText=inValue.Cast<  ::ui::SimpleText >(); return inValue; }
		if (HX_FIELD_EQ(inName,"lockText") ) { lockText=inValue.Cast<  ::ui::SimpleText >(); return inValue; }
		if (HX_FIELD_EQ(inName,"skinIcon") ) { skinIcon=inValue.Cast<  ::openfl::display::Bitmap >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"buyButton") ) { buyButton=inValue.Cast<  ::ui::BuyButton >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"background") ) { background=inValue.Cast<  ::openfl::display::Shape >(); return inValue; }
		if (HX_FIELD_EQ(inName,"isSelected") ) { isSelected=inValue.Cast< bool >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"skinContainer") ) { skinContainer=inValue.Cast<  ::openfl::display::Sprite >(); return inValue; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"grayscaleMatrix") ) { grayscaleMatrix=inValue.Cast<  ::openfl::filters::ColorMatrixFilter >(); return inValue; }
		if (HX_FIELD_EQ(inName,"selectionButton") ) { selectionButton=inValue.Cast<  ::ui::RadioButton >(); return inValue; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"buyButtonContainer") ) { buyButtonContainer=inValue.Cast<  ::openfl::display::Sprite >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void CharSkinListItem_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("grayscaleMatrix",68,c1,a2,cb));
	outFields->push(HX_("background",ee,93,1d,26));
	outFields->push(HX_("skinContainer",04,07,fb,ac));
	outFields->push(HX_("nameText",98,ec,80,49));
	outFields->push(HX_("selectionButton",5e,0f,79,4f));
	outFields->push(HX_("lock",eb,9b,b7,47));
	outFields->push(HX_("lockText",38,66,1e,92));
	outFields->push(HX_("buyButtonContainer",49,08,37,b3));
	outFields->push(HX_("model",a9,23,58,0c));
	outFields->push(HX_("state",11,76,0b,84));
	outFields->push(HX_("isSelected",65,3c,1c,2c));
	outFields->push(HX_("skinIcon",96,ac,3a,95));
	outFields->push(HX_("buyButton",d8,51,92,9a));
	outFields->push(HX_("isOver",5e,56,1f,67));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo CharSkinListItem_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::openfl::filters::ColorMatrixFilter */ ,(int)offsetof(CharSkinListItem_obj,grayscaleMatrix),HX_("grayscaleMatrix",68,c1,a2,cb)},
	{::hx::fsObject /*  ::openfl::display::Shape */ ,(int)offsetof(CharSkinListItem_obj,background),HX_("background",ee,93,1d,26)},
	{::hx::fsObject /*  ::openfl::display::Sprite */ ,(int)offsetof(CharSkinListItem_obj,skinContainer),HX_("skinContainer",04,07,fb,ac)},
	{::hx::fsObject /*  ::ui::SimpleText */ ,(int)offsetof(CharSkinListItem_obj,nameText),HX_("nameText",98,ec,80,49)},
	{::hx::fsObject /*  ::ui::RadioButton */ ,(int)offsetof(CharSkinListItem_obj,selectionButton),HX_("selectionButton",5e,0f,79,4f)},
	{::hx::fsObject /*  ::openfl::display::Bitmap */ ,(int)offsetof(CharSkinListItem_obj,lock),HX_("lock",eb,9b,b7,47)},
	{::hx::fsObject /*  ::ui::SimpleText */ ,(int)offsetof(CharSkinListItem_obj,lockText),HX_("lockText",38,66,1e,92)},
	{::hx::fsObject /*  ::openfl::display::Sprite */ ,(int)offsetof(CharSkinListItem_obj,buyButtonContainer),HX_("buyButtonContainer",49,08,37,b3)},
	{::hx::fsObject /*  ::classes::model::CharacterSkin */ ,(int)offsetof(CharSkinListItem_obj,model),HX_("model",a9,23,58,0c)},
	{::hx::fsObject /*  ::classes::model::CharacterSkinState */ ,(int)offsetof(CharSkinListItem_obj,state),HX_("state",11,76,0b,84)},
	{::hx::fsBool,(int)offsetof(CharSkinListItem_obj,isSelected),HX_("isSelected",65,3c,1c,2c)},
	{::hx::fsObject /*  ::openfl::display::Bitmap */ ,(int)offsetof(CharSkinListItem_obj,skinIcon),HX_("skinIcon",96,ac,3a,95)},
	{::hx::fsObject /*  ::ui::BuyButton */ ,(int)offsetof(CharSkinListItem_obj,buyButton),HX_("buyButton",d8,51,92,9a)},
	{::hx::fsBool,(int)offsetof(CharSkinListItem_obj,isOver),HX_("isOver",5e,56,1f,67)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *CharSkinListItem_obj_sStaticStorageInfo = 0;
#endif

static ::String CharSkinListItem_obj_sMemberFields[] = {
	HX_("grayscaleMatrix",68,c1,a2,cb),
	HX_("background",ee,93,1d,26),
	HX_("skinContainer",04,07,fb,ac),
	HX_("nameText",98,ec,80,49),
	HX_("selectionButton",5e,0f,79,4f),
	HX_("lock",eb,9b,b7,47),
	HX_("lockText",38,66,1e,92),
	HX_("buyButtonContainer",49,08,37,b3),
	HX_("model",a9,23,58,0c),
	HX_("state",11,76,0b,84),
	HX_("isSelected",65,3c,1c,2c),
	HX_("skinIcon",96,ac,3a,95),
	HX_("buyButton",d8,51,92,9a),
	HX_("isOver",5e,56,1f,67),
	HX_("onAdded",21,73,81,b2),
	HX_("onRemoved",41,d8,aa,ca),
	HX_("onBuy",67,57,62,32),
	HX_("onSelected",9a,fe,23,8f),
	HX_("setLockIcon",c6,4a,38,bb),
	HX_("setBuyButton",d6,11,e2,be),
	HX_("setSkin",3f,57,d9,11),
	HX_("getModel",33,33,2f,6c),
	HX_("setModel",a7,8c,8c,1a),
	HX_("setIsSelected",a7,7a,94,cd),
	HX_("removeEventListeners",69,49,61,71),
	HX_("onModelChanged",0a,cc,9c,1a),
	HX_("updateName",f4,5c,b4,01),
	HX_("updateState",48,df,a3,69),
	HX_("setButtonVisibilities",04,9c,c0,78),
	HX_("setEventListeners",47,31,35,92),
	HX_("setCost",0f,ff,48,07),
	HX_("addEventListeners",06,48,26,46),
	HX_("updateBackground",57,63,09,70),
	HX_("getColor",ed,80,33,aa),
	HX_("updateGrayFilter",64,bf,ee,a4),
	HX_("onClick",a9,1a,9c,de),
	HX_("onOver",13,9a,42,ec),
	HX_("onOut",af,34,6c,32),
	::String(null()) };

::hx::Class CharSkinListItem_obj::__mClass;

static ::String CharSkinListItem_obj_sStaticFields[] = {
	HX_("drawBackground",12,71,27,09),
	::String(null())
};

void CharSkinListItem_obj::__register()
{
	CharSkinListItem_obj _hx_dummy;
	CharSkinListItem_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("classes.view.CharSkinListItem",a5,fc,1c,e0);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &CharSkinListItem_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(CharSkinListItem_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(CharSkinListItem_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< CharSkinListItem_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = CharSkinListItem_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = CharSkinListItem_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace classes
} // end namespace view
