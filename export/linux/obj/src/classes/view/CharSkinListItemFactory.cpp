// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_assets_CharacterFactory
#include <assets/CharacterFactory.h>
#endif
#ifndef INCLUDED_assets_CharacterTemplate
#include <assets/CharacterTemplate.h>
#endif
#ifndef INCLUDED_classes_model_CharacterSkin
#include <classes/model/CharacterSkin.h>
#endif
#ifndef INCLUDED_classes_model_CharacterSkins
#include <classes/model/CharacterSkins.h>
#endif
#ifndef INCLUDED_classes_view_CharSkinListItem
#include <classes/view/CharSkinListItem.h>
#endif
#ifndef INCLUDED_classes_view_CharSkinListItemFactory
#include <classes/view/CharSkinListItemFactory.h>
#endif
#ifndef INCLUDED_openfl_display_Bitmap
#include <openfl/display/Bitmap.h>
#endif
#ifndef INCLUDED_openfl_display_BitmapData
#include <openfl/display/BitmapData.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_ui_BuyButton
#include <ui/BuyButton.h>
#endif
#ifndef INCLUDED_util_AssetLibrary
#include <util/AssetLibrary.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_14c860021a65b49a_10_make,"classes.view.CharSkinListItemFactory","make",0x42e85c57,"classes.view.CharSkinListItemFactory.make","classes/view/CharSkinListItemFactory.hx",10,0x3e6b3599)
namespace classes{
namespace view{

void CharSkinListItemFactory_obj::__construct() { }

Dynamic CharSkinListItemFactory_obj::__CreateEmpty() { return new CharSkinListItemFactory_obj; }

void *CharSkinListItemFactory_obj::_hx_vtable = 0;

Dynamic CharSkinListItemFactory_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< CharSkinListItemFactory_obj > _hx_result = new CharSkinListItemFactory_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool CharSkinListItemFactory_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1c89ce03;
}

::Array< ::Dynamic> CharSkinListItemFactory_obj::make( ::classes::model::CharacterSkins skins){
            	HX_GC_STACKFRAME(&_hx_pos_14c860021a65b49a_10_make)
HXLINE(  11)		int count = skins->getCount();
HXLINE(  12)		::Array< ::Dynamic> items = ::Array_obj< ::Dynamic>::__new();
HXLINE(  13)		 ::classes::model::CharacterSkin model;
HXLINE(  14)		 ::ui::BuyButton button =  ::ui::BuyButton_obj::__alloc( HX_CTX ,HX_("Buy for ",31,4c,12,d2),16,0,0);
HXLINE(  15)		button->setWidth(120);
HXLINE(  17)		{
HXLINE(  17)			int _g = 0;
HXDLIN(  17)			while((_g < count)){
HXLINE(  17)				_g = (_g + 1);
HXDLIN(  17)				int i = (_g - 1);
HXLINE(  18)				model = skins->getSkinAt(i);
HXLINE(  20)				items[i] =  ::classes::view::CharSkinListItem_obj::__alloc( HX_CTX );
HXLINE(  21)				 ::openfl::display::BitmapData _hx_tmp = ::assets::CharacterFactory_obj::makeIcon(model->_hx_template,null());
HXDLIN(  21)				items->__get(i).StaticCast<  ::classes::view::CharSkinListItem >()->setSkin( ::openfl::display::Bitmap_obj::__alloc( HX_CTX ,_hx_tmp,null(),null()));
HXLINE(  22)				items->__get(i).StaticCast<  ::classes::view::CharSkinListItem >()->setModel(model);
HXLINE(  23)				 ::openfl::display::BitmapData _hx_tmp1 = ::util::AssetLibrary_obj::getImageFromSet(HX_("misc",ec,52,5c,48),11);
HXDLIN(  23)				items->__get(i).StaticCast<  ::classes::view::CharSkinListItem >()->setLockIcon(_hx_tmp1);
HXLINE(  24)				items->__get(i).StaticCast<  ::classes::view::CharSkinListItem >()->setBuyButton(button);
            			}
            		}
HXLINE(  27)		return items;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CharSkinListItemFactory_obj,make,return )


CharSkinListItemFactory_obj::CharSkinListItemFactory_obj()
{
}

bool CharSkinListItemFactory_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"make") ) { outValue = make_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *CharSkinListItemFactory_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *CharSkinListItemFactory_obj_sStaticStorageInfo = 0;
#endif

::hx::Class CharSkinListItemFactory_obj::__mClass;

static ::String CharSkinListItemFactory_obj_sStaticFields[] = {
	HX_("make",ee,39,56,48),
	::String(null())
};

void CharSkinListItemFactory_obj::__register()
{
	CharSkinListItemFactory_obj _hx_dummy;
	CharSkinListItemFactory_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("classes.view.CharSkinListItemFactory",a5,56,67,96);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &CharSkinListItemFactory_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(CharSkinListItemFactory_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< CharSkinListItemFactory_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = CharSkinListItemFactory_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = CharSkinListItemFactory_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace classes
} // end namespace view
