// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_Global
#include <Global.h>
#endif
#ifndef INCLUDED_assets_Animation
#include <assets/Animation.h>
#endif
#ifndef INCLUDED_assets_CharacterFactory
#include <assets/CharacterFactory.h>
#endif
#ifndef INCLUDED_assets_CharacterTemplate
#include <assets/CharacterTemplate.h>
#endif
#ifndef INCLUDED_classes_model_CharacterClass
#include <classes/model/CharacterClass.h>
#endif
#ifndef INCLUDED_classes_model_CharacterSkin
#include <classes/model/CharacterSkin.h>
#endif
#ifndef INCLUDED_classes_model_CharacterSkins
#include <classes/model/CharacterSkins.h>
#endif
#ifndef INCLUDED_classes_model_ClassModel
#include <classes/model/ClassModel.h>
#endif
#ifndef INCLUDED_classes_view_ClassDetailView
#include <classes/view/ClassDetailView.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_IntMap
#include <haxe/ds/IntMap.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_TimerEvent
#include <openfl/events/TimerEvent.h>
#endif
#ifndef INCLUDED_openfl_filters_BitmapFilter
#include <openfl/filters/BitmapFilter.h>
#endif
#ifndef INCLUDED_openfl_filters_DropShadowFilter
#include <openfl/filters/DropShadowFilter.h>
#endif
#ifndef INCLUDED_openfl_text_TextField
#include <openfl/text/TextField.h>
#endif
#ifndef INCLUDED_openfl_text_TextFormat
#include <openfl/text/TextFormat.h>
#endif
#ifndef INCLUDED_openfl_utils_Timer
#include <openfl/utils/Timer.h>
#endif
#ifndef INCLUDED_ui_SimpleText
#include <ui/SimpleText.h>
#endif
#ifndef INCLUDED_util_Signal
#include <util/Signal.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_31abc74eb6a24d8d_17_new,"classes.view.ClassDetailView","new",0x147549ff,"classes.view.ClassDetailView.new","classes/view/ClassDetailView.hx",17,0x6ecc2eb1)
HX_LOCAL_STACK_FRAME(_hx_pos_31abc74eb6a24d8d_56_onAdded,"classes.view.ClassDetailView","onAdded",0xf409a840,"classes.view.ClassDetailView.onAdded","classes/view/ClassDetailView.hx",56,0x6ecc2eb1)
HX_LOCAL_STACK_FRAME(_hx_pos_31abc74eb6a24d8d_66_onRemoved,"classes.view.ClassDetailView","onRemoved",0xa681d320,"classes.view.ClassDetailView.onRemoved","classes/view/ClassDetailView.hx",66,0x6ecc2eb1)
HX_LOCAL_STACK_FRAME(_hx_pos_31abc74eb6a24d8d_76_onFocusSet,"classes.view.ClassDetailView","onFocusSet",0x6f5cc72a,"classes.view.ClassDetailView.onFocusSet","classes/view/ClassDetailView.hx",76,0x6ecc2eb1)
HX_LOCAL_STACK_FRAME(_hx_pos_31abc74eb6a24d8d_81_delayedFocusSet,"classes.view.ClassDetailView","delayedFocusSet",0xfeccdb8b,"classes.view.ClassDetailView.delayedFocusSet","classes/view/ClassDetailView.hx",81,0x6ecc2eb1)
HX_LOCAL_STACK_FRAME(_hx_pos_31abc74eb6a24d8d_88_setData,"classes.view.ClassDetailView","setData",0x496fcc0b,"classes.view.ClassDetailView.setData","classes/view/ClassDetailView.hx",88,0x6ecc2eb1)
HX_LOCAL_STACK_FRAME(_hx_pos_31abc74eb6a24d8d_94_setWalkingAnimation,"classes.view.ClassDetailView","setWalkingAnimation",0xa5f89fac,"classes.view.ClassDetailView.setWalkingAnimation","classes/view/ClassDetailView.hx",94,0x6ecc2eb1)
HX_LOCAL_STACK_FRAME(_hx_pos_31abc74eb6a24d8d_103_removeAnimation,"classes.view.ClassDetailView","removeAnimation",0x1bd4763f,"classes.view.ClassDetailView.removeAnimation","classes/view/ClassDetailView.hx",103,0x6ecc2eb1)
HX_LOCAL_STACK_FRAME(_hx_pos_31abc74eb6a24d8d_108_addAnimation,"classes.view.ClassDetailView","addAnimation",0xcb30eb24,"classes.view.ClassDetailView.addAnimation","classes/view/ClassDetailView.hx",108,0x6ecc2eb1)
HX_LOCAL_STACK_FRAME(_hx_pos_31abc74eb6a24d8d_113_layout,"classes.view.ClassDetailView","layout",0x3321c26b,"classes.view.ClassDetailView.layout","classes/view/ClassDetailView.hx",113,0x6ecc2eb1)
namespace classes{
namespace view{

void ClassDetailView_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_31abc74eb6a24d8d_17_new)
HXLINE(  22)		this->nextSkinTimer =  ::openfl::utils::Timer_obj::__alloc( HX_CTX ,( (Float)(250) ),1);
HXLINE(  21)		this->skins =  ::haxe::ds::IntMap_obj::__alloc( HX_CTX );
HXLINE(  31)		super::__construct();
HXLINE(  33)		 ::openfl::filters::DropShadowFilter dropShadowFilter =  ::openfl::filters::DropShadowFilter_obj::__alloc( HX_CTX ,0,0,0,1,8,8,null(),null(),null(),null(),null());
HXLINE(  35)		this->animContainer =  ::openfl::display::Sprite_obj::__alloc( HX_CTX );
HXLINE(  36)		this->animContainer->set_x(((Float)120.));
HXLINE(  37)		this->addChild(this->animContainer);
HXLINE(  38)		this->classNameText =  ::ui::SimpleText_obj::__alloc( HX_CTX ,20,16777215,false,0,0,null());
HXLINE(  39)		this->classNameText->setBold(true);
HXLINE(  40)		this->classNameText->set_filters(::Array_obj< ::Dynamic>::__new(1)->init(0,dropShadowFilter));
HXLINE(  41)		this->classNameText->set_width(( (Float)(188) ));
HXLINE(  42)		this->classNameText->set_autoSize(0);
HXLINE(  43)		this->addChild(this->classNameText);
HXLINE(  44)		this->classDescriptionText =  ::ui::SimpleText_obj::__alloc( HX_CTX ,14,16777215,false,0,0,null());
HXLINE(  45)		this->classDescriptionText->set_filters(::Array_obj< ::Dynamic>::__new(1)->init(0,dropShadowFilter));
HXLINE(  46)		this->classDescriptionText->set_width(( (Float)(188) ));
HXLINE(  47)		this->classDescriptionText->set_wordWrap(true);
HXLINE(  48)		 ::openfl::text::TextFormat tf = this->classDescriptionText->getTextFormat(null(),null());
HXLINE(  49)		tf->align = 0;
HXLINE(  50)		this->classDescriptionText->set_defaultTextFormat(tf);
HXLINE(  51)		this->classDescriptionText->setTextFormat(tf,null(),null());
HXLINE(  52)		this->addChild(this->classDescriptionText);
HXLINE(  53)		this->addEventListener(HX_("addedToStage",63,22,55,0c),this->onAdded_dyn(),null(),null(),null());
            	}

Dynamic ClassDetailView_obj::__CreateEmpty() { return new ClassDetailView_obj; }

void *ClassDetailView_obj::_hx_vtable = 0;

Dynamic ClassDetailView_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ClassDetailView_obj > _hx_result = new ClassDetailView_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ClassDetailView_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1f4df417) {
		if (inClassId<=(int)0x0c89e854) {
			if (inClassId<=(int)0x0330636f) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0330636f;
			} else {
				return inClassId==(int)0x0c89e854;
			}
		} else {
			return inClassId==(int)0x1f4df417;
		}
	} else {
		if (inClassId<=(int)0x6b353933) {
			return inClassId==(int)0x4af7dd8e || inClassId==(int)0x6b353933;
		} else {
			return inClassId==(int)0x7453b787;
		}
	}
}

void ClassDetailView_obj::onAdded( ::openfl::events::Event _){
            	HX_STACKFRAME(&_hx_pos_31abc74eb6a24d8d_56_onAdded)
HXLINE(  57)		this->removeEventListener(HX_("addedToStage",63,22,55,0c),this->onAdded_dyn(),null());
HXLINE(  58)		this->addEventListener(HX_("removedFromStage",34,21,76,ba),this->onRemoved_dyn(),null(),null(),null());
HXLINE(  60)		this->nextSkinTimer->addEventListener(HX_("timer",c5,bf,35,10),this->delayedFocusSet_dyn(),null(),null(),null());
HXLINE(  61)		::Global_obj::focusCharSkin->once(this->onFocusSet_dyn());
HXLINE(  62)		::String _hx_tmp = ::Global_obj::classModel->getSelected()->name;
HXDLIN(  62)		this->setData(_hx_tmp,::Global_obj::classModel->getSelected()->description);
HXLINE(  63)		this->onFocusSet(null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(ClassDetailView_obj,onAdded,(void))

void ClassDetailView_obj::onRemoved( ::openfl::events::Event _){
            	HX_STACKFRAME(&_hx_pos_31abc74eb6a24d8d_66_onRemoved)
HXLINE(  67)		this->removeEventListener(HX_("removedFromStage",34,21,76,ba),this->onRemoved_dyn(),null());
HXLINE(  69)		this->nextSkinTimer->removeEventListener(HX_("timer",c5,bf,35,10),this->delayedFocusSet_dyn(),null());
HXLINE(  70)		this->setWalkingAnimation(null());
HXLINE(  72)		{
HXLINE(  72)			 ::Dynamic skin = this->skins->iterator();
HXDLIN(  72)			while(( (bool)(skin->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic)()) )){
HXLINE(  73)				( ( ::assets::Animation)(skin->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic)()) )->dispose();
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ClassDetailView_obj,onRemoved,(void))

void ClassDetailView_obj::onFocusSet( ::classes::model::CharacterSkin skin){
            	HX_STACKFRAME(&_hx_pos_31abc74eb6a24d8d_76_onFocusSet)
HXLINE(  77)		 ::classes::model::CharacterSkin _hx_tmp;
HXDLIN(  77)		if (::hx::IsNotNull( skin )) {
HXLINE(  77)			_hx_tmp = skin;
            		}
            		else {
HXLINE(  77)			_hx_tmp = ::Global_obj::classModel->getSelected()->skins->getSelectedSkin();
            		}
HXDLIN(  77)		this->nextSkin = _hx_tmp;
HXLINE(  78)		this->nextSkinTimer->start();
            	}


HX_DEFINE_DYNAMIC_FUNC1(ClassDetailView_obj,onFocusSet,(void))

void ClassDetailView_obj::delayedFocusSet( ::openfl::events::TimerEvent e){
            	HX_STACKFRAME(&_hx_pos_31abc74eb6a24d8d_81_delayedFocusSet)
HXLINE(  82)		if (!(this->skins->exists(this->nextSkin->id))) {
HXLINE(  83)			 ::haxe::ds::IntMap _hx_tmp = this->skins;
HXDLIN(  83)			int _hx_tmp1 = this->nextSkin->id;
HXDLIN(  83)			_hx_tmp->set(_hx_tmp1,::assets::CharacterFactory_obj::makeWalkingIcon(this->nextSkin->_hx_template,200));
            		}
HXLINE(  85)		this->setWalkingAnimation(( ( ::assets::Animation)(this->skins->get(this->nextSkin->id)) ));
            	}


HX_DEFINE_DYNAMIC_FUNC1(ClassDetailView_obj,delayedFocusSet,(void))

void ClassDetailView_obj::setData(::String name,::String description){
            	HX_STACKFRAME(&_hx_pos_31abc74eb6a24d8d_88_setData)
HXLINE(  89)		this->classNameText->set_text(name);
HXLINE(  90)		this->classDescriptionText->set_text(description);
HXLINE(  91)		this->layout();
            	}


HX_DEFINE_DYNAMIC_FUNC2(ClassDetailView_obj,setData,(void))

void ClassDetailView_obj::setWalkingAnimation( ::assets::Animation value){
            	HX_STACKFRAME(&_hx_pos_31abc74eb6a24d8d_94_setWalkingAnimation)
HXLINE(  95)		if (::hx::IsNotNull( this->animation )) {
HXLINE(  96)			this->removeAnimation(this->animation);
            		}
HXLINE(  97)		this->animation = value;
HXLINE(  98)		if (::hx::IsNotNull( this->animation )) {
HXLINE(  99)			this->addAnimation(this->animation);
            		}
HXLINE( 100)		this->layout();
            	}


HX_DEFINE_DYNAMIC_FUNC1(ClassDetailView_obj,setWalkingAnimation,(void))

void ClassDetailView_obj::removeAnimation( ::assets::Animation animation){
            	HX_STACKFRAME(&_hx_pos_31abc74eb6a24d8d_103_removeAnimation)
HXLINE( 104)		animation->stop();
HXLINE( 105)		this->animContainer->removeChild(animation);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ClassDetailView_obj,removeAnimation,(void))

void ClassDetailView_obj::addAnimation( ::assets::Animation animation){
            	HX_STACKFRAME(&_hx_pos_31abc74eb6a24d8d_108_addAnimation)
HXLINE( 109)		this->animContainer->addChild(animation);
HXLINE( 110)		animation->start();
            	}


HX_DEFINE_DYNAMIC_FUNC1(ClassDetailView_obj,addAnimation,(void))

void ClassDetailView_obj::layout(){
            	HX_STACKFRAME(&_hx_pos_31abc74eb6a24d8d_113_layout)
HXLINE( 114)		 ::ui::SimpleText _hx_tmp = this->classNameText;
HXDLIN( 114)		_hx_tmp->set_x((((Float)172.) - (this->classNameText->get_width() / ( (Float)(2) ))));
HXLINE( 115)		this->classNameText->set_y(( (Float)(110) ));
HXLINE( 116)		 ::ui::SimpleText _hx_tmp1 = this->classDescriptionText;
HXDLIN( 116)		Float _hx_tmp2 = this->classNameText->get_y();
HXDLIN( 116)		_hx_tmp1->set_y(((_hx_tmp2 + this->classNameText->get_textHeight()) + 5));
HXLINE( 117)		 ::ui::SimpleText _hx_tmp3 = this->classDescriptionText;
HXDLIN( 117)		_hx_tmp3->set_x((((Float)172.) - (this->classDescriptionText->get_width() / ( (Float)(2) ))));
            	}


HX_DEFINE_DYNAMIC_FUNC0(ClassDetailView_obj,layout,(void))


::hx::ObjectPtr< ClassDetailView_obj > ClassDetailView_obj::__new() {
	::hx::ObjectPtr< ClassDetailView_obj > __this = new ClassDetailView_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< ClassDetailView_obj > ClassDetailView_obj::__alloc(::hx::Ctx *_hx_ctx) {
	ClassDetailView_obj *__this = (ClassDetailView_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ClassDetailView_obj), true, "classes.view.ClassDetailView"));
	*(void **)__this = ClassDetailView_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

ClassDetailView_obj::ClassDetailView_obj()
{
}

void ClassDetailView_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ClassDetailView);
	HX_MARK_MEMBER_NAME(skins,"skins");
	HX_MARK_MEMBER_NAME(nextSkinTimer,"nextSkinTimer");
	HX_MARK_MEMBER_NAME(nextSkin,"nextSkin");
	HX_MARK_MEMBER_NAME(classNameText,"classNameText");
	HX_MARK_MEMBER_NAME(classDescriptionText,"classDescriptionText");
	HX_MARK_MEMBER_NAME(animContainer,"animContainer");
	HX_MARK_MEMBER_NAME(animation,"animation");
	 ::openfl::display::Sprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void ClassDetailView_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(skins,"skins");
	HX_VISIT_MEMBER_NAME(nextSkinTimer,"nextSkinTimer");
	HX_VISIT_MEMBER_NAME(nextSkin,"nextSkin");
	HX_VISIT_MEMBER_NAME(classNameText,"classNameText");
	HX_VISIT_MEMBER_NAME(classDescriptionText,"classDescriptionText");
	HX_VISIT_MEMBER_NAME(animContainer,"animContainer");
	HX_VISIT_MEMBER_NAME(animation,"animation");
	 ::openfl::display::Sprite_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val ClassDetailView_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"skins") ) { return ::hx::Val( skins ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"layout") ) { return ::hx::Val( layout_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"onAdded") ) { return ::hx::Val( onAdded_dyn() ); }
		if (HX_FIELD_EQ(inName,"setData") ) { return ::hx::Val( setData_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"nextSkin") ) { return ::hx::Val( nextSkin ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"animation") ) { return ::hx::Val( animation ); }
		if (HX_FIELD_EQ(inName,"onRemoved") ) { return ::hx::Val( onRemoved_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"onFocusSet") ) { return ::hx::Val( onFocusSet_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"addAnimation") ) { return ::hx::Val( addAnimation_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"nextSkinTimer") ) { return ::hx::Val( nextSkinTimer ); }
		if (HX_FIELD_EQ(inName,"classNameText") ) { return ::hx::Val( classNameText ); }
		if (HX_FIELD_EQ(inName,"animContainer") ) { return ::hx::Val( animContainer ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"delayedFocusSet") ) { return ::hx::Val( delayedFocusSet_dyn() ); }
		if (HX_FIELD_EQ(inName,"removeAnimation") ) { return ::hx::Val( removeAnimation_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"setWalkingAnimation") ) { return ::hx::Val( setWalkingAnimation_dyn() ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"classDescriptionText") ) { return ::hx::Val( classDescriptionText ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val ClassDetailView_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"skins") ) { skins=inValue.Cast<  ::haxe::ds::IntMap >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"nextSkin") ) { nextSkin=inValue.Cast<  ::classes::model::CharacterSkin >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"animation") ) { animation=inValue.Cast<  ::assets::Animation >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"nextSkinTimer") ) { nextSkinTimer=inValue.Cast<  ::openfl::utils::Timer >(); return inValue; }
		if (HX_FIELD_EQ(inName,"classNameText") ) { classNameText=inValue.Cast<  ::ui::SimpleText >(); return inValue; }
		if (HX_FIELD_EQ(inName,"animContainer") ) { animContainer=inValue.Cast<  ::openfl::display::Sprite >(); return inValue; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"classDescriptionText") ) { classDescriptionText=inValue.Cast<  ::ui::SimpleText >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ClassDetailView_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("skins",56,97,1e,7e));
	outFields->push(HX_("nextSkinTimer",95,18,8a,6c));
	outFields->push(HX_("nextSkin",10,bd,21,f8));
	outFields->push(HX_("classNameText",f0,18,92,d1));
	outFields->push(HX_("classDescriptionText",71,be,11,98));
	outFields->push(HX_("animContainer",f0,04,66,ca));
	outFields->push(HX_("animation",04,ef,34,4b));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo ClassDetailView_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::haxe::ds::IntMap */ ,(int)offsetof(ClassDetailView_obj,skins),HX_("skins",56,97,1e,7e)},
	{::hx::fsObject /*  ::openfl::utils::Timer */ ,(int)offsetof(ClassDetailView_obj,nextSkinTimer),HX_("nextSkinTimer",95,18,8a,6c)},
	{::hx::fsObject /*  ::classes::model::CharacterSkin */ ,(int)offsetof(ClassDetailView_obj,nextSkin),HX_("nextSkin",10,bd,21,f8)},
	{::hx::fsObject /*  ::ui::SimpleText */ ,(int)offsetof(ClassDetailView_obj,classNameText),HX_("classNameText",f0,18,92,d1)},
	{::hx::fsObject /*  ::ui::SimpleText */ ,(int)offsetof(ClassDetailView_obj,classDescriptionText),HX_("classDescriptionText",71,be,11,98)},
	{::hx::fsObject /*  ::openfl::display::Sprite */ ,(int)offsetof(ClassDetailView_obj,animContainer),HX_("animContainer",f0,04,66,ca)},
	{::hx::fsObject /*  ::assets::Animation */ ,(int)offsetof(ClassDetailView_obj,animation),HX_("animation",04,ef,34,4b)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *ClassDetailView_obj_sStaticStorageInfo = 0;
#endif

static ::String ClassDetailView_obj_sMemberFields[] = {
	HX_("skins",56,97,1e,7e),
	HX_("nextSkinTimer",95,18,8a,6c),
	HX_("nextSkin",10,bd,21,f8),
	HX_("classNameText",f0,18,92,d1),
	HX_("classDescriptionText",71,be,11,98),
	HX_("animContainer",f0,04,66,ca),
	HX_("animation",04,ef,34,4b),
	HX_("onAdded",21,73,81,b2),
	HX_("onRemoved",41,d8,aa,ca),
	HX_("onFocusSet",e9,3e,18,ef),
	HX_("delayedFocusSet",6c,ef,4b,6f),
	HX_("setData",ec,96,e7,07),
	HX_("setWalkingAnimation",0d,b8,25,ec),
	HX_("removeAnimation",20,8a,53,8c),
	HX_("addAnimation",a3,10,89,4a),
	HX_("layout",aa,ae,b8,58),
	::String(null()) };

::hx::Class ClassDetailView_obj::__mClass;

void ClassDetailView_obj::__register()
{
	ClassDetailView_obj _hx_dummy;
	ClassDetailView_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("classes.view.ClassDetailView",8d,de,72,b0);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ClassDetailView_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ClassDetailView_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ClassDetailView_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ClassDetailView_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace classes
} // end namespace view
