// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_openfl_display_BitmapData
#include <openfl/display/BitmapData.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_util_AssetLibrary
#include <util/AssetLibrary.h>
#endif
#ifndef INCLUDED_util_GuildUtil
#include <util/GuildUtil.h>
#endif
#ifndef INCLUDED_util_TextureRedrawer
#include <util/TextureRedrawer.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_c851c7a6030adc2e_30_rankToIcon,"util.GuildUtil","rankToIcon",0x2ea4a1e5,"util.GuildUtil.rankToIcon","util/GuildUtil.hx",30,0x68625016)
namespace util{

void GuildUtil_obj::__construct() { }

Dynamic GuildUtil_obj::__CreateEmpty() { return new GuildUtil_obj; }

void *GuildUtil_obj::_hx_vtable = 0;

Dynamic GuildUtil_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< GuildUtil_obj > _hx_result = new GuildUtil_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool GuildUtil_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1327a80f;
}

 ::openfl::display::BitmapData GuildUtil_obj::rankToIcon(int rank,int size){
            	HX_STACKFRAME(&_hx_pos_c851c7a6030adc2e_30_rankToIcon)
HXLINE(  31)		 ::openfl::display::BitmapData icon = null();
HXLINE(  32)		switch((int)(rank)){
            			case (int)0: {
HXLINE(  34)				icon = ::util::AssetLibrary_obj::getImageFromSet(HX_("misc16",d1,10,48,56),26);
            			}
            			break;
            			case (int)10: {
HXLINE(  36)				icon = ::util::AssetLibrary_obj::getImageFromSet(HX_("misc16",d1,10,48,56),25);
            			}
            			break;
            			case (int)20: {
HXLINE(  38)				icon = ::util::AssetLibrary_obj::getImageFromSet(HX_("misc16",d1,10,48,56),24);
            			}
            			break;
            			case (int)30: {
HXLINE(  40)				icon = ::util::AssetLibrary_obj::getImageFromSet(HX_("misc16",d1,10,48,56),23);
            			}
            			break;
            			case (int)40: {
HXLINE(  42)				icon = ::util::AssetLibrary_obj::getImageFromSet(HX_("misc16",d1,10,48,56),22);
            			}
            			break;
            		}
HXLINE(  45)		return ::util::TextureRedrawer_obj::redraw(icon,size,true,0,true,null(),null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GuildUtil_obj,rankToIcon,return )


GuildUtil_obj::GuildUtil_obj()
{
}

bool GuildUtil_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"rankToIcon") ) { outValue = rankToIcon_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *GuildUtil_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *GuildUtil_obj_sStaticStorageInfo = 0;
#endif

::hx::Class GuildUtil_obj::__mClass;

static ::String GuildUtil_obj_sStaticFields[] = {
	HX_("rankToIcon",60,9d,c8,33),
	::String(null())
};

void GuildUtil_obj::__register()
{
	GuildUtil_obj _hx_dummy;
	GuildUtil_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("util.GuildUtil",c9,33,9f,25);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &GuildUtil_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(GuildUtil_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< GuildUtil_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = GuildUtil_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = GuildUtil_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace util
