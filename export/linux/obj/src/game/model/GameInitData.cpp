// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_game_model_GameInitData
#include <game/model/GameInitData.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_openfl_utils_ByteArrayData
#include <openfl/utils/ByteArrayData.h>
#endif
#ifndef INCLUDED_openfl_utils_IDataInput
#include <openfl/utils/IDataInput.h>
#endif
#ifndef INCLUDED_openfl_utils_IDataOutput
#include <openfl/utils/IDataOutput.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_0a6466ac5cd36cc4_5_new,"game.model.GameInitData","new",0x0b7461df,"game.model.GameInitData.new","game/model/GameInitData.hx",5,0xe7f531ef)
namespace game{
namespace model{

void GameInitData_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_0a6466ac5cd36cc4_5_new)
HXLINE(   9)		this->fmMap = null();
HXLINE(   8)		this->charId = 0;
HXLINE(   7)		this->createCharacter = false;
HXLINE(   6)		this->gameId = 0;
            	}

Dynamic GameInitData_obj::__CreateEmpty() { return new GameInitData_obj; }

void *GameInitData_obj::_hx_vtable = 0;

Dynamic GameInitData_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< GameInitData_obj > _hx_result = new GameInitData_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool GameInitData_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x2051af1f;
}


::hx::ObjectPtr< GameInitData_obj > GameInitData_obj::__new() {
	::hx::ObjectPtr< GameInitData_obj > __this = new GameInitData_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< GameInitData_obj > GameInitData_obj::__alloc(::hx::Ctx *_hx_ctx) {
	GameInitData_obj *__this = (GameInitData_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(GameInitData_obj), true, "game.model.GameInitData"));
	*(void **)__this = GameInitData_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

GameInitData_obj::GameInitData_obj()
{
}

void GameInitData_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(GameInitData);
	HX_MARK_MEMBER_NAME(gameId,"gameId");
	HX_MARK_MEMBER_NAME(createCharacter,"createCharacter");
	HX_MARK_MEMBER_NAME(charId,"charId");
	HX_MARK_MEMBER_NAME(fmMap,"fmMap");
	HX_MARK_END_CLASS();
}

void GameInitData_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(gameId,"gameId");
	HX_VISIT_MEMBER_NAME(createCharacter,"createCharacter");
	HX_VISIT_MEMBER_NAME(charId,"charId");
	HX_VISIT_MEMBER_NAME(fmMap,"fmMap");
}

::hx::Val GameInitData_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"fmMap") ) { return ::hx::Val( fmMap ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"gameId") ) { return ::hx::Val( gameId ); }
		if (HX_FIELD_EQ(inName,"charId") ) { return ::hx::Val( charId ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"createCharacter") ) { return ::hx::Val( createCharacter ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val GameInitData_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"fmMap") ) { fmMap=inValue.Cast<  ::openfl::utils::ByteArrayData >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"gameId") ) { gameId=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"charId") ) { charId=inValue.Cast< int >(); return inValue; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"createCharacter") ) { createCharacter=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void GameInitData_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("gameId",6d,94,f9,50));
	outFields->push(HX_("createCharacter",0d,95,c6,e2));
	outFields->push(HX_("charId",51,80,75,b7));
	outFields->push(HX_("fmMap",95,2f,26,03));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo GameInitData_obj_sMemberStorageInfo[] = {
	{::hx::fsInt,(int)offsetof(GameInitData_obj,gameId),HX_("gameId",6d,94,f9,50)},
	{::hx::fsBool,(int)offsetof(GameInitData_obj,createCharacter),HX_("createCharacter",0d,95,c6,e2)},
	{::hx::fsInt,(int)offsetof(GameInitData_obj,charId),HX_("charId",51,80,75,b7)},
	{::hx::fsObject /*  ::openfl::utils::ByteArrayData */ ,(int)offsetof(GameInitData_obj,fmMap),HX_("fmMap",95,2f,26,03)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *GameInitData_obj_sStaticStorageInfo = 0;
#endif

static ::String GameInitData_obj_sMemberFields[] = {
	HX_("gameId",6d,94,f9,50),
	HX_("createCharacter",0d,95,c6,e2),
	HX_("charId",51,80,75,b7),
	HX_("fmMap",95,2f,26,03),
	::String(null()) };

::hx::Class GameInitData_obj::__mClass;

void GameInitData_obj::__register()
{
	GameInitData_obj _hx_dummy;
	GameInitData_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("game.model.GameInitData",6d,86,50,10);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(GameInitData_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< GameInitData_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = GameInitData_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = GameInitData_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace game
} // end namespace model
