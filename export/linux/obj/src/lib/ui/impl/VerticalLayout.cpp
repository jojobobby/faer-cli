// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_lib_ui_api_Layout
#include <lib/ui/api/Layout.h>
#endif
#ifndef INCLUDED_lib_ui_impl_VerticalLayout
#include <lib/ui/impl/VerticalLayout.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_04b53db980ca35ac_7_new,"lib.ui.impl.VerticalLayout","new",0x0d4c7e0f,"lib.ui.impl.VerticalLayout.new","lib/ui/impl/VerticalLayout.hx",7,0xd2ac55c0)
HX_LOCAL_STACK_FRAME(_hx_pos_04b53db980ca35ac_16_setPadding,"lib.ui.impl.VerticalLayout","setPadding",0x55ff7480,"lib.ui.impl.VerticalLayout.setPadding","lib/ui/impl/VerticalLayout.hx",16,0xd2ac55c0)
HX_LOCAL_STACK_FRAME(_hx_pos_04b53db980ca35ac_19_layout,"lib.ui.impl.VerticalLayout","layout",0x8456785b,"lib.ui.impl.VerticalLayout.layout","lib/ui/impl/VerticalLayout.hx",19,0xd2ac55c0)
namespace lib{
namespace ui{
namespace impl{

void VerticalLayout_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_04b53db980ca35ac_7_new)
HXDLIN(   7)		this->padding = 0;
            	}

Dynamic VerticalLayout_obj::__CreateEmpty() { return new VerticalLayout_obj; }

void *VerticalLayout_obj::_hx_vtable = 0;

Dynamic VerticalLayout_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< VerticalLayout_obj > _hx_result = new VerticalLayout_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool VerticalLayout_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x79b4e319;
}

static ::lib::ui::api::Layout_obj _hx_lib_ui_impl_VerticalLayout__hx_lib_ui_api_Layout= {
	( void (::hx::Object::*)(::Array< ::Dynamic>,::hx::Null< int > ))&::lib::ui::impl::VerticalLayout_obj::layout,
};

void *VerticalLayout_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x26c49eeb: return &_hx_lib_ui_impl_VerticalLayout__hx_lib_ui_api_Layout;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

void VerticalLayout_obj::setPadding(int value){
            	HX_STACKFRAME(&_hx_pos_04b53db980ca35ac_16_setPadding)
HXDLIN(  16)		this->padding = value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(VerticalLayout_obj,setPadding,(void))

void VerticalLayout_obj::layout(::Array< ::Dynamic> elements,::hx::Null< int >  __o_offset){
            		int offset = __o_offset.Default(0);
            	HX_STACKFRAME(&_hx_pos_04b53db980ca35ac_19_layout)
HXLINE(  20)		 ::openfl::display::DisplayObject element = null();
HXLINE(  21)		int y = offset;
HXLINE(  22)		int length = elements->length;
HXLINE(  23)		{
HXLINE(  23)			int _g = 0;
HXDLIN(  23)			while((_g < length)){
HXLINE(  23)				_g = (_g + 1);
HXLINE(  24)				element = elements->__get((_g - 1)).StaticCast<  ::openfl::display::DisplayObject >();
HXLINE(  25)				element->set_y(( (Float)(y) ));
HXLINE(  26)				Float y1 = element->get_height();
HXDLIN(  26)				y = (y + ( (int)((y1 + this->padding)) ));
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(VerticalLayout_obj,layout,(void))


::hx::ObjectPtr< VerticalLayout_obj > VerticalLayout_obj::__new() {
	::hx::ObjectPtr< VerticalLayout_obj > __this = new VerticalLayout_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< VerticalLayout_obj > VerticalLayout_obj::__alloc(::hx::Ctx *_hx_ctx) {
	VerticalLayout_obj *__this = (VerticalLayout_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(VerticalLayout_obj), false, "lib.ui.impl.VerticalLayout"));
	*(void **)__this = VerticalLayout_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

VerticalLayout_obj::VerticalLayout_obj()
{
}

::hx::Val VerticalLayout_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"layout") ) { return ::hx::Val( layout_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"padding") ) { return ::hx::Val( padding ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"setPadding") ) { return ::hx::Val( setPadding_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val VerticalLayout_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"padding") ) { padding=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void VerticalLayout_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("padding",d1,59,7d,d0));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo VerticalLayout_obj_sMemberStorageInfo[] = {
	{::hx::fsInt,(int)offsetof(VerticalLayout_obj,padding),HX_("padding",d1,59,7d,d0)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *VerticalLayout_obj_sStaticStorageInfo = 0;
#endif

static ::String VerticalLayout_obj_sMemberFields[] = {
	HX_("padding",d1,59,7d,d0),
	HX_("setPadding",4f,7e,5c,23),
	HX_("layout",aa,ae,b8,58),
	::String(null()) };

::hx::Class VerticalLayout_obj::__mClass;

void VerticalLayout_obj::__register()
{
	VerticalLayout_obj _hx_dummy;
	VerticalLayout_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("lib.ui.impl.VerticalLayout",9d,ca,7a,d2);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(VerticalLayout_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< VerticalLayout_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = VerticalLayout_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = VerticalLayout_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace lib
} // end namespace ui
} // end namespace impl
