// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_Xml
#include <Xml.h>
#endif
#ifndef INCLUDED_objects_animation_AnimationData
#include <objects/animation/AnimationData.h>
#endif
#ifndef INCLUDED_objects_animation_AnimationsData
#include <objects/animation/AnimationsData.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_2149b29408fe808b_5_new,"objects.animation.AnimationsData","new",0xacc21b4f,"objects.animation.AnimationsData.new","objects/animation/AnimationsData.hx",5,0xaba1cd7f)
namespace objects{
namespace animation{

void AnimationsData_obj::__construct( ::Xml xml){
            	HX_GC_STACKFRAME(&_hx_pos_2149b29408fe808b_5_new)
HXLINE(   6)		this->animations = ::Array_obj< ::Dynamic>::__new();
HXLINE(   7)		{
HXLINE(   7)			 ::Dynamic animationXML = xml->elementsNamed(HX_("Animation",e4,ce,07,ed));
HXDLIN(   7)			while(( (bool)(animationXML->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic)()) )){
HXLINE(   7)				 ::Xml animationXML1 = ( ( ::Xml)(animationXML->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic)()) );
HXLINE(   8)				::Array< ::Dynamic> _hx_tmp = this->animations;
HXDLIN(   8)				_hx_tmp->push( ::objects::animation::AnimationData_obj::__alloc( HX_CTX ,animationXML1));
            			}
            		}
            	}

Dynamic AnimationsData_obj::__CreateEmpty() { return new AnimationsData_obj; }

void *AnimationsData_obj::_hx_vtable = 0;

Dynamic AnimationsData_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< AnimationsData_obj > _hx_result = new AnimationsData_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool AnimationsData_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x36b17849;
}


::hx::ObjectPtr< AnimationsData_obj > AnimationsData_obj::__new( ::Xml xml) {
	::hx::ObjectPtr< AnimationsData_obj > __this = new AnimationsData_obj();
	__this->__construct(xml);
	return __this;
}

::hx::ObjectPtr< AnimationsData_obj > AnimationsData_obj::__alloc(::hx::Ctx *_hx_ctx, ::Xml xml) {
	AnimationsData_obj *__this = (AnimationsData_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(AnimationsData_obj), true, "objects.animation.AnimationsData"));
	*(void **)__this = AnimationsData_obj::_hx_vtable;
	__this->__construct(xml);
	return __this;
}

AnimationsData_obj::AnimationsData_obj()
{
}

void AnimationsData_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(AnimationsData);
	HX_MARK_MEMBER_NAME(animations,"animations");
	HX_MARK_END_CLASS();
}

void AnimationsData_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(animations,"animations");
}

::hx::Val AnimationsData_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"animations") ) { return ::hx::Val( animations ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val AnimationsData_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"animations") ) { animations=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void AnimationsData_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("animations",ef,34,1c,83));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo AnimationsData_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(AnimationsData_obj,animations),HX_("animations",ef,34,1c,83)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *AnimationsData_obj_sStaticStorageInfo = 0;
#endif

static ::String AnimationsData_obj_sMemberFields[] = {
	HX_("animations",ef,34,1c,83),
	::String(null()) };

::hx::Class AnimationsData_obj::__mClass;

void AnimationsData_obj::__register()
{
	AnimationsData_obj _hx_dummy;
	AnimationsData_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("objects.animation.AnimationsData",dd,c7,08,6d);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(AnimationsData_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< AnimationsData_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = AnimationsData_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = AnimationsData_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace objects
} // end namespace animation
