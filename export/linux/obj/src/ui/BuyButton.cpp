// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_assets_IconFactory
#include <assets/IconFactory.h>
#endif
#ifndef INCLUDED_openfl__Vector_FloatVector
#include <openfl/_Vector/FloatVector.h>
#endif
#ifndef INCLUDED_openfl__Vector_IVector
#include <openfl/_Vector/IVector.h>
#endif
#ifndef INCLUDED_openfl__Vector_IntVector
#include <openfl/_Vector/IntVector.h>
#endif
#ifndef INCLUDED_openfl__Vector_ObjectVector
#include <openfl/_Vector/ObjectVector.h>
#endif
#ifndef INCLUDED_openfl_display_Bitmap
#include <openfl/display/Bitmap.h>
#endif
#ifndef INCLUDED_openfl_display_BitmapData
#include <openfl/display/BitmapData.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_Graphics
#include <openfl/display/Graphics.h>
#endif
#ifndef INCLUDED_openfl_display_GraphicsEndFill
#include <openfl/display/GraphicsEndFill.h>
#endif
#ifndef INCLUDED_openfl_display_GraphicsPath
#include <openfl/display/GraphicsPath.h>
#endif
#ifndef INCLUDED_openfl_display_GraphicsSolidFill
#include <openfl/display/GraphicsSolidFill.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_IGraphicsData
#include <openfl/display/IGraphicsData.h>
#endif
#ifndef INCLUDED_openfl_display_IGraphicsFill
#include <openfl/display/IGraphicsFill.h>
#endif
#ifndef INCLUDED_openfl_display_IGraphicsPath
#include <openfl/display/IGraphicsPath.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_MouseEvent
#include <openfl/events/MouseEvent.h>
#endif
#ifndef INCLUDED_openfl_text_TextField
#include <openfl/text/TextField.h>
#endif
#ifndef INCLUDED_ui_BuyButton
#include <ui/BuyButton.h>
#endif
#ifndef INCLUDED_ui_SimpleText
#include <ui/SimpleText.h>
#endif
#ifndef INCLUDED_util_GraphicsUtil
#include <util/GraphicsUtil.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_8513244d5fe5bbee_15_new,"ui.BuyButton","new",0xa5245b10,"ui.BuyButton.new","ui/BuyButton.hx",15,0x6c6033e1)
HX_LOCAL_STACK_FRAME(_hx_pos_8513244d5fe5bbee_54_setPrice,"ui.BuyButton","setPrice",0x5e8a6ed7,"ui.BuyButton.setPrice","ui/BuyButton.hx",54,0x6c6033e1)
HX_LOCAL_STACK_FRAME(_hx_pos_8513244d5fe5bbee_68_setWidth,"ui.BuyButton","setWidth",0x6061d654,"ui.BuyButton.setWidth","ui/BuyButton.hx",68,0x6c6033e1)
HX_LOCAL_STACK_FRAME(_hx_pos_8513244d5fe5bbee_73_updateUI,"ui.BuyButton","updateUI",0xffc4dbed,"ui.BuyButton.updateUI","ui/BuyButton.hx",73,0x6c6033e1)
HX_LOCAL_STACK_FRAME(_hx_pos_8513244d5fe5bbee_80_updateIcon,"ui.BuyButton","updateIcon",0x17cafd72,"ui.BuyButton.updateIcon","ui/BuyButton.hx",80,0x6c6033e1)
HX_LOCAL_STACK_FRAME(_hx_pos_8513244d5fe5bbee_92_updateBackground,"ui.BuyButton","updateBackground",0x4f53eaa7,"ui.BuyButton.updateBackground","ui/BuyButton.hx",92,0x6c6033e1)
static const int _hx_array_data_b17dd31e_6[] = {
	(int)1,(int)1,(int)1,(int)1,
};
HX_LOCAL_STACK_FRAME(_hx_pos_8513244d5fe5bbee_97_updateText,"ui.BuyButton","updateText",0x1f11e2a6,"ui.BuyButton.updateText","ui/BuyButton.hx",97,0x6c6033e1)
HX_LOCAL_STACK_FRAME(_hx_pos_8513244d5fe5bbee_104_updateIconPosition,"ui.BuyButton","updateIconPosition",0x1abd1c3b,"ui.BuyButton.updateIconPosition","ui/BuyButton.hx",104,0x6c6033e1)
HX_LOCAL_STACK_FRAME(_hx_pos_8513244d5fe5bbee_109_draw,"ui.BuyButton","draw",0xd418fb54,"ui.BuyButton.draw","ui/BuyButton.hx",109,0x6c6033e1)
HX_LOCAL_STACK_FRAME(_hx_pos_8513244d5fe5bbee_116_getWidth,"ui.BuyButton","getWidth",0xb2047ce0,"ui.BuyButton.getWidth","ui/BuyButton.hx",116,0x6c6033e1)
HX_LOCAL_STACK_FRAME(_hx_pos_8513244d5fe5bbee_120_getHeight,"ui.BuyButton","getHeight",0xc8383fcd,"ui.BuyButton.getHeight","ui/BuyButton.hx",120,0x6c6033e1)
HX_LOCAL_STACK_FRAME(_hx_pos_8513244d5fe5bbee_123_onMouseOver,"ui.BuyButton","onMouseOver",0x35b2e7aa,"ui.BuyButton.onMouseOver","ui/BuyButton.hx",123,0x6c6033e1)
HX_LOCAL_STACK_FRAME(_hx_pos_8513244d5fe5bbee_128_onRollOut,"ui.BuyButton","onRollOut",0x7e526062,"ui.BuyButton.onRollOut","ui/BuyButton.hx",128,0x6c6033e1)
namespace ui{

void BuyButton_obj::__construct(::String prefix,int size,int price,int currency){
            	HX_GC_STACKFRAME(&_hx_pos_8513244d5fe5bbee_15_new)
HXLINE(  35)		this->_width = -1;
HXLINE(  34)		this->currency = -1;
HXLINE(  33)		this->price = -1;
HXLINE(  30)		this->prefix = HX_("",00,00,00,00);
HXLINE(  24)		this->graphicsData =  ::openfl::_Vector::ObjectVector_obj::__alloc( HX_CTX ,0,false,::Array_obj< ::Dynamic>::__new(3)->init(0, ::openfl::display::GraphicsSolidFill_obj::__alloc( HX_CTX ,16777215,1))->init(1, ::openfl::display::GraphicsSolidFill_obj::__alloc( HX_CTX ,8355711,1))->init(2,::util::GraphicsUtil_obj::END_FILL),true);
HXLINE(  23)		this->graphicsPath =  ::openfl::display::GraphicsPath_obj::__alloc( HX_CTX ,null(),null(),null());
HXLINE(  22)		this->disabledFill =  ::openfl::display::GraphicsSolidFill_obj::__alloc( HX_CTX ,8355711,1);
HXLINE(  21)		this->enabledFill =  ::openfl::display::GraphicsSolidFill_obj::__alloc( HX_CTX ,16777215,1);
HXLINE(  38)		super::__construct();
HXLINE(  40)		this->prefix = prefix;
HXLINE(  41)		this->text =  ::ui::SimpleText_obj::__alloc( HX_CTX ,size,3552822,false,0,0,null());
HXLINE(  42)		this->text->setBold(true);
HXLINE(  43)		this->addChild(this->text);
HXLINE(  44)		::ui::BuyButton_obj::coin = ::assets::IconFactory_obj::makeGems();
HXLINE(  45)		::ui::BuyButton_obj::fame = ::assets::IconFactory_obj::makeGold();
HXLINE(  46)		this->icon =  ::openfl::display::Bitmap_obj::__alloc( HX_CTX ,null(),null(),null());
HXLINE(  47)		this->addChild(this->icon);
HXLINE(  48)		this->addEventListener(HX_("mouseOver",19,4a,0d,f6),this->onMouseOver_dyn(),null(),null(),null());
HXLINE(  49)		this->addEventListener(HX_("rollOut",11,f9,11,5d),this->onRollOut_dyn(),null(),null(),null());
HXLINE(  50)		this->setPrice(price,currency);
            	}

Dynamic BuyButton_obj::__CreateEmpty() { return new BuyButton_obj; }

void *BuyButton_obj::_hx_vtable = 0;

Dynamic BuyButton_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< BuyButton_obj > _hx_result = new BuyButton_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3]);
	return _hx_result;
}

bool BuyButton_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1f4df417) {
		if (inClassId<=(int)0x0c89e854) {
			if (inClassId<=(int)0x0330636f) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0330636f;
			} else {
				return inClassId==(int)0x0c89e854;
			}
		} else {
			return inClassId==(int)0x1f4df417;
		}
	} else {
		if (inClassId<=(int)0x520d2e9c) {
			return inClassId==(int)0x4af7dd8e || inClassId==(int)0x520d2e9c;
		} else {
			return inClassId==(int)0x6b353933;
		}
	}
}

void BuyButton_obj::setPrice(int price,int currency){
            	HX_STACKFRAME(&_hx_pos_8513244d5fe5bbee_54_setPrice)
HXDLIN(  54)		bool _hx_tmp;
HXDLIN(  54)		if ((this->price == price)) {
HXDLIN(  54)			_hx_tmp = (this->currency != currency);
            		}
            		else {
HXDLIN(  54)			_hx_tmp = true;
            		}
HXDLIN(  54)		if (_hx_tmp) {
HXLINE(  55)			this->price = price;
HXLINE(  56)			this->currency = currency;
HXLINE(  57)			this->updateUI();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(BuyButton_obj,setPrice,(void))

void BuyButton_obj::setWidth(int value){
            	HX_STACKFRAME(&_hx_pos_8513244d5fe5bbee_68_setWidth)
HXLINE(  69)		this->_width = value;
HXLINE(  70)		this->updateUI();
            	}


HX_DEFINE_DYNAMIC_FUNC1(BuyButton_obj,setWidth,(void))

void BuyButton_obj::updateUI(){
            	HX_STACKFRAME(&_hx_pos_8513244d5fe5bbee_73_updateUI)
HXLINE(  74)		this->updateText();
HXLINE(  75)		this->updateIcon();
HXLINE(  76)		this->updateBackground();
HXLINE(  77)		this->draw();
            	}


HX_DEFINE_DYNAMIC_FUNC0(BuyButton_obj,updateUI,(void))

void BuyButton_obj::updateIcon(){
            	HX_STACKFRAME(&_hx_pos_8513244d5fe5bbee_80_updateIcon)
HXLINE(  81)		switch((int)(this->currency)){
            			case (int)0: {
HXLINE(  83)				this->icon->set_bitmapData(::ui::BuyButton_obj::coin);
            			}
            			break;
            			case (int)1: {
HXLINE(  85)				this->icon->set_bitmapData(::ui::BuyButton_obj::fame);
            			}
            			break;
            			default:{
HXLINE(  87)				this->icon->set_bitmapData(null());
            			}
            		}
HXLINE(  89)		this->updateIconPosition();
            	}


HX_DEFINE_DYNAMIC_FUNC0(BuyButton_obj,updateIcon,(void))

void BuyButton_obj::updateBackground(){
            	HX_STACKFRAME(&_hx_pos_8513244d5fe5bbee_92_updateBackground)
HXLINE(  93)		::util::GraphicsUtil_obj::clearPath(this->graphicsPath);
HXLINE(  94)		int _hx_tmp = this->getWidth();
HXDLIN(  94)		int _hx_tmp1 = this->getHeight();
HXDLIN(  94)		::util::GraphicsUtil_obj::drawCutEdgeRect(0,0,_hx_tmp,_hx_tmp1,4,::Array_obj< int >::fromData( _hx_array_data_b17dd31e_6,4),this->graphicsPath);
            	}


HX_DEFINE_DYNAMIC_FUNC0(BuyButton_obj,updateBackground,(void))

void BuyButton_obj::updateText(){
            	HX_STACKFRAME(&_hx_pos_8513244d5fe5bbee_97_updateText)
HXLINE(  98)		 ::ui::SimpleText _hx_tmp = this->text;
HXDLIN(  98)		::String _hx_tmp1 = this->prefix;
HXDLIN(  98)		_hx_tmp->set_text((_hx_tmp1 + ::Std_obj::string(this->price)));
HXLINE(  99)		this->text->updateMetrics();
HXLINE( 100)		 ::ui::SimpleText _hx_tmp2 = this->text;
HXDLIN( 100)		int _hx_tmp3 = this->getWidth();
HXDLIN( 100)		Float _hx_tmp4 = (( (Float)(_hx_tmp3) ) - this->icon->get_width());
HXDLIN( 100)		_hx_tmp2->set_x((((_hx_tmp4 - this->text->get_textWidth()) - ( (Float)(5) )) * ((Float)0.5)));
HXLINE( 101)		this->text->set_y(( (Float)(1) ));
            	}


HX_DEFINE_DYNAMIC_FUNC0(BuyButton_obj,updateText,(void))

void BuyButton_obj::updateIconPosition(){
            	HX_STACKFRAME(&_hx_pos_8513244d5fe5bbee_104_updateIconPosition)
HXLINE( 105)		 ::openfl::display::Bitmap _hx_tmp = this->icon;
HXDLIN( 105)		Float _hx_tmp1 = this->text->get_x();
HXDLIN( 105)		_hx_tmp->set_x(((_hx_tmp1 + this->text->get_textWidth()) + 5));
HXLINE( 106)		 ::openfl::display::Bitmap _hx_tmp2 = this->icon;
HXDLIN( 106)		int _hx_tmp3 = this->getHeight();
HXDLIN( 106)		_hx_tmp2->set_y(((( (Float)(_hx_tmp3) ) - this->icon->get_height()) * ((Float)0.5)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(BuyButton_obj,updateIconPosition,(void))

void BuyButton_obj::draw(){
            	HX_STACKFRAME(&_hx_pos_8513244d5fe5bbee_109_draw)
HXLINE( 110)		{
HXLINE( 110)			::Dynamic value;
HXDLIN( 110)			if (this->mouseEnabled) {
HXLINE( 110)				value = this->enabledFill;
            			}
            			else {
HXLINE( 110)				value = this->disabledFill;
            			}
HXDLIN( 110)			this->graphicsData->set(0,value);
            		}
HXLINE( 111)		this->get_graphics()->clear();
HXLINE( 112)		this->get_graphics()->drawGraphicsData(this->graphicsData);
            	}


HX_DEFINE_DYNAMIC_FUNC0(BuyButton_obj,draw,(void))

int BuyButton_obj::getWidth(){
            	HX_STACKFRAME(&_hx_pos_8513244d5fe5bbee_116_getWidth)
HXDLIN( 116)		int _hx_tmp = this->_width;
HXDLIN( 116)		Float _hx_tmp1 = this->text->get_width();
HXDLIN( 116)		return ::Std_obj::_hx_int(::Math_obj::max(( (Float)(_hx_tmp) ),((_hx_tmp1 + this->icon->get_width()) + 15)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(BuyButton_obj,getWidth,return )

int BuyButton_obj::getHeight(){
            	HX_STACKFRAME(&_hx_pos_8513244d5fe5bbee_120_getHeight)
HXDLIN( 120)		return ::Std_obj::_hx_int((this->text->get_textHeight() + 8));
            	}


HX_DEFINE_DYNAMIC_FUNC0(BuyButton_obj,getHeight,return )

void BuyButton_obj::onMouseOver( ::openfl::events::MouseEvent event){
            	HX_STACKFRAME(&_hx_pos_8513244d5fe5bbee_123_onMouseOver)
HXLINE( 124)		this->enabledFill->color = 16768133;
HXLINE( 125)		this->draw();
            	}


HX_DEFINE_DYNAMIC_FUNC1(BuyButton_obj,onMouseOver,(void))

void BuyButton_obj::onRollOut( ::openfl::events::MouseEvent event){
            	HX_STACKFRAME(&_hx_pos_8513244d5fe5bbee_128_onRollOut)
HXLINE( 129)		this->enabledFill->color = 16777215;
HXLINE( 130)		this->draw();
            	}


HX_DEFINE_DYNAMIC_FUNC1(BuyButton_obj,onRollOut,(void))

 ::openfl::display::BitmapData BuyButton_obj::coin;

 ::openfl::display::BitmapData BuyButton_obj::fame;


::hx::ObjectPtr< BuyButton_obj > BuyButton_obj::__new(::String prefix,int size,int price,int currency) {
	::hx::ObjectPtr< BuyButton_obj > __this = new BuyButton_obj();
	__this->__construct(prefix,size,price,currency);
	return __this;
}

::hx::ObjectPtr< BuyButton_obj > BuyButton_obj::__alloc(::hx::Ctx *_hx_ctx,::String prefix,int size,int price,int currency) {
	BuyButton_obj *__this = (BuyButton_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(BuyButton_obj), true, "ui.BuyButton"));
	*(void **)__this = BuyButton_obj::_hx_vtable;
	__this->__construct(prefix,size,price,currency);
	return __this;
}

BuyButton_obj::BuyButton_obj()
{
}

void BuyButton_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(BuyButton);
	HX_MARK_MEMBER_NAME(enabledFill,"enabledFill");
	HX_MARK_MEMBER_NAME(disabledFill,"disabledFill");
	HX_MARK_MEMBER_NAME(graphicsPath,"graphicsPath");
	HX_MARK_MEMBER_NAME(graphicsData,"graphicsData");
	HX_MARK_MEMBER_NAME(prefix,"prefix");
	HX_MARK_MEMBER_NAME(text,"text");
	HX_MARK_MEMBER_NAME(icon,"icon");
	HX_MARK_MEMBER_NAME(price,"price");
	HX_MARK_MEMBER_NAME(currency,"currency");
	HX_MARK_MEMBER_NAME(_width,"_width");
	 ::openfl::display::Sprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void BuyButton_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(enabledFill,"enabledFill");
	HX_VISIT_MEMBER_NAME(disabledFill,"disabledFill");
	HX_VISIT_MEMBER_NAME(graphicsPath,"graphicsPath");
	HX_VISIT_MEMBER_NAME(graphicsData,"graphicsData");
	HX_VISIT_MEMBER_NAME(prefix,"prefix");
	HX_VISIT_MEMBER_NAME(text,"text");
	HX_VISIT_MEMBER_NAME(icon,"icon");
	HX_VISIT_MEMBER_NAME(price,"price");
	HX_VISIT_MEMBER_NAME(currency,"currency");
	HX_VISIT_MEMBER_NAME(_width,"_width");
	 ::openfl::display::Sprite_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val BuyButton_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"text") ) { return ::hx::Val( text ); }
		if (HX_FIELD_EQ(inName,"icon") ) { return ::hx::Val( icon ); }
		if (HX_FIELD_EQ(inName,"draw") ) { return ::hx::Val( draw_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"price") ) { return ::hx::Val( price ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"prefix") ) { return ::hx::Val( prefix ); }
		if (HX_FIELD_EQ(inName,"_width") ) { return ::hx::Val( _width ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"currency") ) { return ::hx::Val( currency ); }
		if (HX_FIELD_EQ(inName,"setPrice") ) { return ::hx::Val( setPrice_dyn() ); }
		if (HX_FIELD_EQ(inName,"setWidth") ) { return ::hx::Val( setWidth_dyn() ); }
		if (HX_FIELD_EQ(inName,"updateUI") ) { return ::hx::Val( updateUI_dyn() ); }
		if (HX_FIELD_EQ(inName,"getWidth") ) { return ::hx::Val( getWidth_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"getHeight") ) { return ::hx::Val( getHeight_dyn() ); }
		if (HX_FIELD_EQ(inName,"onRollOut") ) { return ::hx::Val( onRollOut_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"updateIcon") ) { return ::hx::Val( updateIcon_dyn() ); }
		if (HX_FIELD_EQ(inName,"updateText") ) { return ::hx::Val( updateText_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"enabledFill") ) { return ::hx::Val( enabledFill ); }
		if (HX_FIELD_EQ(inName,"onMouseOver") ) { return ::hx::Val( onMouseOver_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"disabledFill") ) { return ::hx::Val( disabledFill ); }
		if (HX_FIELD_EQ(inName,"graphicsPath") ) { return ::hx::Val( graphicsPath ); }
		if (HX_FIELD_EQ(inName,"graphicsData") ) { return ::hx::Val( graphicsData ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"updateBackground") ) { return ::hx::Val( updateBackground_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"updateIconPosition") ) { return ::hx::Val( updateIconPosition_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool BuyButton_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"coin") ) { outValue = ( coin ); return true; }
		if (HX_FIELD_EQ(inName,"fame") ) { outValue = ( fame ); return true; }
	}
	return false;
}

::hx::Val BuyButton_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"text") ) { text=inValue.Cast<  ::ui::SimpleText >(); return inValue; }
		if (HX_FIELD_EQ(inName,"icon") ) { icon=inValue.Cast<  ::openfl::display::Bitmap >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"price") ) { price=inValue.Cast< int >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"prefix") ) { prefix=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_width") ) { _width=inValue.Cast< int >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"currency") ) { currency=inValue.Cast< int >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"enabledFill") ) { enabledFill=inValue.Cast<  ::openfl::display::GraphicsSolidFill >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"disabledFill") ) { disabledFill=inValue.Cast<  ::openfl::display::GraphicsSolidFill >(); return inValue; }
		if (HX_FIELD_EQ(inName,"graphicsPath") ) { graphicsPath=inValue.Cast<  ::openfl::display::GraphicsPath >(); return inValue; }
		if (HX_FIELD_EQ(inName,"graphicsData") ) { graphicsData=inValue.Cast<  ::openfl::_Vector::ObjectVector >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool BuyButton_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"coin") ) { coin=ioValue.Cast<  ::openfl::display::BitmapData >(); return true; }
		if (HX_FIELD_EQ(inName,"fame") ) { fame=ioValue.Cast<  ::openfl::display::BitmapData >(); return true; }
	}
	return false;
}

void BuyButton_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("enabledFill",a4,d3,48,fa));
	outFields->push(HX_("disabledFill",1f,aa,fd,6d));
	outFields->push(HX_("graphicsPath",10,cc,46,49));
	outFields->push(HX_("graphicsData",95,3c,58,41));
	outFields->push(HX_("prefix",92,d9,b6,ae));
	outFields->push(HX_("text",ad,cc,f9,4c));
	outFields->push(HX_("icon",79,e7,b2,45));
	outFields->push(HX_("price",89,4e,8b,c8));
	outFields->push(HX_("currency",51,07,45,9b));
	outFields->push(HX_("_width",47,fd,49,c6));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo BuyButton_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::openfl::display::GraphicsSolidFill */ ,(int)offsetof(BuyButton_obj,enabledFill),HX_("enabledFill",a4,d3,48,fa)},
	{::hx::fsObject /*  ::openfl::display::GraphicsSolidFill */ ,(int)offsetof(BuyButton_obj,disabledFill),HX_("disabledFill",1f,aa,fd,6d)},
	{::hx::fsObject /*  ::openfl::display::GraphicsPath */ ,(int)offsetof(BuyButton_obj,graphicsPath),HX_("graphicsPath",10,cc,46,49)},
	{::hx::fsObject /*  ::openfl::_Vector::ObjectVector */ ,(int)offsetof(BuyButton_obj,graphicsData),HX_("graphicsData",95,3c,58,41)},
	{::hx::fsString,(int)offsetof(BuyButton_obj,prefix),HX_("prefix",92,d9,b6,ae)},
	{::hx::fsObject /*  ::ui::SimpleText */ ,(int)offsetof(BuyButton_obj,text),HX_("text",ad,cc,f9,4c)},
	{::hx::fsObject /*  ::openfl::display::Bitmap */ ,(int)offsetof(BuyButton_obj,icon),HX_("icon",79,e7,b2,45)},
	{::hx::fsInt,(int)offsetof(BuyButton_obj,price),HX_("price",89,4e,8b,c8)},
	{::hx::fsInt,(int)offsetof(BuyButton_obj,currency),HX_("currency",51,07,45,9b)},
	{::hx::fsInt,(int)offsetof(BuyButton_obj,_width),HX_("_width",47,fd,49,c6)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo BuyButton_obj_sStaticStorageInfo[] = {
	{::hx::fsObject /*  ::openfl::display::BitmapData */ ,(void *) &BuyButton_obj::coin,HX_("coin",91,b5,c4,41)},
	{::hx::fsObject /*  ::openfl::display::BitmapData */ ,(void *) &BuyButton_obj::fame,HX_("fame",53,bd,b5,43)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static ::String BuyButton_obj_sMemberFields[] = {
	HX_("enabledFill",a4,d3,48,fa),
	HX_("disabledFill",1f,aa,fd,6d),
	HX_("graphicsPath",10,cc,46,49),
	HX_("graphicsData",95,3c,58,41),
	HX_("prefix",92,d9,b6,ae),
	HX_("text",ad,cc,f9,4c),
	HX_("icon",79,e7,b2,45),
	HX_("price",89,4e,8b,c8),
	HX_("currency",51,07,45,9b),
	HX_("_width",47,fd,49,c6),
	HX_("setPrice",87,b7,bf,d6),
	HX_("setWidth",04,1f,97,d8),
	HX_("updateUI",9d,24,fa,77),
	HX_("updateIcon",22,d2,67,fe),
	HX_("updateBackground",57,63,09,70),
	HX_("updateText",56,b7,ae,05),
	HX_("updateIconPosition",eb,20,46,ee),
	HX_("draw",04,2c,70,42),
	HX_("getWidth",90,c5,39,2a),
	HX_("getHeight",1d,91,a2,7e),
	HX_("onMouseOver",fa,2c,50,18),
	HX_("onRollOut",b2,b1,bc,34),
	::String(null()) };

static void BuyButton_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(BuyButton_obj::coin,"coin");
	HX_MARK_MEMBER_NAME(BuyButton_obj::fame,"fame");
};

#ifdef HXCPP_VISIT_ALLOCS
static void BuyButton_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(BuyButton_obj::coin,"coin");
	HX_VISIT_MEMBER_NAME(BuyButton_obj::fame,"fame");
};

#endif

::hx::Class BuyButton_obj::__mClass;

static ::String BuyButton_obj_sStaticFields[] = {
	HX_("coin",91,b5,c4,41),
	HX_("fame",53,bd,b5,43),
	::String(null())
};

void BuyButton_obj::__register()
{
	BuyButton_obj _hx_dummy;
	BuyButton_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("ui.BuyButton",1e,d3,7d,b1);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &BuyButton_obj::__GetStatic;
	__mClass->mSetStaticField = &BuyButton_obj::__SetStatic;
	__mClass->mMarkFunc = BuyButton_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(BuyButton_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(BuyButton_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< BuyButton_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = BuyButton_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = BuyButton_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = BuyButton_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace ui
