// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_openfl__Vector_FloatVector
#include <openfl/_Vector/FloatVector.h>
#endif
#ifndef INCLUDED_openfl__Vector_IVector
#include <openfl/_Vector/IVector.h>
#endif
#ifndef INCLUDED_openfl__Vector_IntVector
#include <openfl/_Vector/IntVector.h>
#endif
#ifndef INCLUDED_openfl__Vector_ObjectVector
#include <openfl/_Vector/ObjectVector.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_Graphics
#include <openfl/display/Graphics.h>
#endif
#ifndef INCLUDED_openfl_display_GraphicsEndFill
#include <openfl/display/GraphicsEndFill.h>
#endif
#ifndef INCLUDED_openfl_display_GraphicsPath
#include <openfl/display/GraphicsPath.h>
#endif
#ifndef INCLUDED_openfl_display_GraphicsSolidFill
#include <openfl/display/GraphicsSolidFill.h>
#endif
#ifndef INCLUDED_openfl_display_GraphicsStroke
#include <openfl/display/GraphicsStroke.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_IGraphicsData
#include <openfl/display/IGraphicsData.h>
#endif
#ifndef INCLUDED_openfl_display_IGraphicsFill
#include <openfl/display/IGraphicsFill.h>
#endif
#ifndef INCLUDED_openfl_display_IGraphicsPath
#include <openfl/display/IGraphicsPath.h>
#endif
#ifndef INCLUDED_openfl_display_IGraphicsStroke
#include <openfl/display/IGraphicsStroke.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_MouseEvent
#include <openfl/events/MouseEvent.h>
#endif
#ifndef INCLUDED_openfl_filters_BitmapFilter
#include <openfl/filters/BitmapFilter.h>
#endif
#ifndef INCLUDED_openfl_filters_DropShadowFilter
#include <openfl/filters/DropShadowFilter.h>
#endif
#ifndef INCLUDED_openfl_text_TextField
#include <openfl/text/TextField.h>
#endif
#ifndef INCLUDED_ui_SimpleText
#include <ui/SimpleText.h>
#endif
#ifndef INCLUDED_ui_options_ChoiceBox
#include <ui/options/ChoiceBox.h>
#endif
#ifndef INCLUDED_util_GraphicsUtil
#include <util/GraphicsUtil.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_7eb51ae54a7c4515_18_new,"ui.options.ChoiceBox","new",0x2eedd052,"ui.options.ChoiceBox.new","ui/options/ChoiceBox.hx",18,0x9c5e0360)
HX_LOCAL_STACK_FRAME(_hx_pos_7eb51ae54a7c4515_56_setValue,"ui.options.ChoiceBox","setValue",0x4a13db3d,"ui.options.ChoiceBox.setValue","ui/options/ChoiceBox.hx",56,0x9c5e0360)
HX_LOCAL_STACK_FRAME(_hx_pos_7eb51ae54a7c4515_71_value,"ui.options.ChoiceBox","value",0xbac7dfe3,"ui.options.ChoiceBox.value","ui/options/ChoiceBox.hx",71,0x9c5e0360)
HX_LOCAL_STACK_FRAME(_hx_pos_7eb51ae54a7c4515_74_drawBackground,"ui.options.ChoiceBox","drawBackground",0xf4557260,"ui.options.ChoiceBox.drawBackground","ui/options/ChoiceBox.hx",74,0x9c5e0360)
static const int _hx_array_data_1cceff60_5[] = {
	(int)1,(int)1,(int)1,(int)1,
};
HX_LOCAL_STACK_FRAME(_hx_pos_7eb51ae54a7c4515_84_setSelected,"ui.options.ChoiceBox","setSelected",0xb134360f,"ui.options.ChoiceBox.setSelected","ui/options/ChoiceBox.hx",84,0x9c5e0360)
HX_LOCAL_STACK_FRAME(_hx_pos_7eb51ae54a7c4515_89_setText,"ui.options.ChoiceBox","setText",0x867bee61,"ui.options.ChoiceBox.setText","ui/options/ChoiceBox.hx",89,0x9c5e0360)
HX_LOCAL_STACK_FRAME(_hx_pos_7eb51ae54a7c4515_97_onMouseOver,"ui.options.ChoiceBox","onMouseOver",0xe7b66eec,"ui.options.ChoiceBox.onMouseOver","ui/options/ChoiceBox.hx",97,0x9c5e0360)
HX_LOCAL_STACK_FRAME(_hx_pos_7eb51ae54a7c4515_102_onRollOut,"ui.options.ChoiceBox","onRollOut",0x0caa3324,"ui.options.ChoiceBox.onRollOut","ui/options/ChoiceBox.hx",102,0x9c5e0360)
HX_LOCAL_STACK_FRAME(_hx_pos_7eb51ae54a7c4515_107_onClick,"ui.options.ChoiceBox","onClick",0x5299fb9b,"ui.options.ChoiceBox.onClick","ui/options/ChoiceBox.hx",107,0x9c5e0360)
namespace ui{
namespace options{

void ChoiceBox_obj::__construct(::Array< ::String > labels,::cpp::VirtualArray values,::String value){
            	HX_GC_STACKFRAME(&_hx_pos_7eb51ae54a7c4515_18_new)
HXLINE(  33)		this->graphicsData =  ::openfl::_Vector::ObjectVector_obj::__alloc( HX_CTX ,0,false,::Array_obj< ::Dynamic>::__new(5)->init(0, ::openfl::display::GraphicsSolidFill_obj::__alloc( HX_CTX ,3355443,1))->init(1, ::openfl::display::GraphicsStroke_obj::__alloc( HX_CTX ,2,false,2,0,2,3, ::openfl::display::GraphicsSolidFill_obj::__alloc( HX_CTX ,4473924,1)))->init(2, ::openfl::display::GraphicsPath_obj::__alloc( HX_CTX ,null(),null(),null()))->init(3,::util::GraphicsUtil_obj::END_STROKE)->init(4,::util::GraphicsUtil_obj::END_FILL),true);
HXLINE(  32)		this->lineStyle =  ::openfl::display::GraphicsStroke_obj::__alloc( HX_CTX ,2,false,2,0,2,3, ::openfl::display::GraphicsSolidFill_obj::__alloc( HX_CTX ,4473924,1));
HXLINE(  31)		this->path =  ::openfl::display::GraphicsPath_obj::__alloc( HX_CTX ,null(),null(),null());
HXLINE(  30)		this->normalLineFill =  ::openfl::display::GraphicsSolidFill_obj::__alloc( HX_CTX ,4473924,1);
HXLINE(  29)		this->overLineFill =  ::openfl::display::GraphicsSolidFill_obj::__alloc( HX_CTX ,11776947,1);
HXLINE(  27)		this->over = false;
HXLINE(  26)		this->labelText = null();
HXLINE(  24)		this->selectedIndex = -1;
HXLINE(  42)		super::__construct();
HXLINE(  44)		this->labels = labels;
HXLINE(  45)		this->values = values;
HXLINE(  46)		this->labelText =  ::ui::SimpleText_obj::__alloc( HX_CTX ,16,16777215,false,0,0,null());
HXLINE(  47)		this->labelText->setBold(true);
HXLINE(  48)		 ::ui::SimpleText _hx_tmp = this->labelText;
HXDLIN(  48)		_hx_tmp->set_filters(::Array_obj< ::Dynamic>::__new(1)->init(0, ::openfl::filters::DropShadowFilter_obj::__alloc( HX_CTX ,0,0,0,1,4,4,2,null(),null(),null(),null())));
HXLINE(  49)		this->addChild(this->labelText);
HXLINE(  50)		this->setValue(value);
HXLINE(  51)		this->addEventListener(HX_("mouseOver",19,4a,0d,f6),this->onMouseOver_dyn(),null(),null(),null());
HXLINE(  52)		this->addEventListener(HX_("rollOut",11,f9,11,5d),this->onRollOut_dyn(),null(),null(),null());
HXLINE(  53)		this->addEventListener(HX_("click",48,7c,5e,48),this->onClick_dyn(),null(),null(),null());
            	}

Dynamic ChoiceBox_obj::__CreateEmpty() { return new ChoiceBox_obj; }

void *ChoiceBox_obj::_hx_vtable = 0;

Dynamic ChoiceBox_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ChoiceBox_obj > _hx_result = new ChoiceBox_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool ChoiceBox_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x0c89e854) {
		if (inClassId<=(int)0x07e03980) {
			if (inClassId<=(int)0x0330636f) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0330636f;
			} else {
				return inClassId==(int)0x07e03980;
			}
		} else {
			return inClassId==(int)0x0c89e854;
		}
	} else {
		if (inClassId<=(int)0x4af7dd8e) {
			return inClassId==(int)0x1f4df417 || inClassId==(int)0x4af7dd8e;
		} else {
			return inClassId==(int)0x6b353933;
		}
	}
}

void ChoiceBox_obj::setValue(::String value){
            	HX_GC_STACKFRAME(&_hx_pos_7eb51ae54a7c4515_56_setValue)
HXLINE(  57)		{
HXLINE(  57)			int _g = 0;
HXDLIN(  57)			int _g1 = this->values->get_length();
HXDLIN(  57)			while((_g < _g1)){
HXLINE(  57)				_g = (_g + 1);
HXDLIN(  57)				int i = (_g - 1);
HXLINE(  58)				if (::hx::IsEq( value,this->values->__get(i) )) {
HXLINE(  59)					if ((i == this->selectedIndex)) {
HXLINE(  60)						return;
            					}
HXLINE(  62)					this->selectedIndex = i;
HXLINE(  63)					goto _hx_goto_1;
            				}
            			}
            			_hx_goto_1:;
            		}
HXLINE(  66)		this->setSelected(this->selectedIndex);
HXLINE(  67)		this->dispatchEvent( ::openfl::events::Event_obj::__alloc( HX_CTX ,HX_("change",70,91,72,b7),null(),null()));
            	}


HX_DEFINE_DYNAMIC_FUNC1(ChoiceBox_obj,setValue,(void))

 ::Dynamic ChoiceBox_obj::value(){
            	HX_STACKFRAME(&_hx_pos_7eb51ae54a7c4515_71_value)
HXDLIN(  71)		return this->values->__get(this->selectedIndex);
            	}


HX_DEFINE_DYNAMIC_FUNC0(ChoiceBox_obj,value,return )

void ChoiceBox_obj::drawBackground(){
            	HX_STACKFRAME(&_hx_pos_7eb51ae54a7c4515_74_drawBackground)
HXLINE(  75)		::util::GraphicsUtil_obj::clearPath(this->path);
HXLINE(  76)		::util::GraphicsUtil_obj::drawCutEdgeRect(0,0,80,32,4,::Array_obj< int >::fromData( _hx_array_data_1cceff60_5,4),this->path);
HXLINE(  77)		::Dynamic _hx_tmp;
HXDLIN(  77)		if (this->over) {
HXLINE(  77)			_hx_tmp = this->overLineFill;
            		}
            		else {
HXLINE(  77)			_hx_tmp = this->normalLineFill;
            		}
HXDLIN(  77)		this->lineStyle->fill = _hx_tmp;
HXLINE(  78)		this->graphicsData->set(1,this->lineStyle);
HXLINE(  79)		this->graphicsData->set(2,this->path);
HXLINE(  80)		this->get_graphics()->clear();
HXLINE(  81)		this->get_graphics()->drawGraphicsData(this->graphicsData);
            	}


HX_DEFINE_DYNAMIC_FUNC0(ChoiceBox_obj,drawBackground,(void))

void ChoiceBox_obj::setSelected(int index){
            	HX_STACKFRAME(&_hx_pos_7eb51ae54a7c4515_84_setSelected)
HXLINE(  85)		this->selectedIndex = ::Std_obj::_hx_int(::Math_obj::max(( (Float)(0) ),::Math_obj::min(( (Float)(index) ),( (Float)((this->labels->length - 1)) ))));
HXLINE(  86)		this->setText(this->labels->__get(this->selectedIndex));
            	}


HX_DEFINE_DYNAMIC_FUNC1(ChoiceBox_obj,setSelected,(void))

void ChoiceBox_obj::setText(::String text){
            	HX_STACKFRAME(&_hx_pos_7eb51ae54a7c4515_89_setText)
HXLINE(  90)		this->labelText->set_text(text);
HXLINE(  91)		this->labelText->updateMetrics();
HXLINE(  92)		 ::ui::SimpleText _hx_tmp = this->labelText;
HXDLIN(  92)		_hx_tmp->set_x((((Float)40.) - (this->labelText->get_width() / ( (Float)(2) ))));
HXLINE(  93)		 ::ui::SimpleText _hx_tmp1 = this->labelText;
HXDLIN(  93)		_hx_tmp1->set_y(((((Float)16.) - (this->labelText->get_height() / ( (Float)(2) ))) - ( (Float)(2) )));
HXLINE(  94)		this->drawBackground();
            	}


HX_DEFINE_DYNAMIC_FUNC1(ChoiceBox_obj,setText,(void))

void ChoiceBox_obj::onMouseOver( ::openfl::events::MouseEvent event){
            	HX_STACKFRAME(&_hx_pos_7eb51ae54a7c4515_97_onMouseOver)
HXLINE(  98)		this->over = true;
HXLINE(  99)		this->drawBackground();
            	}


HX_DEFINE_DYNAMIC_FUNC1(ChoiceBox_obj,onMouseOver,(void))

void ChoiceBox_obj::onRollOut( ::openfl::events::MouseEvent event){
            	HX_STACKFRAME(&_hx_pos_7eb51ae54a7c4515_102_onRollOut)
HXLINE( 103)		this->over = false;
HXLINE( 104)		this->drawBackground();
            	}


HX_DEFINE_DYNAMIC_FUNC1(ChoiceBox_obj,onRollOut,(void))

void ChoiceBox_obj::onClick( ::openfl::events::MouseEvent event){
            	HX_GC_STACKFRAME(&_hx_pos_7eb51ae54a7c4515_107_onClick)
HXLINE( 108)		this->setSelected(::hx::Mod((this->selectedIndex + 1),this->values->get_length()));
HXLINE( 109)		this->dispatchEvent( ::openfl::events::Event_obj::__alloc( HX_CTX ,HX_("change",70,91,72,b7),null(),null()));
            	}


HX_DEFINE_DYNAMIC_FUNC1(ChoiceBox_obj,onClick,(void))


::hx::ObjectPtr< ChoiceBox_obj > ChoiceBox_obj::__new(::Array< ::String > labels,::cpp::VirtualArray values,::String value) {
	::hx::ObjectPtr< ChoiceBox_obj > __this = new ChoiceBox_obj();
	__this->__construct(labels,values,value);
	return __this;
}

::hx::ObjectPtr< ChoiceBox_obj > ChoiceBox_obj::__alloc(::hx::Ctx *_hx_ctx,::Array< ::String > labels,::cpp::VirtualArray values,::String value) {
	ChoiceBox_obj *__this = (ChoiceBox_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ChoiceBox_obj), true, "ui.options.ChoiceBox"));
	*(void **)__this = ChoiceBox_obj::_hx_vtable;
	__this->__construct(labels,values,value);
	return __this;
}

ChoiceBox_obj::ChoiceBox_obj()
{
}

void ChoiceBox_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ChoiceBox);
	HX_MARK_MEMBER_NAME(labels,"labels");
	HX_MARK_MEMBER_NAME(values,"values");
	HX_MARK_MEMBER_NAME(selectedIndex,"selectedIndex");
	HX_MARK_MEMBER_NAME(labelText,"labelText");
	HX_MARK_MEMBER_NAME(over,"over");
	HX_MARK_MEMBER_NAME(overLineFill,"overLineFill");
	HX_MARK_MEMBER_NAME(normalLineFill,"normalLineFill");
	HX_MARK_MEMBER_NAME(path,"path");
	HX_MARK_MEMBER_NAME(lineStyle,"lineStyle");
	HX_MARK_MEMBER_NAME(graphicsData,"graphicsData");
	 ::openfl::display::Sprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void ChoiceBox_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(labels,"labels");
	HX_VISIT_MEMBER_NAME(values,"values");
	HX_VISIT_MEMBER_NAME(selectedIndex,"selectedIndex");
	HX_VISIT_MEMBER_NAME(labelText,"labelText");
	HX_VISIT_MEMBER_NAME(over,"over");
	HX_VISIT_MEMBER_NAME(overLineFill,"overLineFill");
	HX_VISIT_MEMBER_NAME(normalLineFill,"normalLineFill");
	HX_VISIT_MEMBER_NAME(path,"path");
	HX_VISIT_MEMBER_NAME(lineStyle,"lineStyle");
	HX_VISIT_MEMBER_NAME(graphicsData,"graphicsData");
	 ::openfl::display::Sprite_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val ChoiceBox_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"over") ) { return ::hx::Val( over ); }
		if (HX_FIELD_EQ(inName,"path") ) { return ::hx::Val( path ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"value") ) { return ::hx::Val( value_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"labels") ) { return ::hx::Val( labels ); }
		if (HX_FIELD_EQ(inName,"values") ) { return ::hx::Val( values ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"setText") ) { return ::hx::Val( setText_dyn() ); }
		if (HX_FIELD_EQ(inName,"onClick") ) { return ::hx::Val( onClick_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"setValue") ) { return ::hx::Val( setValue_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"labelText") ) { return ::hx::Val( labelText ); }
		if (HX_FIELD_EQ(inName,"lineStyle") ) { return ::hx::Val( lineStyle ); }
		if (HX_FIELD_EQ(inName,"onRollOut") ) { return ::hx::Val( onRollOut_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"setSelected") ) { return ::hx::Val( setSelected_dyn() ); }
		if (HX_FIELD_EQ(inName,"onMouseOver") ) { return ::hx::Val( onMouseOver_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"overLineFill") ) { return ::hx::Val( overLineFill ); }
		if (HX_FIELD_EQ(inName,"graphicsData") ) { return ::hx::Val( graphicsData ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"selectedIndex") ) { return ::hx::Val( selectedIndex ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"normalLineFill") ) { return ::hx::Val( normalLineFill ); }
		if (HX_FIELD_EQ(inName,"drawBackground") ) { return ::hx::Val( drawBackground_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val ChoiceBox_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"over") ) { over=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"path") ) { path=inValue.Cast<  ::openfl::display::GraphicsPath >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"labels") ) { labels=inValue.Cast< ::Array< ::String > >(); return inValue; }
		if (HX_FIELD_EQ(inName,"values") ) { values=inValue.Cast< ::cpp::VirtualArray >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"labelText") ) { labelText=inValue.Cast<  ::ui::SimpleText >(); return inValue; }
		if (HX_FIELD_EQ(inName,"lineStyle") ) { lineStyle=inValue.Cast<  ::openfl::display::GraphicsStroke >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"overLineFill") ) { overLineFill=inValue.Cast<  ::openfl::display::GraphicsSolidFill >(); return inValue; }
		if (HX_FIELD_EQ(inName,"graphicsData") ) { graphicsData=inValue.Cast<  ::openfl::_Vector::ObjectVector >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"selectedIndex") ) { selectedIndex=inValue.Cast< int >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"normalLineFill") ) { normalLineFill=inValue.Cast<  ::openfl::display::GraphicsSolidFill >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ChoiceBox_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("labels",ff,27,7d,49));
	outFields->push(HX_("values",e2,03,b7,4f));
	outFields->push(HX_("selectedIndex",b7,76,56,b4));
	outFields->push(HX_("labelText",c1,10,52,5e));
	outFields->push(HX_("over",54,91,b8,49));
	outFields->push(HX_("overLineFill",0b,de,fe,0f));
	outFields->push(HX_("normalLineFill",de,49,89,3f));
	outFields->push(HX_("path",a5,e5,51,4a));
	outFields->push(HX_("lineStyle",9d,a8,18,cb));
	outFields->push(HX_("graphicsData",95,3c,58,41));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo ChoiceBox_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /* ::Array< ::String > */ ,(int)offsetof(ChoiceBox_obj,labels),HX_("labels",ff,27,7d,49)},
	{::hx::fsObject /* ::cpp::VirtualArray */ ,(int)offsetof(ChoiceBox_obj,values),HX_("values",e2,03,b7,4f)},
	{::hx::fsInt,(int)offsetof(ChoiceBox_obj,selectedIndex),HX_("selectedIndex",b7,76,56,b4)},
	{::hx::fsObject /*  ::ui::SimpleText */ ,(int)offsetof(ChoiceBox_obj,labelText),HX_("labelText",c1,10,52,5e)},
	{::hx::fsBool,(int)offsetof(ChoiceBox_obj,over),HX_("over",54,91,b8,49)},
	{::hx::fsObject /*  ::openfl::display::GraphicsSolidFill */ ,(int)offsetof(ChoiceBox_obj,overLineFill),HX_("overLineFill",0b,de,fe,0f)},
	{::hx::fsObject /*  ::openfl::display::GraphicsSolidFill */ ,(int)offsetof(ChoiceBox_obj,normalLineFill),HX_("normalLineFill",de,49,89,3f)},
	{::hx::fsObject /*  ::openfl::display::GraphicsPath */ ,(int)offsetof(ChoiceBox_obj,path),HX_("path",a5,e5,51,4a)},
	{::hx::fsObject /*  ::openfl::display::GraphicsStroke */ ,(int)offsetof(ChoiceBox_obj,lineStyle),HX_("lineStyle",9d,a8,18,cb)},
	{::hx::fsObject /*  ::openfl::_Vector::ObjectVector */ ,(int)offsetof(ChoiceBox_obj,graphicsData),HX_("graphicsData",95,3c,58,41)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *ChoiceBox_obj_sStaticStorageInfo = 0;
#endif

static ::String ChoiceBox_obj_sMemberFields[] = {
	HX_("labels",ff,27,7d,49),
	HX_("values",e2,03,b7,4f),
	HX_("selectedIndex",b7,76,56,b4),
	HX_("labelText",c1,10,52,5e),
	HX_("over",54,91,b8,49),
	HX_("overLineFill",0b,de,fe,0f),
	HX_("normalLineFill",de,49,89,3f),
	HX_("path",a5,e5,51,4a),
	HX_("lineStyle",9d,a8,18,cb),
	HX_("graphicsData",95,3c,58,41),
	HX_("setValue",6f,e8,ec,3f),
	HX_("value",71,7f,b8,31),
	HX_("drawBackground",12,71,27,09),
	HX_("setSelected",1d,f4,cd,e1),
	HX_("setText",6f,0d,7e,12),
	HX_("onMouseOver",fa,2c,50,18),
	HX_("onRollOut",b2,b1,bc,34),
	HX_("onClick",a9,1a,9c,de),
	::String(null()) };

::hx::Class ChoiceBox_obj::__mClass;

void ChoiceBox_obj::__register()
{
	ChoiceBox_obj _hx_dummy;
	ChoiceBox_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("ui.options.ChoiceBox",60,ff,ce,1c);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ChoiceBox_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ChoiceBox_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ChoiceBox_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ChoiceBox_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace ui
} // end namespace options
