// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_ui_TextBoxLine
#include <ui/TextBoxLine.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_ec3a3b4dfdd2ae02_4_new,"ui.TextBoxLine","new",0xdbc7da2a,"ui.TextBoxLine.new","ui/TextBoxLine.hx",4,0x490db847)
namespace ui{

void TextBoxLine_obj::__construct(int time,::String name,::String __o_text,::String __o_recipient,::hx::Null< bool >  __o_toMe,::hx::Null< unsigned int >  __o_nameColor,::hx::Null< unsigned int >  __o_textColor){
            		::String text = __o_text;
            		if (::hx::IsNull(__o_text)) text = HX_("",00,00,00,00);
            		::String recipient = __o_recipient;
            		if (::hx::IsNull(__o_recipient)) recipient = HX_("",00,00,00,00);
            		bool toMe = __o_toMe.Default(false);
            		unsigned int nameColor = __o_nameColor.Default(16777215);
            		unsigned int textColor = __o_textColor.Default(16777215);
            	HX_STACKFRAME(&_hx_pos_ec3a3b4dfdd2ae02_4_new)
HXLINE(  11)		this->textColor = ( (unsigned int)(16777215) );
HXLINE(  10)		this->nameColor = ( (unsigned int)(16777215) );
HXLINE(   9)		this->text = HX_("",00,00,00,00);
HXLINE(   8)		this->toMe = false;
HXLINE(   7)		this->recipient = HX_("",00,00,00,00);
HXLINE(   6)		this->name = HX_("",00,00,00,00);
HXLINE(   5)		this->time = 0;
HXLINE(  15)		this->time = time;
HXLINE(  16)		this->name = name;
HXLINE(  17)		this->recipient = recipient;
HXLINE(  18)		this->toMe = toMe;
HXLINE(  19)		this->text = text;
HXLINE(  20)		this->nameColor = nameColor;
HXLINE(  21)		this->textColor = textColor;
            	}

Dynamic TextBoxLine_obj::__CreateEmpty() { return new TextBoxLine_obj; }

void *TextBoxLine_obj::_hx_vtable = 0;

Dynamic TextBoxLine_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< TextBoxLine_obj > _hx_result = new TextBoxLine_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3],inArgs[4],inArgs[5],inArgs[6]);
	return _hx_result;
}

bool TextBoxLine_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x2474f436;
}


TextBoxLine_obj::TextBoxLine_obj()
{
}

void TextBoxLine_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(TextBoxLine);
	HX_MARK_MEMBER_NAME(time,"time");
	HX_MARK_MEMBER_NAME(name,"name");
	HX_MARK_MEMBER_NAME(recipient,"recipient");
	HX_MARK_MEMBER_NAME(toMe,"toMe");
	HX_MARK_MEMBER_NAME(text,"text");
	HX_MARK_MEMBER_NAME(nameColor,"nameColor");
	HX_MARK_MEMBER_NAME(textColor,"textColor");
	HX_MARK_END_CLASS();
}

void TextBoxLine_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(time,"time");
	HX_VISIT_MEMBER_NAME(name,"name");
	HX_VISIT_MEMBER_NAME(recipient,"recipient");
	HX_VISIT_MEMBER_NAME(toMe,"toMe");
	HX_VISIT_MEMBER_NAME(text,"text");
	HX_VISIT_MEMBER_NAME(nameColor,"nameColor");
	HX_VISIT_MEMBER_NAME(textColor,"textColor");
}

::hx::Val TextBoxLine_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"time") ) { return ::hx::Val( time ); }
		if (HX_FIELD_EQ(inName,"name") ) { return ::hx::Val( name ); }
		if (HX_FIELD_EQ(inName,"toMe") ) { return ::hx::Val( toMe ); }
		if (HX_FIELD_EQ(inName,"text") ) { return ::hx::Val( text ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"recipient") ) { return ::hx::Val( recipient ); }
		if (HX_FIELD_EQ(inName,"nameColor") ) { return ::hx::Val( nameColor ); }
		if (HX_FIELD_EQ(inName,"textColor") ) { return ::hx::Val( textColor ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val TextBoxLine_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"time") ) { time=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"name") ) { name=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"toMe") ) { toMe=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"text") ) { text=inValue.Cast< ::String >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"recipient") ) { recipient=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"nameColor") ) { nameColor=inValue.Cast< unsigned int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"textColor") ) { textColor=inValue.Cast< unsigned int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void TextBoxLine_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("time",0d,cc,fc,4c));
	outFields->push(HX_("name",4b,72,ff,48));
	outFields->push(HX_("recipient",d9,fb,42,53));
	outFields->push(HX_("toMe",b3,3d,01,4d));
	outFields->push(HX_("text",ad,cc,f9,4c));
	outFields->push(HX_("nameColor",18,3f,11,44));
	outFields->push(HX_("textColor",76,01,4a,e3));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo TextBoxLine_obj_sMemberStorageInfo[] = {
	{::hx::fsInt,(int)offsetof(TextBoxLine_obj,time),HX_("time",0d,cc,fc,4c)},
	{::hx::fsString,(int)offsetof(TextBoxLine_obj,name),HX_("name",4b,72,ff,48)},
	{::hx::fsString,(int)offsetof(TextBoxLine_obj,recipient),HX_("recipient",d9,fb,42,53)},
	{::hx::fsBool,(int)offsetof(TextBoxLine_obj,toMe),HX_("toMe",b3,3d,01,4d)},
	{::hx::fsString,(int)offsetof(TextBoxLine_obj,text),HX_("text",ad,cc,f9,4c)},
	{::hx::fsUnknown /* unsigned int */ ,(int)offsetof(TextBoxLine_obj,nameColor),HX_("nameColor",18,3f,11,44)},
	{::hx::fsUnknown /* unsigned int */ ,(int)offsetof(TextBoxLine_obj,textColor),HX_("textColor",76,01,4a,e3)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *TextBoxLine_obj_sStaticStorageInfo = 0;
#endif

static ::String TextBoxLine_obj_sMemberFields[] = {
	HX_("time",0d,cc,fc,4c),
	HX_("name",4b,72,ff,48),
	HX_("recipient",d9,fb,42,53),
	HX_("toMe",b3,3d,01,4d),
	HX_("text",ad,cc,f9,4c),
	HX_("nameColor",18,3f,11,44),
	HX_("textColor",76,01,4a,e3),
	::String(null()) };

::hx::Class TextBoxLine_obj::__mClass;

void TextBoxLine_obj::__register()
{
	TextBoxLine_obj _hx_dummy;
	TextBoxLine_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("ui.TextBoxLine",38,3d,b9,bc);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(TextBoxLine_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< TextBoxLine_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TextBoxLine_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TextBoxLine_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace ui
