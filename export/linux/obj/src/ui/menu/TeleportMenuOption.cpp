// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_objects_GameObject
#include <objects/GameObject.h>
#endif
#ifndef INCLUDED_objects_Player
#include <objects/Player.h>
#endif
#ifndef INCLUDED_openfl_display_BitmapData
#include <openfl/display/BitmapData.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_MouseEvent
#include <openfl/events/MouseEvent.h>
#endif
#ifndef INCLUDED_openfl_geom_ColorTransform
#include <openfl/geom/ColorTransform.h>
#endif
#ifndef INCLUDED_openfl_text_TextField
#include <openfl/text/TextField.h>
#endif
#ifndef INCLUDED_ui_SimpleText
#include <ui/SimpleText.h>
#endif
#ifndef INCLUDED_ui_menu_MenuOption
#include <ui/menu/MenuOption.h>
#endif
#ifndef INCLUDED_ui_menu_TeleportMenuOption
#include <ui/menu/TeleportMenuOption.h>
#endif
#ifndef INCLUDED_util_AssetLibrary
#include <util/AssetLibrary.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_65e27a0c9432b001_10_new,"ui.menu.TeleportMenuOption","new",0xcb29ad66,"ui.menu.TeleportMenuOption.new","ui/menu/TeleportMenuOption.hx",10,0xccc6886a)
HX_LOCAL_STACK_FRAME(_hx_pos_65e27a0c9432b001_33_onMouseOver,"ui.menu.TeleportMenuOption","onMouseOver",0x99738000,"ui.menu.TeleportMenuOption.onMouseOver","ui/menu/TeleportMenuOption.hx",33,0xccc6886a)
HX_LOCAL_STACK_FRAME(_hx_pos_65e27a0c9432b001_37_onMouseOut,"ui.menu.TeleportMenuOption","onMouseOut",0xcf532b62,"ui.menu.TeleportMenuOption.onMouseOut","ui/menu/TeleportMenuOption.hx",37,0xccc6886a)
HX_LOCAL_STACK_FRAME(_hx_pos_65e27a0c9432b001_41_onAddedToStage,"ui.menu.TeleportMenuOption","onAddedToStage",0xadae56dc,"ui.menu.TeleportMenuOption.onAddedToStage","ui/menu/TeleportMenuOption.hx",41,0xccc6886a)
HX_LOCAL_STACK_FRAME(_hx_pos_65e27a0c9432b001_45_onRemovedFromStage,"ui.menu.TeleportMenuOption","onRemovedFromStage",0xfdf5862d,"ui.menu.TeleportMenuOption.onRemovedFromStage","ui/menu/TeleportMenuOption.hx",45,0xccc6886a)
HX_LOCAL_STACK_FRAME(_hx_pos_65e27a0c9432b001_48_onEnterFrame,"ui.menu.TeleportMenuOption","onEnterFrame",0x5858f82e,"ui.menu.TeleportMenuOption.onEnterFrame","ui/menu/TeleportMenuOption.hx",48,0xccc6886a)
HX_LOCAL_STACK_FRAME(_hx_pos_65e27a0c9432b001_11_boot,"ui.menu.TeleportMenuOption","boot",0xf1670c6c,"ui.menu.TeleportMenuOption.boot","ui/menu/TeleportMenuOption.hx",11,0xccc6886a)
namespace ui{
namespace menu{

void TeleportMenuOption_obj::__construct( ::objects::Player player){
            	HX_GC_STACKFRAME(&_hx_pos_65e27a0c9432b001_10_new)
HXLINE(  16)		this->barTextOrigWidth = 0;
HXLINE(  14)		this->mouseOver = false;
HXLINE(  19)		super::__construct(::util::AssetLibrary_obj::getImageFromSet(HX_("misc16",d1,10,48,56),27),16777215,HX_("Teleport",cb,5e,e5,cc));
HXLINE(  20)		this->player = player;
HXLINE(  21)		this->barText =  ::ui::SimpleText_obj::__alloc( HX_CTX ,18,16777215,false,0,0,null());
HXLINE(  22)		this->barText->setBold(true);
HXLINE(  23)		this->barText->set_text(HX_("Teleport",cb,5e,e5,cc));
HXLINE(  24)		this->barText->updateMetrics();
HXLINE(  25)		 ::ui::SimpleText _hx_tmp = this->barText;
HXDLIN(  25)		_hx_tmp->set_x(this->text->get_x());
HXLINE(  26)		 ::ui::SimpleText _hx_tmp1 = this->barText;
HXDLIN(  26)		_hx_tmp1->set_y(this->text->get_y());
HXLINE(  27)		this->barTextOrigWidth = ::Std_obj::_hx_int(this->barText->get_width());
HXLINE(  28)		this->addEventListener(HX_("addedToStage",63,22,55,0c),this->onAddedToStage_dyn(),null(),null(),null());
HXLINE(  29)		this->addEventListener(HX_("removedFromStage",34,21,76,ba),this->onRemovedFromStage_dyn(),null(),null(),null());
            	}

Dynamic TeleportMenuOption_obj::__CreateEmpty() { return new TeleportMenuOption_obj; }

void *TeleportMenuOption_obj::_hx_vtable = 0;

Dynamic TeleportMenuOption_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< TeleportMenuOption_obj > _hx_result = new TeleportMenuOption_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool TeleportMenuOption_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x19e0729a) {
		if (inClassId<=(int)0x0c89e854) {
			if (inClassId<=(int)0x0330636f) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0330636f;
			} else {
				return inClassId==(int)0x0c89e854;
			}
		} else {
			return inClassId==(int)0x0cae573b || inClassId==(int)0x19e0729a;
		}
	} else {
		if (inClassId<=(int)0x4af7dd8e) {
			return inClassId==(int)0x1f4df417 || inClassId==(int)0x4af7dd8e;
		} else {
			return inClassId==(int)0x6b353933;
		}
	}
}

void TeleportMenuOption_obj::onMouseOver( ::openfl::events::MouseEvent event){
            	HX_STACKFRAME(&_hx_pos_65e27a0c9432b001_33_onMouseOver)
HXDLIN(  33)		this->mouseOver = true;
            	}


void TeleportMenuOption_obj::onMouseOut( ::openfl::events::MouseEvent event){
            	HX_STACKFRAME(&_hx_pos_65e27a0c9432b001_37_onMouseOut)
HXDLIN(  37)		this->mouseOver = false;
            	}


void TeleportMenuOption_obj::onAddedToStage( ::openfl::events::Event event){
            	HX_STACKFRAME(&_hx_pos_65e27a0c9432b001_41_onAddedToStage)
HXDLIN(  41)		this->addEventListener(HX_("enterFrame",f5,03,50,02),this->onEnterFrame_dyn(),null(),null(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(TeleportMenuOption_obj,onAddedToStage,(void))

void TeleportMenuOption_obj::onRemovedFromStage( ::openfl::events::Event event){
            	HX_STACKFRAME(&_hx_pos_65e27a0c9432b001_45_onRemovedFromStage)
HXDLIN(  45)		this->removeEventListener(HX_("enterFrame",f5,03,50,02),this->onEnterFrame_dyn(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(TeleportMenuOption_obj,onRemovedFromStage,(void))

void TeleportMenuOption_obj::onEnterFrame( ::openfl::events::Event event){
            	HX_STACKFRAME(&_hx_pos_65e27a0c9432b001_48_onEnterFrame)
HXLINE(  49)		int msUtilTeleport = this->player->msUntilTeleport();
HXLINE(  50)		if ((msUtilTeleport > 0)) {
HXLINE(  51)			if (!(this->contains(this->barText))) {
HXLINE(  52)				this->addChild(this->barText);
            			}
HXLINE(  54)			this->barText->set_width((( (Float)(this->barTextOrigWidth) ) * (( (Float)(1) ) - (( (Float)(msUtilTeleport) ) / ( (Float)(10000) )))));
HXLINE(  55)			this->setColorTransform(::ui::menu::TeleportMenuOption_obj::inactiveCT);
            		}
            		else {
HXLINE(  57)			if (this->contains(this->barText)) {
HXLINE(  58)				this->removeChild(this->barText);
            			}
HXLINE(  60)			if (this->mouseOver) {
HXLINE(  61)				this->setColorTransform(::ui::menu::MenuOption_obj::mouseOverCT);
            			}
            			else {
HXLINE(  63)				this->setColorTransform(null());
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(TeleportMenuOption_obj,onEnterFrame,(void))

 ::openfl::geom::ColorTransform TeleportMenuOption_obj::inactiveCT;


::hx::ObjectPtr< TeleportMenuOption_obj > TeleportMenuOption_obj::__new( ::objects::Player player) {
	::hx::ObjectPtr< TeleportMenuOption_obj > __this = new TeleportMenuOption_obj();
	__this->__construct(player);
	return __this;
}

::hx::ObjectPtr< TeleportMenuOption_obj > TeleportMenuOption_obj::__alloc(::hx::Ctx *_hx_ctx, ::objects::Player player) {
	TeleportMenuOption_obj *__this = (TeleportMenuOption_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(TeleportMenuOption_obj), true, "ui.menu.TeleportMenuOption"));
	*(void **)__this = TeleportMenuOption_obj::_hx_vtable;
	__this->__construct(player);
	return __this;
}

TeleportMenuOption_obj::TeleportMenuOption_obj()
{
}

void TeleportMenuOption_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(TeleportMenuOption);
	HX_MARK_MEMBER_NAME(player,"player");
	HX_MARK_MEMBER_NAME(mouseOver,"mouseOver");
	HX_MARK_MEMBER_NAME(barText,"barText");
	HX_MARK_MEMBER_NAME(barTextOrigWidth,"barTextOrigWidth");
	 ::ui::menu::MenuOption_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void TeleportMenuOption_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(player,"player");
	HX_VISIT_MEMBER_NAME(mouseOver,"mouseOver");
	HX_VISIT_MEMBER_NAME(barText,"barText");
	HX_VISIT_MEMBER_NAME(barTextOrigWidth,"barTextOrigWidth");
	 ::ui::menu::MenuOption_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val TeleportMenuOption_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"player") ) { return ::hx::Val( player ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"barText") ) { return ::hx::Val( barText ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"mouseOver") ) { return ::hx::Val( mouseOver ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"onMouseOut") ) { return ::hx::Val( onMouseOut_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"onMouseOver") ) { return ::hx::Val( onMouseOver_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"onEnterFrame") ) { return ::hx::Val( onEnterFrame_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"onAddedToStage") ) { return ::hx::Val( onAddedToStage_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"barTextOrigWidth") ) { return ::hx::Val( barTextOrigWidth ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"onRemovedFromStage") ) { return ::hx::Val( onRemovedFromStage_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool TeleportMenuOption_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"inactiveCT") ) { outValue = ( inactiveCT ); return true; }
	}
	return false;
}

::hx::Val TeleportMenuOption_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"player") ) { player=inValue.Cast<  ::objects::Player >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"barText") ) { barText=inValue.Cast<  ::ui::SimpleText >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"mouseOver") ) { mouseOver=inValue.Cast< bool >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"barTextOrigWidth") ) { barTextOrigWidth=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool TeleportMenuOption_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"inactiveCT") ) { inactiveCT=ioValue.Cast<  ::openfl::geom::ColorTransform >(); return true; }
	}
	return false;
}

void TeleportMenuOption_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("player",61,eb,b8,37));
	outFields->push(HX_("mouseOver",19,4a,0d,f6));
	outFields->push(HX_("barText",20,90,56,8f));
	outFields->push(HX_("barTextOrigWidth",45,aa,3c,ee));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo TeleportMenuOption_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::objects::Player */ ,(int)offsetof(TeleportMenuOption_obj,player),HX_("player",61,eb,b8,37)},
	{::hx::fsBool,(int)offsetof(TeleportMenuOption_obj,mouseOver),HX_("mouseOver",19,4a,0d,f6)},
	{::hx::fsObject /*  ::ui::SimpleText */ ,(int)offsetof(TeleportMenuOption_obj,barText),HX_("barText",20,90,56,8f)},
	{::hx::fsInt,(int)offsetof(TeleportMenuOption_obj,barTextOrigWidth),HX_("barTextOrigWidth",45,aa,3c,ee)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo TeleportMenuOption_obj_sStaticStorageInfo[] = {
	{::hx::fsObject /*  ::openfl::geom::ColorTransform */ ,(void *) &TeleportMenuOption_obj::inactiveCT,HX_("inactiveCT",dc,42,f5,67)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static ::String TeleportMenuOption_obj_sMemberFields[] = {
	HX_("player",61,eb,b8,37),
	HX_("mouseOver",19,4a,0d,f6),
	HX_("barText",20,90,56,8f),
	HX_("barTextOrigWidth",45,aa,3c,ee),
	HX_("onMouseOver",fa,2c,50,18),
	HX_("onMouseOut",a8,bb,d4,81),
	HX_("onAddedToStage",22,82,44,36),
	HX_("onRemovedFromStage",73,cc,89,12),
	HX_("onEnterFrame",f4,a5,93,da),
	::String(null()) };

static void TeleportMenuOption_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(TeleportMenuOption_obj::inactiveCT,"inactiveCT");
};

#ifdef HXCPP_VISIT_ALLOCS
static void TeleportMenuOption_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(TeleportMenuOption_obj::inactiveCT,"inactiveCT");
};

#endif

::hx::Class TeleportMenuOption_obj::__mClass;

static ::String TeleportMenuOption_obj_sStaticFields[] = {
	HX_("inactiveCT",dc,42,f5,67),
	::String(null())
};

void TeleportMenuOption_obj::__register()
{
	TeleportMenuOption_obj _hx_dummy;
	TeleportMenuOption_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("ui.menu.TeleportMenuOption",74,c2,e9,fc);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &TeleportMenuOption_obj::__GetStatic;
	__mClass->mSetStaticField = &TeleportMenuOption_obj::__SetStatic;
	__mClass->mMarkFunc = TeleportMenuOption_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(TeleportMenuOption_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(TeleportMenuOption_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< TeleportMenuOption_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = TeleportMenuOption_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TeleportMenuOption_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TeleportMenuOption_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void TeleportMenuOption_obj::__boot()
{
{
            	HX_GC_STACKFRAME(&_hx_pos_65e27a0c9432b001_11_boot)
HXDLIN(  11)		inactiveCT =  ::openfl::geom::ColorTransform_obj::__alloc( HX_CTX ,((Float)0.329411764705882348),((Float)0.329411764705882348),((Float)0.329411764705882348),null(),null(),null(),null(),null());
            	}
}

} // end namespace ui
} // end namespace menu
