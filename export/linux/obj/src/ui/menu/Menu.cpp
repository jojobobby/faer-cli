// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_lime_app_IModule
#include <lime/app/IModule.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_Graphics
#include <openfl/display/Graphics.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_display_Stage
#include <openfl/display/Stage.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_MouseEvent
#include <openfl/events/MouseEvent.h>
#endif
#ifndef INCLUDED_openfl_filters_BitmapFilter
#include <openfl/filters/BitmapFilter.h>
#endif
#ifndef INCLUDED_openfl_filters_DropShadowFilter
#include <openfl/filters/DropShadowFilter.h>
#endif
#ifndef INCLUDED_openfl_geom_Rectangle
#include <openfl/geom/Rectangle.h>
#endif
#ifndef INCLUDED_ui_menu_Menu
#include <ui/menu/Menu.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_5358d2bd053e1be3_10_new,"ui.menu.Menu","new",0xffd71746,"ui.menu.Menu.new","ui/menu/Menu.hx",10,0xa4d4e28a)
HX_LOCAL_STACK_FRAME(_hx_pos_5358d2bd053e1be3_34_remove,"ui.menu.Menu","remove",0x35dc291e,"ui.menu.Menu.remove","ui/menu/Menu.hx",34,0xa4d4e28a)
HX_LOCAL_STACK_FRAME(_hx_pos_5358d2bd053e1be3_38_draw,"ui.menu.Menu","draw",0xd5caee5e,"ui.menu.Menu.draw","ui/menu/Menu.hx",38,0xa4d4e28a)
HX_LOCAL_STACK_FRAME(_hx_pos_5358d2bd053e1be3_45_position,"ui.menu.Menu","position",0xa1ee9803,"ui.menu.Menu.position","ui/menu/Menu.hx",45,0xa4d4e28a)
HX_LOCAL_STACK_FRAME(_hx_pos_5358d2bd053e1be3_66_onAddedToStage,"ui.menu.Menu","onAddedToStage",0x199778fc,"ui.menu.Menu.onAddedToStage","ui/menu/Menu.hx",66,0xa4d4e28a)
HX_LOCAL_STACK_FRAME(_hx_pos_5358d2bd053e1be3_73_onRemovedFromStage,"ui.menu.Menu","onRemovedFromStage",0x1eea384d,"ui.menu.Menu.onRemovedFromStage","ui/menu/Menu.hx",73,0xa4d4e28a)
HX_LOCAL_STACK_FRAME(_hx_pos_5358d2bd053e1be3_78_onEnterFrame,"ui.menu.Menu","onEnterFrame",0x725f524e,"ui.menu.Menu.onEnterFrame","ui/menu/Menu.hx",78,0xa4d4e28a)
HX_LOCAL_STACK_FRAME(_hx_pos_5358d2bd053e1be3_103_onRollOut,"ui.menu.Menu","onRollOut",0x73412918,"ui.menu.Menu.onRollOut","ui/menu/Menu.hx",103,0xa4d4e28a)
namespace ui{
namespace menu{

void Menu_obj::__construct(int background,int outline){
            	HX_GC_STACKFRAME(&_hx_pos_5358d2bd053e1be3_10_new)
HXLINE(  13)		this->yOffset = 0;
HXLINE(  12)		this->outline = 0;
HXLINE(  11)		this->background = 0;
HXLINE(  16)		super::__construct();
HXLINE(  18)		this->background = background;
HXLINE(  19)		this->outline = outline;
HXLINE(  20)		this->yOffset = 40;
HXLINE(  21)		this->set_filters(::Array_obj< ::Dynamic>::__new(1)->init(0, ::openfl::filters::DropShadowFilter_obj::__alloc( HX_CTX ,0,0,0,1,16,16,null(),null(),null(),null(),null())));
HXLINE(  22)		this->addEventListener(HX_("addedToStage",63,22,55,0c),this->onAddedToStage_dyn(),null(),null(),null());
HXLINE(  23)		this->addEventListener(HX_("removedFromStage",34,21,76,ba),this->onRemovedFromStage_dyn(),null(),null(),null());
            	}

Dynamic Menu_obj::__CreateEmpty() { return new Menu_obj; }

void *Menu_obj::_hx_vtable = 0;

Dynamic Menu_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Menu_obj > _hx_result = new Menu_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool Menu_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x0c89e854) {
		if (inClassId<=(int)0x05ec0532) {
			if (inClassId<=(int)0x0330636f) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0330636f;
			} else {
				return inClassId==(int)0x05ec0532;
			}
		} else {
			return inClassId==(int)0x0c89e854;
		}
	} else {
		if (inClassId<=(int)0x4af7dd8e) {
			return inClassId==(int)0x1f4df417 || inClassId==(int)0x4af7dd8e;
		} else {
			return inClassId==(int)0x6b353933;
		}
	}
}

void Menu_obj::remove(){
            	HX_STACKFRAME(&_hx_pos_5358d2bd053e1be3_34_remove)
HXDLIN(  34)		if (::hx::IsNotNull( this->parent )) {
HXLINE(  35)			this->parent->removeChild(::hx::ObjectPtr<OBJ_>(this));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(Menu_obj,remove,(void))

void Menu_obj::draw(){
            	HX_STACKFRAME(&_hx_pos_5358d2bd053e1be3_38_draw)
HXLINE(  39)		this->get_graphics()->clear();
HXLINE(  40)		this->get_graphics()->lineStyle(1,this->outline,null(),null(),null(),null(),null(),null());
HXLINE(  41)		this->get_graphics()->beginFill(this->background,1);
HXLINE(  42)		 ::openfl::display::Graphics _hx_tmp = this->get_graphics();
HXDLIN(  42)		int _hx_tmp1 = ::Std_obj::_hx_int(::Math_obj::max(( (Float)(154) ),(this->get_width() + 12)));
HXDLIN(  42)		_hx_tmp->drawRect(( (Float)(-6) ),( (Float)(-6) ),( (Float)(_hx_tmp1) ),( (Float)(::Std_obj::_hx_int((this->get_height() + 12))) ));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Menu_obj,draw,(void))

void Menu_obj::position(){
            	HX_STACKFRAME(&_hx_pos_5358d2bd053e1be3_45_position)
HXLINE(  46)		if (::hx::IsNull( this->stage )) {
HXLINE(  47)			return;
            		}
HXLINE(  49)		Float _hx_tmp = this->stage->get_mouseX();
HXDLIN(  49)		if ((_hx_tmp < (( (Float)(this->stage->stageWidth) ) / ( (Float)(2) )))) {
HXLINE(  50)			this->set_x((this->stage->get_mouseX() + 12));
            		}
            		else {
HXLINE(  52)			Float _hx_tmp1 = this->stage->get_mouseX();
HXDLIN(  52)			this->set_x(((_hx_tmp1 - this->get_width()) - ( (Float)(1) )));
            		}
HXLINE(  54)		if ((this->get_x() < 12)) {
HXLINE(  55)			this->set_x(( (Float)(12) ));
            		}
HXLINE(  57)		Float _hx_tmp2 = this->stage->get_mouseY();
HXDLIN(  57)		if ((_hx_tmp2 < (( (Float)(this->stage->stageHeight) ) / ( (Float)(3) )))) {
HXLINE(  58)			this->set_y((this->stage->get_mouseY() + 12));
            		}
            		else {
HXLINE(  60)			Float _hx_tmp3 = this->stage->get_mouseY();
HXDLIN(  60)			this->set_y(((_hx_tmp3 - this->get_height()) - ( (Float)(1) )));
            		}
HXLINE(  62)		if ((this->get_y() < 12)) {
HXLINE(  63)			this->set_y(( (Float)(12) ));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(Menu_obj,position,(void))

void Menu_obj::onAddedToStage( ::openfl::events::Event _){
            	HX_STACKFRAME(&_hx_pos_5358d2bd053e1be3_66_onAddedToStage)
HXLINE(  67)		this->draw();
HXLINE(  68)		this->position();
HXLINE(  69)		this->addEventListener(HX_("enterFrame",f5,03,50,02),this->onEnterFrame_dyn(),null(),null(),null());
HXLINE(  70)		this->addEventListener(HX_("rollOut",11,f9,11,5d),this->onRollOut_dyn(),null(),null(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(Menu_obj,onAddedToStage,(void))

void Menu_obj::onRemovedFromStage( ::openfl::events::Event _){
            	HX_STACKFRAME(&_hx_pos_5358d2bd053e1be3_73_onRemovedFromStage)
HXLINE(  74)		this->removeEventListener(HX_("enterFrame",f5,03,50,02),this->onEnterFrame_dyn(),null());
HXLINE(  75)		this->removeEventListener(HX_("rollOut",11,f9,11,5d),this->onRollOut_dyn(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(Menu_obj,onRemovedFromStage,(void))

void Menu_obj::onEnterFrame( ::openfl::events::Event _){
            	HX_STACKFRAME(&_hx_pos_5358d2bd053e1be3_78_onEnterFrame)
HXLINE(  79)		if (::hx::IsNull( this->stage )) {
HXLINE(  80)			return;
            		}
HXLINE(  82)		 ::openfl::geom::Rectangle rect = this->getRect(this->stage);
HXLINE(  83)		Float cX = this->get_x();
HXLINE(  84)		Float cY = this->get_y();
HXLINE(  85)		if ((cX < rect->x)) {
HXLINE(  86)			cX = rect->x;
            		}
            		else {
HXLINE(  87)			if ((cX > rect->get_right())) {
HXLINE(  88)				cX = rect->get_right();
            			}
            		}
HXLINE(  90)		if ((cY < rect->y)) {
HXLINE(  91)			cY = rect->y;
            		}
            		else {
HXLINE(  92)			if ((cY > rect->get_bottom())) {
HXLINE(  93)				cY = rect->get_bottom();
            			}
            		}
HXLINE(  95)		bool _hx_tmp;
HXDLIN(  95)		if ((cX == this->get_x())) {
HXLINE(  95)			_hx_tmp = (cY == this->get_y());
            		}
            		else {
HXLINE(  95)			_hx_tmp = false;
            		}
HXDLIN(  95)		if (_hx_tmp) {
HXLINE(  96)			return;
            		}
HXLINE(  98)		Float dX = (this->get_x() - cX);
HXDLIN(  98)		Float dY = (this->get_y() - cY);
HXDLIN(  98)		if ((((dX * dX) + (dY * dY)) > 1600)) {
HXLINE(  99)			this->remove();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Menu_obj,onEnterFrame,(void))

void Menu_obj::onRollOut( ::openfl::events::Event _){
            	HX_STACKFRAME(&_hx_pos_5358d2bd053e1be3_103_onRollOut)
HXDLIN( 103)		this->remove();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Menu_obj,onRollOut,(void))


::hx::ObjectPtr< Menu_obj > Menu_obj::__new(int background,int outline) {
	::hx::ObjectPtr< Menu_obj > __this = new Menu_obj();
	__this->__construct(background,outline);
	return __this;
}

::hx::ObjectPtr< Menu_obj > Menu_obj::__alloc(::hx::Ctx *_hx_ctx,int background,int outline) {
	Menu_obj *__this = (Menu_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Menu_obj), true, "ui.menu.Menu"));
	*(void **)__this = Menu_obj::_hx_vtable;
	__this->__construct(background,outline);
	return __this;
}

Menu_obj::Menu_obj()
{
}

::hx::Val Menu_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"draw") ) { return ::hx::Val( draw_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"remove") ) { return ::hx::Val( remove_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"outline") ) { return ::hx::Val( outline ); }
		if (HX_FIELD_EQ(inName,"yOffset") ) { return ::hx::Val( yOffset ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"position") ) { return ::hx::Val( position_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"onRollOut") ) { return ::hx::Val( onRollOut_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"background") ) { return ::hx::Val( background ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"onEnterFrame") ) { return ::hx::Val( onEnterFrame_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"onAddedToStage") ) { return ::hx::Val( onAddedToStage_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"onRemovedFromStage") ) { return ::hx::Val( onRemovedFromStage_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val Menu_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"outline") ) { outline=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"yOffset") ) { yOffset=inValue.Cast< int >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"background") ) { background=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Menu_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("background",ee,93,1d,26));
	outFields->push(HX_("outline",82,17,be,e1));
	outFields->push(HX_("yOffset",ec,2c,79,3c));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Menu_obj_sMemberStorageInfo[] = {
	{::hx::fsInt,(int)offsetof(Menu_obj,background),HX_("background",ee,93,1d,26)},
	{::hx::fsInt,(int)offsetof(Menu_obj,outline),HX_("outline",82,17,be,e1)},
	{::hx::fsInt,(int)offsetof(Menu_obj,yOffset),HX_("yOffset",ec,2c,79,3c)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Menu_obj_sStaticStorageInfo = 0;
#endif

static ::String Menu_obj_sMemberFields[] = {
	HX_("background",ee,93,1d,26),
	HX_("outline",82,17,be,e1),
	HX_("yOffset",ec,2c,79,3c),
	HX_("remove",44,9c,88,04),
	HX_("draw",04,2c,70,42),
	HX_("position",a9,a0,fa,ca),
	HX_("onAddedToStage",22,82,44,36),
	HX_("onRemovedFromStage",73,cc,89,12),
	HX_("onEnterFrame",f4,a5,93,da),
	HX_("onRollOut",b2,b1,bc,34),
	::String(null()) };

::hx::Class Menu_obj::__mClass;

void Menu_obj::__register()
{
	Menu_obj _hx_dummy;
	Menu_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("ui.menu.Menu",54,bc,64,2c);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Menu_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Menu_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Menu_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Menu_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace ui
} // end namespace menu
