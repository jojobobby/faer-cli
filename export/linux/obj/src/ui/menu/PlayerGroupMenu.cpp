// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_Global
#include <Global.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_game_GameSprite
#include <game/GameSprite.h>
#endif
#ifndef INCLUDED_map_Map
#include <map/Map.h>
#endif
#ifndef INCLUDED_objects_GameObject
#include <objects/GameObject.h>
#endif
#ifndef INCLUDED_objects_Player
#include <objects/Player.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Shape
#include <openfl/display/Shape.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_MouseEvent
#include <openfl/events/MouseEvent.h>
#endif
#ifndef INCLUDED_ui_GameObjectListItem
#include <ui/GameObjectListItem.h>
#endif
#ifndef INCLUDED_ui_LineBreakDesign
#include <ui/LineBreakDesign.h>
#endif
#ifndef INCLUDED_ui_TextBox
#include <ui/TextBox.h>
#endif
#ifndef INCLUDED_ui_menu_Menu
#include <ui/menu/Menu.h>
#endif
#ifndef INCLUDED_ui_menu_MenuOption
#include <ui/menu/MenuOption.h>
#endif
#ifndef INCLUDED_ui_menu_PlayerGroupMenu
#include <ui/menu/PlayerGroupMenu.h>
#endif
#ifndef INCLUDED_ui_menu_TeleportMenuOption
#include <ui/menu/TeleportMenuOption.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_799aa8f92de4c699_17_new,"ui.menu.PlayerGroupMenu","new",0x5c8f613a,"ui.menu.PlayerGroupMenu.new","ui/menu/PlayerGroupMenu.hx",17,0xc65e17d6)
HX_LOCAL_STACK_FRAME(_hx_pos_799aa8f92de4c699_47_onTeleport,"ui.menu.PlayerGroupMenu","onTeleport",0x57361550,"ui.menu.PlayerGroupMenu.onTeleport","ui/menu/PlayerGroupMenu.hx",47,0xc65e17d6)
namespace ui{
namespace menu{

void PlayerGroupMenu_obj::__construct( ::map::Map map,::Array< ::Dynamic> players){
            	HX_GC_STACKFRAME(&_hx_pos_799aa8f92de4c699_17_new)
HXLINE(  19)		 ::ui::GameObjectListItem playerPlanel = null();
HXLINE(  20)		super::__construct(3552822,16777215);
HXLINE(  21)		this->map = map;
HXLINE(  22)		if ((players->length > 0)) {
HXLINE(  23)			this->players = players->copy();
            		}
            		else {
HXLINE(  24)			this->players->resize(0);
            		}
HXLINE(  25)		int yVal = 4;
HXLINE(  26)		if (this->map->allowPlayerTeleport) {
HXLINE(  27)			this->teleportOption =  ::ui::menu::TeleportMenuOption_obj::__alloc( HX_CTX ,this->map->player);
HXLINE(  28)			this->teleportOption->set_x(( (Float)(8) ));
HXLINE(  29)			this->teleportOption->set_y(( (Float)(8) ));
HXLINE(  30)			this->teleportOption->addEventListener(HX_("click",48,7c,5e,48),this->onTeleport_dyn(),null(),null(),null());
HXLINE(  31)			this->addChild(this->teleportOption);
HXLINE(  32)			this->lineBreakDesign =  ::ui::LineBreakDesign_obj::__alloc( HX_CTX ,::Std_obj::_hx_int((this->get_width() - ( (Float)(24) ))),1842204);
HXLINE(  33)			this->lineBreakDesign->set_x(( (Float)(6) ));
HXLINE(  34)			this->lineBreakDesign->set_y(( (Float)(40) ));
HXLINE(  35)			this->addChild(this->lineBreakDesign);
HXLINE(  36)			yVal = 52;
            		}
HXLINE(  38)		{
HXLINE(  38)			int _g = 0;
HXDLIN(  38)			::Array< ::Dynamic> _g1 = this->players;
HXDLIN(  38)			while((_g < _g1->length)){
HXLINE(  38)				 ::objects::Player player = _g1->__get(_g).StaticCast<  ::objects::Player >();
HXDLIN(  38)				_g = (_g + 1);
HXLINE(  39)				playerPlanel =  ::ui::GameObjectListItem_obj::__alloc( HX_CTX ,11776947,true,player);
HXLINE(  40)				playerPlanel->set_x(( (Float)(0) ));
HXLINE(  41)				playerPlanel->set_y(( (Float)(yVal) ));
HXLINE(  42)				this->addChild(playerPlanel);
HXLINE(  43)				yVal = (yVal + 32);
            			}
            		}
            	}

Dynamic PlayerGroupMenu_obj::__CreateEmpty() { return new PlayerGroupMenu_obj; }

void *PlayerGroupMenu_obj::_hx_vtable = 0;

Dynamic PlayerGroupMenu_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< PlayerGroupMenu_obj > _hx_result = new PlayerGroupMenu_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool PlayerGroupMenu_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1f4df417) {
		if (inClassId<=(int)0x05ec0532) {
			if (inClassId<=(int)0x0330636f) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0330636f;
			} else {
				return inClassId==(int)0x05ec0532;
			}
		} else {
			return inClassId==(int)0x0c89e854 || inClassId==(int)0x1f4df417;
		}
	} else {
		if (inClassId<=(int)0x4af7dd8e) {
			return inClassId==(int)0x3dfac42a || inClassId==(int)0x4af7dd8e;
		} else {
			return inClassId==(int)0x6b353933;
		}
	}
}

void PlayerGroupMenu_obj::onTeleport( ::openfl::events::Event event){
            	HX_STACKFRAME(&_hx_pos_799aa8f92de4c699_47_onTeleport)
HXLINE(  49)		 ::objects::Player targetPlayer = this->players->__get(0).StaticCast<  ::objects::Player >();
HXLINE(  50)		if (::hx::IsNotNull( targetPlayer )) {
HXLINE(  51)			this->map->player->teleportTo(targetPlayer);
            		}
            		else {
HXLINE(  53)			::Global_obj::gameSprite->textBox->addText(HX_("No players are eligible for teleporting",d0,3c,41,f6),( (unsigned int)(16711680) ));
            		}
HXLINE(  55)		this->remove();
            	}


HX_DEFINE_DYNAMIC_FUNC1(PlayerGroupMenu_obj,onTeleport,(void))


::hx::ObjectPtr< PlayerGroupMenu_obj > PlayerGroupMenu_obj::__new( ::map::Map map,::Array< ::Dynamic> players) {
	::hx::ObjectPtr< PlayerGroupMenu_obj > __this = new PlayerGroupMenu_obj();
	__this->__construct(map,players);
	return __this;
}

::hx::ObjectPtr< PlayerGroupMenu_obj > PlayerGroupMenu_obj::__alloc(::hx::Ctx *_hx_ctx, ::map::Map map,::Array< ::Dynamic> players) {
	PlayerGroupMenu_obj *__this = (PlayerGroupMenu_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(PlayerGroupMenu_obj), true, "ui.menu.PlayerGroupMenu"));
	*(void **)__this = PlayerGroupMenu_obj::_hx_vtable;
	__this->__construct(map,players);
	return __this;
}

PlayerGroupMenu_obj::PlayerGroupMenu_obj()
{
}

void PlayerGroupMenu_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(PlayerGroupMenu);
	HX_MARK_MEMBER_NAME(map,"map");
	HX_MARK_MEMBER_NAME(players,"players");
	HX_MARK_MEMBER_NAME(teleportOption,"teleportOption");
	HX_MARK_MEMBER_NAME(lineBreakDesign,"lineBreakDesign");
	 ::openfl::display::Sprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void PlayerGroupMenu_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(map,"map");
	HX_VISIT_MEMBER_NAME(players,"players");
	HX_VISIT_MEMBER_NAME(teleportOption,"teleportOption");
	HX_VISIT_MEMBER_NAME(lineBreakDesign,"lineBreakDesign");
	 ::openfl::display::Sprite_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val PlayerGroupMenu_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"players") ) { return ::hx::Val( players ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"onTeleport") ) { return ::hx::Val( onTeleport_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"teleportOption") ) { return ::hx::Val( teleportOption ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"lineBreakDesign") ) { return ::hx::Val( lineBreakDesign ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val PlayerGroupMenu_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"players") ) { players=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"teleportOption") ) { teleportOption=inValue.Cast<  ::ui::menu::MenuOption >(); return inValue; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"lineBreakDesign") ) { lineBreakDesign=inValue.Cast<  ::ui::LineBreakDesign >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void PlayerGroupMenu_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("map",9c,0a,53,00));
	outFields->push(HX_("players",f2,09,15,8a));
	outFields->push(HX_("teleportOption",80,bc,7e,97));
	outFields->push(HX_("lineBreakDesign",c9,ca,e0,61));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo PlayerGroupMenu_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::map::Map */ ,(int)offsetof(PlayerGroupMenu_obj,map),HX_("map",9c,0a,53,00)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(PlayerGroupMenu_obj,players),HX_("players",f2,09,15,8a)},
	{::hx::fsObject /*  ::ui::menu::MenuOption */ ,(int)offsetof(PlayerGroupMenu_obj,teleportOption),HX_("teleportOption",80,bc,7e,97)},
	{::hx::fsObject /*  ::ui::LineBreakDesign */ ,(int)offsetof(PlayerGroupMenu_obj,lineBreakDesign),HX_("lineBreakDesign",c9,ca,e0,61)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *PlayerGroupMenu_obj_sStaticStorageInfo = 0;
#endif

static ::String PlayerGroupMenu_obj_sMemberFields[] = {
	HX_("players",f2,09,15,8a),
	HX_("teleportOption",80,bc,7e,97),
	HX_("lineBreakDesign",c9,ca,e0,61),
	HX_("onTeleport",ea,76,ea,d0),
	::String(null()) };

::hx::Class PlayerGroupMenu_obj::__mClass;

void PlayerGroupMenu_obj::__register()
{
	PlayerGroupMenu_obj _hx_dummy;
	PlayerGroupMenu_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("ui.menu.PlayerGroupMenu",48,fc,4b,cd);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(PlayerGroupMenu_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< PlayerGroupMenu_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = PlayerGroupMenu_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = PlayerGroupMenu_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace ui
} // end namespace menu
