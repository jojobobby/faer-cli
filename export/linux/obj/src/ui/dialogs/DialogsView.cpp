// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_lime_app_IModule
#include <lime/app/IModule.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_display_Stage
#include <openfl/display/Stage.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_ui_dialogs_DialogsView
#include <ui/dialogs/DialogsView.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_70708747acdcb4ef_11_new,"ui.dialogs.DialogsView","new",0xfe6a57a5,"ui.dialogs.DialogsView.new","ui/dialogs/DialogsView.hx",11,0xbcc78bed)
HX_LOCAL_STACK_FRAME(_hx_pos_70708747acdcb4ef_17_openDialog,"ui.dialogs.DialogsView","openDialog",0x94408b8d,"ui.dialogs.DialogsView.openDialog","ui/dialogs/DialogsView.hx",17,0xbcc78bed)
HX_LOCAL_STACK_FRAME(_hx_pos_70708747acdcb4ef_24_closeDialogs,"ui.dialogs.DialogsView","closeDialogs",0x4fb509ee,"ui.dialogs.DialogsView.closeDialogs","ui/dialogs/DialogsView.hx",24,0xbcc78bed)
HX_LOCAL_STACK_FRAME(_hx_pos_70708747acdcb4ef_30_removeCurrentDialog,"ui.dialogs.DialogsView","removeCurrentDialog",0xe15c0042,"ui.dialogs.DialogsView.removeCurrentDialog","ui/dialogs/DialogsView.hx",30,0xbcc78bed)
HX_LOCAL_STACK_FRAME(_hx_pos_70708747acdcb4ef_38_onRemoved,"ui.dialogs.DialogsView","onRemoved",0x8429a146,"ui.dialogs.DialogsView.onRemoved","ui/dialogs/DialogsView.hx",38,0xbcc78bed)
namespace ui{
namespace dialogs{

void DialogsView_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_70708747acdcb4ef_11_new)
HXLINE(  12)		super::__construct();
HXLINE(  14)		this->addChild((this->container =  ::openfl::display::Sprite_obj::__alloc( HX_CTX )));
            	}

Dynamic DialogsView_obj::__CreateEmpty() { return new DialogsView_obj; }

void *DialogsView_obj::_hx_vtable = 0;

Dynamic DialogsView_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< DialogsView_obj > _hx_result = new DialogsView_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool DialogsView_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x19ac03e1) {
		if (inClassId<=(int)0x0c89e854) {
			if (inClassId<=(int)0x0330636f) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0330636f;
			} else {
				return inClassId==(int)0x0c89e854;
			}
		} else {
			return inClassId==(int)0x19ac03e1;
		}
	} else {
		if (inClassId<=(int)0x4af7dd8e) {
			return inClassId==(int)0x1f4df417 || inClassId==(int)0x4af7dd8e;
		} else {
			return inClassId==(int)0x6b353933;
		}
	}
}

void DialogsView_obj::openDialog( ::openfl::display::Sprite dialog){
            	HX_STACKFRAME(&_hx_pos_70708747acdcb4ef_17_openDialog)
HXLINE(  18)		this->removeCurrentDialog();
HXLINE(  19)		this->current = dialog;
HXLINE(  20)		dialog->addEventListener(HX_("removed",a0,1f,00,f3),this->onRemoved_dyn(),null(),null(),null());
HXLINE(  21)		this->container->addChild(dialog);
            	}


HX_DEFINE_DYNAMIC_FUNC1(DialogsView_obj,openDialog,(void))

void DialogsView_obj::closeDialogs(){
            	HX_STACKFRAME(&_hx_pos_70708747acdcb4ef_24_closeDialogs)
HXLINE(  25)		this->stage->set_focus(null());
HXLINE(  26)		this->removeCurrentDialog();
            	}


HX_DEFINE_DYNAMIC_FUNC0(DialogsView_obj,closeDialogs,(void))

void DialogsView_obj::removeCurrentDialog(){
            	HX_STACKFRAME(&_hx_pos_70708747acdcb4ef_30_removeCurrentDialog)
HXDLIN(  30)		bool _hx_tmp;
HXDLIN(  30)		if (::hx::IsNotNull( this->current )) {
HXDLIN(  30)			_hx_tmp = this->container->contains(this->current);
            		}
            		else {
HXDLIN(  30)			_hx_tmp = false;
            		}
HXDLIN(  30)		if (_hx_tmp) {
HXLINE(  31)			this->current->removeEventListener(HX_("removed",a0,1f,00,f3),this->onRemoved_dyn(),null());
HXLINE(  32)			this->container->removeChild(this->current);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(DialogsView_obj,removeCurrentDialog,(void))

void DialogsView_obj::onRemoved( ::openfl::events::Event event){
            	HX_STACKFRAME(&_hx_pos_70708747acdcb4ef_38_onRemoved)
HXDLIN(  38)		if (::hx::IsInstanceEq( this->current,::hx::TCast<  ::openfl::display::Sprite >::cast(event->target) )) {
HXLINE(  39)			this->current = null();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(DialogsView_obj,onRemoved,(void))


::hx::ObjectPtr< DialogsView_obj > DialogsView_obj::__new() {
	::hx::ObjectPtr< DialogsView_obj > __this = new DialogsView_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< DialogsView_obj > DialogsView_obj::__alloc(::hx::Ctx *_hx_ctx) {
	DialogsView_obj *__this = (DialogsView_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(DialogsView_obj), true, "ui.dialogs.DialogsView"));
	*(void **)__this = DialogsView_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

DialogsView_obj::DialogsView_obj()
{
}

void DialogsView_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(DialogsView);
	HX_MARK_MEMBER_NAME(container,"container");
	HX_MARK_MEMBER_NAME(current,"current");
	 ::openfl::display::Sprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void DialogsView_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(container,"container");
	HX_VISIT_MEMBER_NAME(current,"current");
	 ::openfl::display::Sprite_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val DialogsView_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"current") ) { return ::hx::Val( current ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"container") ) { return ::hx::Val( container ); }
		if (HX_FIELD_EQ(inName,"onRemoved") ) { return ::hx::Val( onRemoved_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"openDialog") ) { return ::hx::Val( openDialog_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"closeDialogs") ) { return ::hx::Val( closeDialogs_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"removeCurrentDialog") ) { return ::hx::Val( removeCurrentDialog_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val DialogsView_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"current") ) { current=inValue.Cast<  ::openfl::display::Sprite >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"container") ) { container=inValue.Cast<  ::openfl::display::DisplayObjectContainer >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void DialogsView_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("container",41,75,73,bf));
	outFields->push(HX_("current",39,9c,e3,cb));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo DialogsView_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::openfl::display::DisplayObjectContainer */ ,(int)offsetof(DialogsView_obj,container),HX_("container",41,75,73,bf)},
	{::hx::fsObject /*  ::openfl::display::Sprite */ ,(int)offsetof(DialogsView_obj,current),HX_("current",39,9c,e3,cb)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *DialogsView_obj_sStaticStorageInfo = 0;
#endif

static ::String DialogsView_obj_sMemberFields[] = {
	HX_("container",41,75,73,bf),
	HX_("current",39,9c,e3,cb),
	HX_("openDialog",32,70,cf,fe),
	HX_("closeDialogs",d3,21,42,a7),
	HX_("removeCurrentDialog",fd,de,cf,f7),
	HX_("onRemoved",41,d8,aa,ca),
	::String(null()) };

::hx::Class DialogsView_obj::__mClass;

void DialogsView_obj::__register()
{
	DialogsView_obj _hx_dummy;
	DialogsView_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("ui.dialogs.DialogsView",33,a1,da,09);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(DialogsView_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< DialogsView_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DialogsView_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DialogsView_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace ui
} // end namespace dialogs
