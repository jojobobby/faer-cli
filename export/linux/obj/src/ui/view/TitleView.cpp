// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_0e0693b5ce2fed3b
#define INCLUDED_0e0693b5ce2fed3b
#include "discord_register.h"
#endif
#ifndef INCLUDED_4d2c8952d9865d7f
#define INCLUDED_4d2c8952d9865d7f
#include "discord_rpc.h"
#endif
#ifndef INCLUDED_Global
#include <Global.h>
#endif
#ifndef INCLUDED_Main
#include <Main.h>
#endif
#ifndef INCLUDED_account_Account
#include <account/Account.h>
#endif
#ifndef INCLUDED_account_services_UploadBehaviorTask
#include <account/services/UploadBehaviorTask.h>
#endif
#ifndef INCLUDED_account_services_UploadXmlTask
#include <account/services/UploadXmlTask.h>
#endif
#ifndef INCLUDED_account_view_AccountDetailDialog
#include <account/view/AccountDetailDialog.h>
#endif
#ifndef INCLUDED_account_view_RegisterDialog
#include <account/view/RegisterDialog.h>
#endif
#ifndef INCLUDED_core_Layers
#include <core/Layers.h>
#endif
#ifndef INCLUDED_core_PlayerModel
#include <core/PlayerModel.h>
#endif
#ifndef INCLUDED_core_ScreensView
#include <core/ScreensView.h>
#endif
#ifndef INCLUDED_game_model_GameInitData
#include <game/model/GameInitData.h>
#endif
#ifndef INCLUDED_haxe_Exception
#include <haxe/Exception.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_haxe_StackItem
#include <haxe/StackItem.h>
#endif
#ifndef INCLUDED_haxe__CallStack_CallStack_Impl_
#include <haxe/_CallStack/CallStack_Impl_.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_lib_tasks_Task
#include <lib/tasks/Task.h>
#endif
#ifndef INCLUDED_lime_app_IModule
#include <lime/app/IModule.h>
#endif
#ifndef INCLUDED_mapeditor_MapEditor
#include <mapeditor/MapEditor.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_display_Stage
#include <openfl/display/Stage.h>
#endif
#ifndef INCLUDED_openfl_events_ErrorEvent
#include <openfl/events/ErrorEvent.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IOErrorEvent
#include <openfl/events/IOErrorEvent.h>
#endif
#ifndef INCLUDED_openfl_events_TextEvent
#include <openfl/events/TextEvent.h>
#endif
#ifndef INCLUDED_openfl_net_FileFilter
#include <openfl/net/FileFilter.h>
#endif
#ifndef INCLUDED_openfl_net_FileReference
#include <openfl/net/FileReference.h>
#endif
#ifndef INCLUDED_openfl_utils_ByteArrayData
#include <openfl/utils/ByteArrayData.h>
#endif
#ifndef INCLUDED_openfl_utils_IDataInput
#include <openfl/utils/IDataInput.h>
#endif
#ifndef INCLUDED_openfl_utils_IDataOutput
#include <openfl/utils/IDataOutput.h>
#endif
#ifndef INCLUDED_screens_AccountScreen
#include <screens/AccountScreen.h>
#endif
#ifndef INCLUDED_screens_CharacterSelectionScreen
#include <screens/CharacterSelectionScreen.h>
#endif
#ifndef INCLUDED_screens_ServersScreen
#include <screens/ServersScreen.h>
#endif
#ifndef INCLUDED_screens_TitleMenuOption
#include <screens/TitleMenuOption.h>
#endif
#ifndef INCLUDED_servers_ServerModel
#include <servers/ServerModel.h>
#endif
#ifndef INCLUDED_ui_Frame
#include <ui/Frame.h>
#endif
#ifndef INCLUDED_ui_SoundIcon
#include <ui/SoundIcon.h>
#endif
#ifndef INCLUDED_ui_dialogs_Dialog
#include <ui/dialogs/Dialog.h>
#endif
#ifndef INCLUDED_ui_dialogs_DialogsView
#include <ui/dialogs/DialogsView.h>
#endif
#ifndef INCLUDED_ui_view_MapBackground
#include <ui/view/MapBackground.h>
#endif
#ifndef INCLUDED_ui_view_TitleView
#include <ui/view/TitleView.h>
#endif
#ifndef INCLUDED_util_EmptySignal
#include <util/EmptySignal.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_8c006926fe4fc5bb_46_new,"ui.view.TitleView","new",0x7ff99980,"ui.view.TitleView.new","ui/view/TitleView.hx",46,0xea828250)
HX_LOCAL_STACK_FRAME(_hx_pos_8c006926fe4fc5bb_56_onAdded,"ui.view.TitleView","onAdded",0x60124c41,"ui.view.TitleView.onAdded","ui/view/TitleView.hx",56,0xea828250)
HX_LOCAL_STACK_FRAME(_hx_pos_8c006926fe4fc5bb_81_onRemoved,"ui.view.TitleView","onRemoved",0xa0fc3961,"ui.view.TitleView.onRemoved","ui/view/TitleView.hx",81,0xea828250)
HX_LOCAL_STACK_FRAME(_hx_pos_8c006926fe4fc5bb_190_initialize,"ui.view.TitleView","initialize",0x9d9ecc30,"ui.view.TitleView.initialize","ui/view/TitleView.hx",190,0xea828250)
HX_LOCAL_STACK_FRAME(_hx_pos_8c006926fe4fc5bb_195_makeChildren,"ui.view.TitleView","makeChildren",0x1a6ac02d,"ui.view.TitleView.makeChildren","ui/view/TitleView.hx",195,0xea828250)
HX_LOCAL_STACK_FRAME(_hx_pos_8c006926fe4fc5bb_218_addChildren,"ui.view.TitleView","addChildren",0xb80a39a0,"ui.view.TitleView.addChildren","ui/view/TitleView.hx",218,0xea828250)
HX_LOCAL_STACK_FRAME(_hx_pos_8c006926fe4fc5bb_221_positionButtons,"ui.view.TitleView","positionButtons",0x876c29b8,"ui.view.TitleView.positionButtons","ui/view/TitleView.hx",221,0xea828250)
HX_LOCAL_STACK_FRAME(_hx_pos_8c006926fe4fc5bb_93_handleIntentionToPlay,"ui.view.TitleView","handleIntentionToPlay",0x70c5f173,"ui.view.TitleView.handleIntentionToPlay","ui/view/TitleView.hx",93,0xea828250)
HX_LOCAL_STACK_FRAME(_hx_pos_8c006926fe4fc5bb_99_handleIntentionToPlay,"ui.view.TitleView","handleIntentionToPlay",0x70c5f173,"ui.view.TitleView.handleIntentionToPlay","ui/view/TitleView.hx",99,0xea828250)
HX_LOCAL_STACK_FRAME(_hx_pos_8c006926fe4fc5bb_115_showServersScreen,"ui.view.TitleView","showServersScreen",0x2c24cdbf,"ui.view.TitleView.showServersScreen","ui/view/TitleView.hx",115,0xea828250)
HX_LOCAL_STACK_FRAME(_hx_pos_8c006926fe4fc5bb_119_showEditorScreen,"ui.view.TitleView","showEditorScreen",0x70a11c76,"ui.view.TitleView.showEditorScreen","ui/view/TitleView.hx",119,0xea828250)
HX_LOCAL_STACK_FRAME(_hx_pos_8c006926fe4fc5bb_123_handleIntentionToReviewAccount,"ui.view.TitleView","handleIntentionToReviewAccount",0xd620b096,"ui.view.TitleView.handleIntentionToReviewAccount","ui/view/TitleView.hx",123,0xea828250)
HX_LOCAL_STACK_FRAME(_hx_pos_8c006926fe4fc5bb_132_dispatchBehaviorRequest,"ui.view.TitleView","dispatchBehaviorRequest",0x99258063,"ui.view.TitleView.dispatchBehaviorRequest","ui/view/TitleView.hx",132,0xea828250)
HX_LOCAL_STACK_FRAME(_hx_pos_8c006926fe4fc5bb_140_dispatchBehaviorRequest,"ui.view.TitleView","dispatchBehaviorRequest",0x99258063,"ui.view.TitleView.dispatchBehaviorRequest","ui/view/TitleView.hx",140,0xea828250)
HX_LOCAL_STACK_FRAME(_hx_pos_8c006926fe4fc5bb_137_dispatchBehaviorRequest,"ui.view.TitleView","dispatchBehaviorRequest",0x99258063,"ui.view.TitleView.dispatchBehaviorRequest","ui/view/TitleView.hx",137,0xea828250)
HX_LOCAL_STACK_FRAME(_hx_pos_8c006926fe4fc5bb_131_dispatchBehaviorRequest,"ui.view.TitleView","dispatchBehaviorRequest",0x99258063,"ui.view.TitleView.dispatchBehaviorRequest","ui/view/TitleView.hx",131,0xea828250)
HX_LOCAL_STACK_FRAME(_hx_pos_8c006926fe4fc5bb_150_dispatchBehaviorRequest,"ui.view.TitleView","dispatchBehaviorRequest",0x99258063,"ui.view.TitleView.dispatchBehaviorRequest","ui/view/TitleView.hx",150,0xea828250)
HX_LOCAL_STACK_FRAME(_hx_pos_8c006926fe4fc5bb_129_dispatchBehaviorRequest,"ui.view.TitleView","dispatchBehaviorRequest",0x99258063,"ui.view.TitleView.dispatchBehaviorRequest","ui/view/TitleView.hx",129,0xea828250)
HX_LOCAL_STACK_FRAME(_hx_pos_8c006926fe4fc5bb_162_dispatchXmlRequest,"ui.view.TitleView","dispatchXmlRequest",0x69d5cc72,"ui.view.TitleView.dispatchXmlRequest","ui/view/TitleView.hx",162,0xea828250)
HX_LOCAL_STACK_FRAME(_hx_pos_8c006926fe4fc5bb_171_dispatchXmlRequest,"ui.view.TitleView","dispatchXmlRequest",0x69d5cc72,"ui.view.TitleView.dispatchXmlRequest","ui/view/TitleView.hx",171,0xea828250)
HX_LOCAL_STACK_FRAME(_hx_pos_8c006926fe4fc5bb_168_dispatchXmlRequest,"ui.view.TitleView","dispatchXmlRequest",0x69d5cc72,"ui.view.TitleView.dispatchXmlRequest","ui/view/TitleView.hx",168,0xea828250)
HX_LOCAL_STACK_FRAME(_hx_pos_8c006926fe4fc5bb_161_dispatchXmlRequest,"ui.view.TitleView","dispatchXmlRequest",0x69d5cc72,"ui.view.TitleView.dispatchXmlRequest","ui/view/TitleView.hx",161,0xea828250)
HX_LOCAL_STACK_FRAME(_hx_pos_8c006926fe4fc5bb_181_dispatchXmlRequest,"ui.view.TitleView","dispatchXmlRequest",0x69d5cc72,"ui.view.TitleView.dispatchXmlRequest","ui/view/TitleView.hx",181,0xea828250)
HX_LOCAL_STACK_FRAME(_hx_pos_8c006926fe4fc5bb_159_dispatchXmlRequest,"ui.view.TitleView","dispatchXmlRequest",0x69d5cc72,"ui.view.TitleView.dispatchXmlRequest","ui/view/TitleView.hx",159,0xea828250)
namespace ui{
namespace view{

void TitleView_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_8c006926fe4fc5bb_46_new)
HXLINE(  47)		super::__construct();
HXLINE(  49)		this->addChild( ::ui::view::MapBackground_obj::__alloc( HX_CTX ));
HXLINE(  50)		this->addChild( ::screens::AccountScreen_obj::__alloc( HX_CTX ));
HXLINE(  51)		this->makeChildren();
HXLINE(  52)		this->addChild( ::ui::SoundIcon_obj::__alloc( HX_CTX ));
HXLINE(  53)		this->addEventListener(HX_("addedToStage",63,22,55,0c),this->onAdded_dyn(),null(),null(),null());
            	}

Dynamic TitleView_obj::__CreateEmpty() { return new TitleView_obj; }

void *TitleView_obj::_hx_vtable = 0;

Dynamic TitleView_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< TitleView_obj > _hx_result = new TitleView_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool TitleView_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1f4df417) {
		if (inClassId<=(int)0x0c89e854) {
			if (inClassId<=(int)0x0330636f) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0330636f;
			} else {
				return inClassId==(int)0x0c89e854;
			}
		} else {
			return inClassId==(int)0x1f4df417;
		}
	} else {
		if (inClassId<=(int)0x4af7dd8e) {
			return inClassId==(int)0x396675c0 || inClassId==(int)0x4af7dd8e;
		} else {
			return inClassId==(int)0x6b353933;
		}
	}
}

void TitleView_obj::onAdded( ::openfl::events::Event _){
            	HX_STACKFRAME(&_hx_pos_8c006926fe4fc5bb_56_onAdded)
HXLINE(  57)		this->removeEventListener(HX_("addedToStage",63,22,55,0c),this->onAdded_dyn(),null());
HXLINE(  58)		this->addEventListener(HX_("removedFromStage",34,21,76,ba),this->onRemoved_dyn(),null(),null(),null());
HXLINE(  61)		if (::Main_obj::rpcReady) {
HXLINE(  62)			 DiscordRichPresence discordPresence = DiscordRichPresence();
HXLINE(  63)			discordPresence.state = HX_("Main Menu",e6,3a,4e,c8).utf8_str();
HXLINE(  64)			discordPresence.details = HX_("",00,00,00,00).utf8_str();
HXLINE(  65)			discordPresence.largeImageKey = HX_("logo",6b,9f,b7,47).utf8_str();
HXLINE(  66)			discordPresence.largeImageText = (HX_("v",76,00,00,00) + HX_("0.5",77,94,24,00)).utf8_str();
HXLINE(  67)			discordPresence.startTimestamp = ( (::cpp::Int64)(::Main_obj::startTime) );
HXLINE(  68)			Discord_UpdatePresence(&(discordPresence));
            		}
HXLINE(  72)		this->initialize();
HXLINE(  73)		this->playClicked->on(::ui::view::TitleView_obj::handleIntentionToPlay_dyn());
HXLINE(  74)		this->serversClicked->on(::ui::view::TitleView_obj::showServersScreen_dyn());
HXLINE(  75)		this->accountClicked->on(::ui::view::TitleView_obj::handleIntentionToReviewAccount_dyn());
HXLINE(  76)		this->editorClicked->on(::ui::view::TitleView_obj::showEditorScreen_dyn());
HXLINE(  77)		this->behaviorClicked->on(::ui::view::TitleView_obj::dispatchBehaviorRequest_dyn());
HXLINE(  78)		this->xmlClicked->on(::ui::view::TitleView_obj::dispatchXmlRequest_dyn());
            	}


HX_DEFINE_DYNAMIC_FUNC1(TitleView_obj,onAdded,(void))

void TitleView_obj::onRemoved( ::openfl::events::Event _){
            	HX_STACKFRAME(&_hx_pos_8c006926fe4fc5bb_81_onRemoved)
HXLINE(  82)		this->removeEventListener(HX_("removedFromStage",34,21,76,ba),this->onRemoved_dyn(),null());
HXLINE(  84)		this->playClicked->off(::ui::view::TitleView_obj::handleIntentionToPlay_dyn());
HXLINE(  85)		this->serversClicked->off(::ui::view::TitleView_obj::showServersScreen_dyn());
HXLINE(  86)		this->accountClicked->off(::ui::view::TitleView_obj::handleIntentionToReviewAccount_dyn());
HXLINE(  87)		this->editorClicked->off(::ui::view::TitleView_obj::showEditorScreen_dyn());
HXLINE(  88)		this->behaviorClicked->off(::ui::view::TitleView_obj::dispatchBehaviorRequest_dyn());
HXLINE(  89)		this->xmlClicked->off(::ui::view::TitleView_obj::dispatchXmlRequest_dyn());
            	}


HX_DEFINE_DYNAMIC_FUNC1(TitleView_obj,onRemoved,(void))

void TitleView_obj::initialize(){
            	HX_STACKFRAME(&_hx_pos_8c006926fe4fc5bb_190_initialize)
HXLINE( 191)		this->positionButtons();
HXLINE( 192)		this->addChildren();
            	}


HX_DEFINE_DYNAMIC_FUNC0(TitleView_obj,initialize,(void))

void TitleView_obj::makeChildren(){
            	HX_GC_STACKFRAME(&_hx_pos_8c006926fe4fc5bb_195_makeChildren)
HXLINE( 196)		this->container =  ::openfl::display::Sprite_obj::__alloc( HX_CTX );
HXLINE( 197)		this->playButton =  ::screens::TitleMenuOption_obj::__alloc( HX_CTX ,HX_("play",f4,2d,5a,4a),36,true);
HXLINE( 198)		this->playClicked = this->playButton->clicked;
HXLINE( 199)		this->container->addChild(this->playButton);
HXLINE( 200)		this->serversButton =  ::screens::TitleMenuOption_obj::__alloc( HX_CTX ,HX_("servers",50,20,2a,02),22,false);
HXLINE( 201)		this->serversClicked = this->serversButton->clicked;
HXLINE( 202)		this->container->addChild(this->serversButton);
HXLINE( 203)		this->accountButton =  ::screens::TitleMenuOption_obj::__alloc( HX_CTX ,HX_("account",ad,fc,59,a1),22,false);
HXLINE( 204)		this->accountClicked = this->accountButton->clicked;
HXLINE( 205)		this->container->addChild(this->accountButton);
HXLINE( 206)		this->editorButton =  ::screens::TitleMenuOption_obj::__alloc( HX_CTX ,HX_("editor",ad,41,dd,3b),22,false);
HXLINE( 207)		this->editorClicked = this->editorButton->clicked;
HXLINE( 208)		this->container->addChild(this->editorButton);
HXLINE( 209)		this->behaviorButton =  ::screens::TitleMenuOption_obj::__alloc( HX_CTX ,HX_("upload behaviors",c2,a0,13,16),22,false);
HXLINE( 210)		this->behaviorClicked = this->behaviorButton->clicked;
HXLINE( 211)		this->container->addChild(this->behaviorButton);
HXLINE( 212)		this->xmlButton =  ::screens::TitleMenuOption_obj::__alloc( HX_CTX ,HX_("upload xmls",3b,91,bc,4a),22,false);
HXLINE( 213)		this->xmlClicked = this->xmlButton->clicked;
HXLINE( 214)		this->container->addChild(this->xmlButton);
            	}


HX_DEFINE_DYNAMIC_FUNC0(TitleView_obj,makeChildren,(void))

void TitleView_obj::addChildren(){
            	HX_STACKFRAME(&_hx_pos_8c006926fe4fc5bb_218_addChildren)
HXDLIN( 218)		this->addChild(this->container);
            	}


HX_DEFINE_DYNAMIC_FUNC0(TitleView_obj,addChildren,(void))

void TitleView_obj::positionButtons(){
            	HX_STACKFRAME(&_hx_pos_8c006926fe4fc5bb_221_positionButtons)
HXLINE( 222)		 ::screens::TitleMenuOption _hx_tmp = this->playButton;
HXDLIN( 222)		Float _hx_tmp1 = (( (Float)(this->stage->stageWidth) ) / ( (Float)(2) ));
HXDLIN( 222)		_hx_tmp->set_x((_hx_tmp1 - (this->playButton->get_width() / ( (Float)(2) ))));
HXLINE( 223)		this->playButton->set_y(( (Float)((this->stage->stageHeight - 80)) ));
HXLINE( 224)		 ::screens::TitleMenuOption _hx_tmp2 = this->serversButton;
HXDLIN( 224)		Float _hx_tmp3 = (( (Float)(this->stage->stageWidth) ) / ( (Float)(2) ));
HXDLIN( 224)		_hx_tmp2->set_x(((_hx_tmp3 - (this->serversButton->get_width() / ( (Float)(2) ))) - ( (Float)(94) )));
HXLINE( 225)		this->serversButton->set_y(( (Float)((this->stage->stageHeight - 68)) ));
HXLINE( 226)		 ::screens::TitleMenuOption _hx_tmp4 = this->editorButton;
HXDLIN( 226)		Float _hx_tmp5 = (( (Float)(this->stage->stageWidth) ) / ( (Float)(2) ));
HXDLIN( 226)		_hx_tmp4->set_x((((_hx_tmp5 - (this->editorButton->get_width() / ( (Float)(2) ))) - ( (Float)(94) )) - ( (Float)(94) )));
HXLINE( 227)		this->editorButton->set_y(( (Float)((this->stage->stageHeight - 68)) ));
HXLINE( 228)		 ::screens::TitleMenuOption _hx_tmp6 = this->accountButton;
HXDLIN( 228)		Float _hx_tmp7 = (( (Float)(this->stage->stageWidth) ) / ( (Float)(2) ));
HXDLIN( 228)		_hx_tmp6->set_x(((_hx_tmp7 - (this->accountButton->get_width() / ( (Float)(2) ))) + 96));
HXLINE( 229)		this->accountButton->set_y(( (Float)((this->stage->stageHeight - 68)) ));
HXLINE( 230)		 ::screens::TitleMenuOption _hx_tmp8 = this->behaviorButton;
HXDLIN( 230)		Float _hx_tmp9 = (( (Float)(this->stage->stageWidth) ) / ( (Float)(2) ));
HXDLIN( 230)		_hx_tmp8->set_x((((((_hx_tmp9 - (this->behaviorButton->get_width() / ( (Float)(2) ))) - ( (Float)(94) )) - ( (Float)(94) )) - ( (Float)(94) )) - ( (Float)(40) )));
HXLINE( 231)		this->behaviorButton->set_y(( (Float)((this->stage->stageHeight - 68)) ));
HXLINE( 232)		 ::screens::TitleMenuOption _hx_tmp10 = this->xmlButton;
HXDLIN( 232)		Float _hx_tmp11 = (( (Float)(this->stage->stageWidth) ) / ( (Float)(2) ));
HXDLIN( 232)		_hx_tmp10->set_x(((((_hx_tmp11 - (this->xmlButton->get_width() / ( (Float)(2) ))) + 96) + 96) + 20));
HXLINE( 233)		this->xmlButton->set_y(( (Float)((this->stage->stageHeight - 68)) ));
            	}


HX_DEFINE_DYNAMIC_FUNC0(TitleView_obj,positionButtons,(void))

void TitleView_obj::handleIntentionToPlay(){
            	HX_GC_STACKFRAME(&_hx_pos_8c006926fe4fc5bb_93_handleIntentionToPlay)
HXDLIN(  93)		if (!(::Global_obj::serverModel->isServerAvailable())) {
            			HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            			void _hx_run( ::openfl::events::Event _){
            				HX_GC_STACKFRAME(&_hx_pos_8c006926fe4fc5bb_99_handleIntentionToPlay)
HXLINE(  99)				::Global_obj::layers->dialogs->closeDialogs();
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE(  94)			 ::ui::dialogs::Dialog dialog =  ::ui::dialogs::Dialog_obj::__alloc( HX_CTX ,((HX_("Faer is currently offline.\n\n",a3,fe,b7,43) + HX_("Visit our discord for more information:\n",45,71,62,f0)) + HX_("<font color=\"#7777EE\"><a href=\"https://discord.gg/2XdgUW29rw\">discord.gg/mUPuzKtajq</a></font>.",cf,c6,fd,1d)),HX_("Server Offline",86,d4,30,e4),HX_("Close",98,87,90,db),null());
HXLINE(  98)			dialog->addEventListener(HX_("DIALOG_BUTTON1",48,38,81,e9), ::Dynamic(new _hx_Closure_0()),null(),null(),null());
HXLINE( 101)			::Global_obj::layers->dialogs->openDialog(dialog);
            		}
            		else {
HXLINE( 104)			if ((::account::Account_obj::password == HX_("",00,00,00,00))) {
HXLINE( 105)				 ::game::model::GameInitData data =  ::game::model::GameInitData_obj::__alloc( HX_CTX );
HXLINE( 106)				data->createCharacter = true;
HXLINE( 107)				data->charId = ::Global_obj::playerModel->getNextCharId();
HXLINE( 108)				data->gameId = -2;
            			}
            			else {
HXLINE( 110)				::Global_obj::setScreenValid( ::screens::CharacterSelectionScreen_obj::__alloc( HX_CTX ));
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(TitleView_obj,handleIntentionToPlay,(void))

void TitleView_obj::showServersScreen(){
            	HX_GC_STACKFRAME(&_hx_pos_8c006926fe4fc5bb_115_showServersScreen)
HXDLIN( 115)		 ::core::ScreensView _hx_tmp = ::Global_obj::layers->screens;
HXDLIN( 115)		_hx_tmp->setScreen( ::screens::ServersScreen_obj::__alloc( HX_CTX ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(TitleView_obj,showServersScreen,(void))

void TitleView_obj::showEditorScreen(){
            	HX_GC_STACKFRAME(&_hx_pos_8c006926fe4fc5bb_119_showEditorScreen)
HXDLIN( 119)		 ::core::ScreensView _hx_tmp = ::Global_obj::layers->screens;
HXDLIN( 119)		_hx_tmp->setScreen((::Global_obj::currentEditor =  ::mapeditor::MapEditor_obj::__alloc( HX_CTX )));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(TitleView_obj,showEditorScreen,(void))

void TitleView_obj::handleIntentionToReviewAccount(){
            	HX_GC_STACKFRAME(&_hx_pos_8c006926fe4fc5bb_123_handleIntentionToReviewAccount)
HXDLIN( 123)		if ((::account::Account_obj::password != HX_("",00,00,00,00))) {
HXLINE( 124)			 ::ui::dialogs::DialogsView _hx_tmp = ::Global_obj::layers->dialogs;
HXDLIN( 124)			_hx_tmp->openDialog( ::account::view::AccountDetailDialog_obj::__alloc( HX_CTX ));
            		}
            		else {
HXLINE( 126)			 ::ui::dialogs::DialogsView _hx_tmp1 = ::Global_obj::layers->dialogs;
HXDLIN( 126)			_hx_tmp1->openDialog( ::account::view::RegisterDialog_obj::__alloc( HX_CTX ));
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(TitleView_obj,handleIntentionToReviewAccount,(void))

void TitleView_obj::dispatchBehaviorRequest(){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_4, ::openfl::net::FileReference,loadedFile) HXARGC(1)
            		void _hx_run( ::openfl::events::Event _){
            			HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::openfl::net::FileReference,loadedFile) HXARGC(1)
            			void _hx_run( ::openfl::events::Event _){
            				HX_GC_STACKFRAME(&_hx_pos_8c006926fe4fc5bb_132_dispatchBehaviorRequest)
HXLINE( 133)				::account::services::UploadBehaviorTask_obj::data = loadedFile->data->toString();
HXLINE( 134)				::account::services::UploadBehaviorTask_obj::name = loadedFile->get_name();
HXLINE( 135)				::Global_obj::uploadBehaviorTask->startTask();
            			}
            			HX_END_LOCAL_FUNC1((void))

            			HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_2) HXARGC(1)
            			void _hx_run( ::openfl::events::IOErrorEvent e){
            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            				void _hx_run( ::openfl::events::Event _){
            					HX_GC_STACKFRAME(&_hx_pos_8c006926fe4fc5bb_140_dispatchBehaviorRequest)
HXLINE( 140)					::Global_obj::layers->dialogs->closeDialogs();
            				}
            				HX_END_LOCAL_FUNC1((void))

            				HX_GC_STACKFRAME(&_hx_pos_8c006926fe4fc5bb_137_dispatchBehaviorRequest)
HXLINE( 138)				 ::ui::dialogs::Dialog dialog =  ::ui::dialogs::Dialog_obj::__alloc( HX_CTX ,(HX_("",00,00,00,00) + e->toString()),HX_("File IO Error",f2,e9,ce,99),HX_("Close",98,87,90,db),null());
HXLINE( 139)				dialog->addEventListener(HX_("DIALOG_BUTTON1",48,38,81,e9), ::Dynamic(new _hx_Closure_1()),null(),null(),null());
HXLINE( 142)				::Global_obj::layers->dialogs->openDialog(dialog);
HXLINE( 143)				 ::Dynamic _hx_tmp = ::haxe::Log_obj::trace;
HXDLIN( 143)				::String _hx_tmp1 = (HX_("File IO error: ",38,d5,81,0d) + e->toString());
HXDLIN( 143)				_hx_tmp(_hx_tmp1,::hx::SourceInfo(HX_("src/ui/view/TitleView.hx",9b,2a,37,e9),143,HX_("ui.view.TitleView",8e,19,57,22),HX_("dispatchBehaviorRequest",43,67,18,c0)));
            			}
            			HX_END_LOCAL_FUNC1((void))

            			HX_GC_STACKFRAME(&_hx_pos_8c006926fe4fc5bb_131_dispatchBehaviorRequest)
HXLINE( 132)			loadedFile->addEventListener(HX_("complete",b9,00,c8,7f), ::Dynamic(new _hx_Closure_0(loadedFile)),null(),null(),null());
HXLINE( 137)			loadedFile->addEventListener(HX_("ioError",02,fe,41,76), ::Dynamic(new _hx_Closure_2()),null(),null(),null());
HXLINE( 145)			try {
            				HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE( 146)				loadedFile->load();
            			} catch( ::Dynamic _hx_e) {
            				if (_hx_e.IsClass<  ::Dynamic >() ){
            					HX_STACK_BEGIN_CATCH
            					 ::Dynamic _g = _hx_e;
HXLINE( 147)					 ::haxe::Exception _g1 = ::haxe::Exception_obj::caught(_g);
HXDLIN( 147)					{
            						HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_3) HXARGC(1)
            						void _hx_run( ::openfl::events::Event _){
            							HX_GC_STACKFRAME(&_hx_pos_8c006926fe4fc5bb_150_dispatchBehaviorRequest)
HXLINE( 150)							::Global_obj::layers->dialogs->closeDialogs();
            						}
            						HX_END_LOCAL_FUNC1((void))

HXLINE( 148)						 ::ui::dialogs::Dialog dialog =  ::ui::dialogs::Dialog_obj::__alloc( HX_CTX ,(HX_("",00,00,00,00) + _g1->details()),HX_("File Load Error",52,01,78,58),HX_("Close",98,87,90,db),null());
HXLINE( 149)						dialog->addEventListener(HX_("DIALOG_BUTTON1",48,38,81,e9), ::Dynamic(new _hx_Closure_3()),null(),null(),null());
HXLINE( 152)						::Global_obj::layers->dialogs->openDialog(dialog);
HXLINE( 153)						 ::Dynamic _hx_tmp = ::haxe::Log_obj::trace;
HXDLIN( 153)						::String _hx_tmp1 = ((HX_("File load error: ",78,38,15,d2) + _g1->details()) + HX_(", stack trace: ",9f,40,6c,1b));
HXDLIN( 153)						::Array< ::Dynamic> tmp = _g1->get_stack();
HXDLIN( 153)						::String _hx_tmp2;
HXDLIN( 153)						if (::hx::IsNull( tmp )) {
HXLINE( 153)							_hx_tmp2 = HX_("null",87,9e,0e,49);
            						}
            						else {
HXLINE( 153)							_hx_tmp2 = ::haxe::_CallStack::CallStack_Impl__obj::toString(tmp);
            						}
HXDLIN( 153)						_hx_tmp((_hx_tmp1 + _hx_tmp2),::hx::SourceInfo(HX_("src/ui/view/TitleView.hx",9b,2a,37,e9),153,HX_("ui.view.TitleView",8e,19,57,22),HX_("dispatchBehaviorRequest",43,67,18,c0)));
            					}
            				}
            				else {
            					HX_STACK_DO_THROW(_hx_e);
            				}
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_8c006926fe4fc5bb_129_dispatchBehaviorRequest)
HXLINE( 130)		 ::openfl::net::FileReference loadedFile =  ::openfl::net::FileReference_obj::__alloc( HX_CTX );
HXLINE( 131)		loadedFile->addEventListener(HX_("select",fc,1a,33,6a), ::Dynamic(new _hx_Closure_4(loadedFile)),null(),null(),null());
HXLINE( 156)		loadedFile->browse(::Array_obj< ::Dynamic>::__new(1)->init(0, ::openfl::net::FileFilter_obj::__alloc( HX_CTX ,HX_("XML Files (*.xml)",6c,bc,32,c2),HX_("*.xml",93,9b,97,4d),null())));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(TitleView_obj,dispatchBehaviorRequest,(void))

void TitleView_obj::dispatchXmlRequest(){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_4, ::openfl::net::FileReference,loadedFile) HXARGC(1)
            		void _hx_run( ::openfl::events::Event _){
            			HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::openfl::net::FileReference,loadedFile) HXARGC(1)
            			void _hx_run( ::openfl::events::Event _){
            				HX_GC_STACKFRAME(&_hx_pos_8c006926fe4fc5bb_162_dispatchXmlRequest)
HXLINE( 163)				::account::services::UploadXmlTask_obj::data = loadedFile->data->toString();
HXLINE( 164)				::account::services::UploadXmlTask_obj::name = loadedFile->get_name();
HXLINE( 165)				::Global_obj::uploadXmlTask->startTask();
            			}
            			HX_END_LOCAL_FUNC1((void))

            			HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_2) HXARGC(1)
            			void _hx_run( ::openfl::events::IOErrorEvent e){
            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            				void _hx_run( ::openfl::events::Event _){
            					HX_GC_STACKFRAME(&_hx_pos_8c006926fe4fc5bb_171_dispatchXmlRequest)
HXLINE( 171)					::Global_obj::layers->dialogs->closeDialogs();
            				}
            				HX_END_LOCAL_FUNC1((void))

            				HX_GC_STACKFRAME(&_hx_pos_8c006926fe4fc5bb_168_dispatchXmlRequest)
HXLINE( 169)				 ::ui::dialogs::Dialog dialog =  ::ui::dialogs::Dialog_obj::__alloc( HX_CTX ,(HX_("",00,00,00,00) + e->toString()),HX_("File IO Error",f2,e9,ce,99),HX_("Close",98,87,90,db),null());
HXLINE( 170)				dialog->addEventListener(HX_("DIALOG_BUTTON1",48,38,81,e9), ::Dynamic(new _hx_Closure_1()),null(),null(),null());
HXLINE( 173)				::Global_obj::layers->dialogs->openDialog(dialog);
HXLINE( 174)				 ::Dynamic _hx_tmp = ::haxe::Log_obj::trace;
HXDLIN( 174)				::String _hx_tmp1 = (HX_("File IO error: ",38,d5,81,0d) + e->toString());
HXDLIN( 174)				_hx_tmp(_hx_tmp1,::hx::SourceInfo(HX_("src/ui/view/TitleView.hx",9b,2a,37,e9),174,HX_("ui.view.TitleView",8e,19,57,22),HX_("dispatchXmlRequest",92,51,8c,d1)));
            			}
            			HX_END_LOCAL_FUNC1((void))

            			HX_GC_STACKFRAME(&_hx_pos_8c006926fe4fc5bb_161_dispatchXmlRequest)
HXLINE( 162)			loadedFile->addEventListener(HX_("complete",b9,00,c8,7f), ::Dynamic(new _hx_Closure_0(loadedFile)),null(),null(),null());
HXLINE( 168)			loadedFile->addEventListener(HX_("ioError",02,fe,41,76), ::Dynamic(new _hx_Closure_2()),null(),null(),null());
HXLINE( 176)			try {
            				HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE( 177)				loadedFile->load();
            			} catch( ::Dynamic _hx_e) {
            				if (_hx_e.IsClass<  ::Dynamic >() ){
            					HX_STACK_BEGIN_CATCH
            					 ::Dynamic _g = _hx_e;
HXLINE( 178)					 ::haxe::Exception _g1 = ::haxe::Exception_obj::caught(_g);
HXDLIN( 178)					{
            						HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_3) HXARGC(1)
            						void _hx_run( ::openfl::events::Event _){
            							HX_GC_STACKFRAME(&_hx_pos_8c006926fe4fc5bb_181_dispatchXmlRequest)
HXLINE( 181)							::Global_obj::layers->dialogs->closeDialogs();
            						}
            						HX_END_LOCAL_FUNC1((void))

HXLINE( 179)						 ::ui::dialogs::Dialog dialog =  ::ui::dialogs::Dialog_obj::__alloc( HX_CTX ,(HX_("",00,00,00,00) + _g1->details()),HX_("File Load Error",52,01,78,58),HX_("Close",98,87,90,db),null());
HXLINE( 180)						dialog->addEventListener(HX_("DIALOG_BUTTON1",48,38,81,e9), ::Dynamic(new _hx_Closure_3()),null(),null(),null());
HXLINE( 183)						::Global_obj::layers->dialogs->openDialog(dialog);
HXLINE( 184)						 ::Dynamic _hx_tmp = ::haxe::Log_obj::trace;
HXDLIN( 184)						::String _hx_tmp1 = ((HX_("File load error: ",78,38,15,d2) + _g1->details()) + HX_(", stack trace: ",9f,40,6c,1b));
HXDLIN( 184)						::Array< ::Dynamic> tmp = _g1->get_stack();
HXDLIN( 184)						::String _hx_tmp2;
HXDLIN( 184)						if (::hx::IsNull( tmp )) {
HXLINE( 184)							_hx_tmp2 = HX_("null",87,9e,0e,49);
            						}
            						else {
HXLINE( 184)							_hx_tmp2 = ::haxe::_CallStack::CallStack_Impl__obj::toString(tmp);
            						}
HXDLIN( 184)						_hx_tmp((_hx_tmp1 + _hx_tmp2),::hx::SourceInfo(HX_("src/ui/view/TitleView.hx",9b,2a,37,e9),184,HX_("ui.view.TitleView",8e,19,57,22),HX_("dispatchXmlRequest",92,51,8c,d1)));
            					}
            				}
            				else {
            					HX_STACK_DO_THROW(_hx_e);
            				}
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_8c006926fe4fc5bb_159_dispatchXmlRequest)
HXLINE( 160)		 ::openfl::net::FileReference loadedFile =  ::openfl::net::FileReference_obj::__alloc( HX_CTX );
HXLINE( 161)		loadedFile->addEventListener(HX_("select",fc,1a,33,6a), ::Dynamic(new _hx_Closure_4(loadedFile)),null(),null(),null());
HXLINE( 187)		loadedFile->browse(::Array_obj< ::Dynamic>::__new(1)->init(0, ::openfl::net::FileFilter_obj::__alloc( HX_CTX ,HX_("XML Files (*.xml)",6c,bc,32,c2),HX_("*.xml",93,9b,97,4d),null())));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(TitleView_obj,dispatchXmlRequest,(void))


::hx::ObjectPtr< TitleView_obj > TitleView_obj::__new() {
	::hx::ObjectPtr< TitleView_obj > __this = new TitleView_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< TitleView_obj > TitleView_obj::__alloc(::hx::Ctx *_hx_ctx) {
	TitleView_obj *__this = (TitleView_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(TitleView_obj), true, "ui.view.TitleView"));
	*(void **)__this = TitleView_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

TitleView_obj::TitleView_obj()
{
}

void TitleView_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(TitleView);
	HX_MARK_MEMBER_NAME(playClicked,"playClicked");
	HX_MARK_MEMBER_NAME(serversClicked,"serversClicked");
	HX_MARK_MEMBER_NAME(accountClicked,"accountClicked");
	HX_MARK_MEMBER_NAME(editorClicked,"editorClicked");
	HX_MARK_MEMBER_NAME(behaviorClicked,"behaviorClicked");
	HX_MARK_MEMBER_NAME(xmlClicked,"xmlClicked");
	HX_MARK_MEMBER_NAME(container,"container");
	HX_MARK_MEMBER_NAME(playButton,"playButton");
	HX_MARK_MEMBER_NAME(serversButton,"serversButton");
	HX_MARK_MEMBER_NAME(accountButton,"accountButton");
	HX_MARK_MEMBER_NAME(editorButton,"editorButton");
	HX_MARK_MEMBER_NAME(behaviorButton,"behaviorButton");
	HX_MARK_MEMBER_NAME(xmlButton,"xmlButton");
	 ::openfl::display::Sprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void TitleView_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(playClicked,"playClicked");
	HX_VISIT_MEMBER_NAME(serversClicked,"serversClicked");
	HX_VISIT_MEMBER_NAME(accountClicked,"accountClicked");
	HX_VISIT_MEMBER_NAME(editorClicked,"editorClicked");
	HX_VISIT_MEMBER_NAME(behaviorClicked,"behaviorClicked");
	HX_VISIT_MEMBER_NAME(xmlClicked,"xmlClicked");
	HX_VISIT_MEMBER_NAME(container,"container");
	HX_VISIT_MEMBER_NAME(playButton,"playButton");
	HX_VISIT_MEMBER_NAME(serversButton,"serversButton");
	HX_VISIT_MEMBER_NAME(accountButton,"accountButton");
	HX_VISIT_MEMBER_NAME(editorButton,"editorButton");
	HX_VISIT_MEMBER_NAME(behaviorButton,"behaviorButton");
	HX_VISIT_MEMBER_NAME(xmlButton,"xmlButton");
	 ::openfl::display::Sprite_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val TitleView_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"onAdded") ) { return ::hx::Val( onAdded_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"container") ) { return ::hx::Val( container ); }
		if (HX_FIELD_EQ(inName,"xmlButton") ) { return ::hx::Val( xmlButton ); }
		if (HX_FIELD_EQ(inName,"onRemoved") ) { return ::hx::Val( onRemoved_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"xmlClicked") ) { return ::hx::Val( xmlClicked ); }
		if (HX_FIELD_EQ(inName,"playButton") ) { return ::hx::Val( playButton ); }
		if (HX_FIELD_EQ(inName,"initialize") ) { return ::hx::Val( initialize_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"playClicked") ) { return ::hx::Val( playClicked ); }
		if (HX_FIELD_EQ(inName,"addChildren") ) { return ::hx::Val( addChildren_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"editorButton") ) { return ::hx::Val( editorButton ); }
		if (HX_FIELD_EQ(inName,"makeChildren") ) { return ::hx::Val( makeChildren_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"editorClicked") ) { return ::hx::Val( editorClicked ); }
		if (HX_FIELD_EQ(inName,"serversButton") ) { return ::hx::Val( serversButton ); }
		if (HX_FIELD_EQ(inName,"accountButton") ) { return ::hx::Val( accountButton ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"serversClicked") ) { return ::hx::Val( serversClicked ); }
		if (HX_FIELD_EQ(inName,"accountClicked") ) { return ::hx::Val( accountClicked ); }
		if (HX_FIELD_EQ(inName,"behaviorButton") ) { return ::hx::Val( behaviorButton ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"behaviorClicked") ) { return ::hx::Val( behaviorClicked ); }
		if (HX_FIELD_EQ(inName,"positionButtons") ) { return ::hx::Val( positionButtons_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool TitleView_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 16:
		if (HX_FIELD_EQ(inName,"showEditorScreen") ) { outValue = showEditorScreen_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"showServersScreen") ) { outValue = showServersScreen_dyn(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"dispatchXmlRequest") ) { outValue = dispatchXmlRequest_dyn(); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"handleIntentionToPlay") ) { outValue = handleIntentionToPlay_dyn(); return true; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"dispatchBehaviorRequest") ) { outValue = dispatchBehaviorRequest_dyn(); return true; }
		break;
	case 30:
		if (HX_FIELD_EQ(inName,"handleIntentionToReviewAccount") ) { outValue = handleIntentionToReviewAccount_dyn(); return true; }
	}
	return false;
}

::hx::Val TitleView_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"container") ) { container=inValue.Cast<  ::openfl::display::Sprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"xmlButton") ) { xmlButton=inValue.Cast<  ::screens::TitleMenuOption >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"xmlClicked") ) { xmlClicked=inValue.Cast<  ::util::EmptySignal >(); return inValue; }
		if (HX_FIELD_EQ(inName,"playButton") ) { playButton=inValue.Cast<  ::screens::TitleMenuOption >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"playClicked") ) { playClicked=inValue.Cast<  ::util::EmptySignal >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"editorButton") ) { editorButton=inValue.Cast<  ::screens::TitleMenuOption >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"editorClicked") ) { editorClicked=inValue.Cast<  ::util::EmptySignal >(); return inValue; }
		if (HX_FIELD_EQ(inName,"serversButton") ) { serversButton=inValue.Cast<  ::screens::TitleMenuOption >(); return inValue; }
		if (HX_FIELD_EQ(inName,"accountButton") ) { accountButton=inValue.Cast<  ::screens::TitleMenuOption >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"serversClicked") ) { serversClicked=inValue.Cast<  ::util::EmptySignal >(); return inValue; }
		if (HX_FIELD_EQ(inName,"accountClicked") ) { accountClicked=inValue.Cast<  ::util::EmptySignal >(); return inValue; }
		if (HX_FIELD_EQ(inName,"behaviorButton") ) { behaviorButton=inValue.Cast<  ::screens::TitleMenuOption >(); return inValue; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"behaviorClicked") ) { behaviorClicked=inValue.Cast<  ::util::EmptySignal >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void TitleView_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("playClicked",13,d7,87,3e));
	outFields->push(HX_("serversClicked",37,28,9b,ec));
	outFields->push(HX_("accountClicked",7a,41,b2,42));
	outFields->push(HX_("editorClicked",7a,9c,51,e7));
	outFields->push(HX_("behaviorClicked",35,24,22,12));
	outFields->push(HX_("xmlClicked",90,a9,77,dc));
	outFields->push(HX_("container",41,75,73,bf));
	outFields->push(HX_("playButton",06,f3,a3,80));
	outFields->push(HX_("serversButton",62,12,ac,b9));
	outFields->push(HX_("accountButton",7f,12,75,f3));
	outFields->push(HX_("editorButton",7f,17,3a,1b));
	outFields->push(HX_("behaviorButton",24,20,91,1c));
	outFields->push(HX_("xmlButton",29,bf,26,d5));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo TitleView_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::util::EmptySignal */ ,(int)offsetof(TitleView_obj,playClicked),HX_("playClicked",13,d7,87,3e)},
	{::hx::fsObject /*  ::util::EmptySignal */ ,(int)offsetof(TitleView_obj,serversClicked),HX_("serversClicked",37,28,9b,ec)},
	{::hx::fsObject /*  ::util::EmptySignal */ ,(int)offsetof(TitleView_obj,accountClicked),HX_("accountClicked",7a,41,b2,42)},
	{::hx::fsObject /*  ::util::EmptySignal */ ,(int)offsetof(TitleView_obj,editorClicked),HX_("editorClicked",7a,9c,51,e7)},
	{::hx::fsObject /*  ::util::EmptySignal */ ,(int)offsetof(TitleView_obj,behaviorClicked),HX_("behaviorClicked",35,24,22,12)},
	{::hx::fsObject /*  ::util::EmptySignal */ ,(int)offsetof(TitleView_obj,xmlClicked),HX_("xmlClicked",90,a9,77,dc)},
	{::hx::fsObject /*  ::openfl::display::Sprite */ ,(int)offsetof(TitleView_obj,container),HX_("container",41,75,73,bf)},
	{::hx::fsObject /*  ::screens::TitleMenuOption */ ,(int)offsetof(TitleView_obj,playButton),HX_("playButton",06,f3,a3,80)},
	{::hx::fsObject /*  ::screens::TitleMenuOption */ ,(int)offsetof(TitleView_obj,serversButton),HX_("serversButton",62,12,ac,b9)},
	{::hx::fsObject /*  ::screens::TitleMenuOption */ ,(int)offsetof(TitleView_obj,accountButton),HX_("accountButton",7f,12,75,f3)},
	{::hx::fsObject /*  ::screens::TitleMenuOption */ ,(int)offsetof(TitleView_obj,editorButton),HX_("editorButton",7f,17,3a,1b)},
	{::hx::fsObject /*  ::screens::TitleMenuOption */ ,(int)offsetof(TitleView_obj,behaviorButton),HX_("behaviorButton",24,20,91,1c)},
	{::hx::fsObject /*  ::screens::TitleMenuOption */ ,(int)offsetof(TitleView_obj,xmlButton),HX_("xmlButton",29,bf,26,d5)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *TitleView_obj_sStaticStorageInfo = 0;
#endif

static ::String TitleView_obj_sMemberFields[] = {
	HX_("playClicked",13,d7,87,3e),
	HX_("serversClicked",37,28,9b,ec),
	HX_("accountClicked",7a,41,b2,42),
	HX_("editorClicked",7a,9c,51,e7),
	HX_("behaviorClicked",35,24,22,12),
	HX_("xmlClicked",90,a9,77,dc),
	HX_("container",41,75,73,bf),
	HX_("playButton",06,f3,a3,80),
	HX_("serversButton",62,12,ac,b9),
	HX_("accountButton",7f,12,75,f3),
	HX_("editorButton",7f,17,3a,1b),
	HX_("behaviorButton",24,20,91,1c),
	HX_("xmlButton",29,bf,26,d5),
	HX_("onAdded",21,73,81,b2),
	HX_("onRemoved",41,d8,aa,ca),
	HX_("initialize",50,31,bb,ec),
	HX_("makeChildren",4d,ad,42,b5),
	HX_("addChildren",80,50,c6,a1),
	HX_("positionButtons",98,30,ad,c9),
	::String(null()) };

::hx::Class TitleView_obj::__mClass;

static ::String TitleView_obj_sStaticFields[] = {
	HX_("handleIntentionToPlay",53,60,57,3d),
	HX_("showServersScreen",9f,4c,dd,45),
	HX_("showEditorScreen",96,19,46,27),
	HX_("handleIntentionToReviewAccount",b6,65,1a,b0),
	HX_("dispatchBehaviorRequest",43,67,18,c0),
	HX_("dispatchXmlRequest",92,51,8c,d1),
	::String(null())
};

void TitleView_obj::__register()
{
	TitleView_obj _hx_dummy;
	TitleView_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("ui.view.TitleView",8e,19,57,22);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &TitleView_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(TitleView_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(TitleView_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< TitleView_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TitleView_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TitleView_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace ui
} // end namespace view
