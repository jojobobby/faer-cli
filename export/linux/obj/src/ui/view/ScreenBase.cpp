// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_ui_SoundIcon
#include <ui/SoundIcon.h>
#endif
#ifndef INCLUDED_ui_view_MapBackground
#include <ui/view/MapBackground.h>
#endif
#ifndef INCLUDED_ui_view_ScreenBase
#include <ui/view/ScreenBase.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_9e0e56d766c84ef0_9_new,"ui.view.ScreenBase","new",0x5c9ad5fe,"ui.view.ScreenBase.new","ui/view/ScreenBase.hx",9,0x77c8dad2)
namespace ui{
namespace view{

void ScreenBase_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_9e0e56d766c84ef0_9_new)
HXLINE(  10)		super::__construct();
HXLINE(  12)		this->map =  ::ui::view::MapBackground_obj::__alloc( HX_CTX );
HXLINE(  13)		this->addChild(this->map);
HXLINE(  14)		this->soundIcon =  ::ui::SoundIcon_obj::__alloc( HX_CTX );
HXLINE(  15)		this->soundIcon->set_x(( (Float)(2) ));
HXLINE(  16)		this->addChild(this->soundIcon);
            	}

Dynamic ScreenBase_obj::__CreateEmpty() { return new ScreenBase_obj; }

void *ScreenBase_obj::_hx_vtable = 0;

Dynamic ScreenBase_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ScreenBase_obj > _hx_result = new ScreenBase_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ScreenBase_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1f4df417) {
		if (inClassId<=(int)0x0c89e854) {
			if (inClassId<=(int)0x0330636f) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0330636f;
			} else {
				return inClassId==(int)0x0c89e854;
			}
		} else {
			return inClassId==(int)0x1f4df417;
		}
	} else {
		if (inClassId<=(int)0x5ccfa336) {
			return inClassId==(int)0x4af7dd8e || inClassId==(int)0x5ccfa336;
		} else {
			return inClassId==(int)0x6b353933;
		}
	}
}


::hx::ObjectPtr< ScreenBase_obj > ScreenBase_obj::__new() {
	::hx::ObjectPtr< ScreenBase_obj > __this = new ScreenBase_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< ScreenBase_obj > ScreenBase_obj::__alloc(::hx::Ctx *_hx_ctx) {
	ScreenBase_obj *__this = (ScreenBase_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ScreenBase_obj), true, "ui.view.ScreenBase"));
	*(void **)__this = ScreenBase_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

ScreenBase_obj::ScreenBase_obj()
{
}

void ScreenBase_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ScreenBase);
	HX_MARK_MEMBER_NAME(map,"map");
	HX_MARK_MEMBER_NAME(soundIcon,"soundIcon");
	 ::openfl::display::Sprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void ScreenBase_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(map,"map");
	HX_VISIT_MEMBER_NAME(soundIcon,"soundIcon");
	 ::openfl::display::Sprite_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val ScreenBase_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"map") ) { return ::hx::Val( map ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"soundIcon") ) { return ::hx::Val( soundIcon ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val ScreenBase_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"map") ) { map=inValue.Cast<  ::ui::view::MapBackground >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"soundIcon") ) { soundIcon=inValue.Cast<  ::ui::SoundIcon >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ScreenBase_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("map",9c,0a,53,00));
	outFields->push(HX_("soundIcon",e8,b3,80,50));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo ScreenBase_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::ui::view::MapBackground */ ,(int)offsetof(ScreenBase_obj,map),HX_("map",9c,0a,53,00)},
	{::hx::fsObject /*  ::ui::SoundIcon */ ,(int)offsetof(ScreenBase_obj,soundIcon),HX_("soundIcon",e8,b3,80,50)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *ScreenBase_obj_sStaticStorageInfo = 0;
#endif

static ::String ScreenBase_obj_sMemberFields[] = {
	HX_("map",9c,0a,53,00),
	HX_("soundIcon",e8,b3,80,50),
	::String(null()) };

::hx::Class ScreenBase_obj::__mClass;

void ScreenBase_obj::__register()
{
	ScreenBase_obj _hx_dummy;
	ScreenBase_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("ui.view.ScreenBase",0c,bf,44,5a);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ScreenBase_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ScreenBase_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ScreenBase_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ScreenBase_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace ui
} // end namespace view
