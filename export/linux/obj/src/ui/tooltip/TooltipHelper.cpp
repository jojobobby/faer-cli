// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_ui_tooltip_TooltipHelper
#include <ui/tooltip/TooltipHelper.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_232bb55ee81dcb00_13_getFormattedString,"ui.tooltip.TooltipHelper","getFormattedString",0xfa59a7b9,"ui.tooltip.TooltipHelper.getFormattedString","ui/tooltip/TooltipHelper.hx",13,0xb4e55ed4)
namespace ui{
namespace tooltip{

void TooltipHelper_obj::__construct() { }

Dynamic TooltipHelper_obj::__CreateEmpty() { return new TooltipHelper_obj; }

void *TooltipHelper_obj::_hx_vtable = 0;

Dynamic TooltipHelper_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< TooltipHelper_obj > _hx_result = new TooltipHelper_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool TooltipHelper_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x7aa83e22;
}

::String TooltipHelper_obj::getFormattedString(Float elem){
            	HX_STACKFRAME(&_hx_pos_232bb55ee81dcb00_13_getFormattedString)
HXLINE(  14)		::Std_obj::_hx_int(elem);
HXLINE(  15)		return ::Std_obj::string(elem);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(TooltipHelper_obj,getFormattedString,return )


TooltipHelper_obj::TooltipHelper_obj()
{
}

bool TooltipHelper_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 18:
		if (HX_FIELD_EQ(inName,"getFormattedString") ) { outValue = getFormattedString_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *TooltipHelper_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *TooltipHelper_obj_sStaticStorageInfo = 0;
#endif

::hx::Class TooltipHelper_obj::__mClass;

static ::String TooltipHelper_obj_sStaticFields[] = {
	HX_("getFormattedString",f7,8c,de,26),
	::String(null())
};

void TooltipHelper_obj::__register()
{
	TooltipHelper_obj _hx_dummy;
	TooltipHelper_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("ui.tooltip.TooltipHelper",6c,7c,b1,79);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &TooltipHelper_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(TooltipHelper_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< TooltipHelper_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TooltipHelper_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TooltipHelper_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace ui
} // end namespace tooltip
