// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_ui_tooltip_Restriction
#include <ui/tooltip/Restriction.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_5b53bc7b29f0230c_366_new,"ui.tooltip.Restriction","new",0x71851d59,"ui.tooltip.Restriction.new","ui/tooltip/EquipmentToolTip.hx",366,0x1ae393c2)
namespace ui{
namespace tooltip{

void Restriction_obj::__construct(::String text,int color,bool bold){
            	HX_STACKFRAME(&_hx_pos_5b53bc7b29f0230c_366_new)
HXLINE( 369)		this->bold = false;
HXLINE( 368)		this->color = 0;
HXLINE( 367)		this->text = HX_("",00,00,00,00);
HXLINE( 372)		this->text = text;
HXLINE( 373)		this->color = color;
HXLINE( 374)		this->bold = bold;
            	}

Dynamic Restriction_obj::__CreateEmpty() { return new Restriction_obj; }

void *Restriction_obj::_hx_vtable = 0;

Dynamic Restriction_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Restriction_obj > _hx_result = new Restriction_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool Restriction_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0b113281;
}


Restriction_obj::Restriction_obj()
{
}

void Restriction_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Restriction);
	HX_MARK_MEMBER_NAME(text,"text");
	HX_MARK_MEMBER_NAME(color,"color");
	HX_MARK_MEMBER_NAME(bold,"bold");
	HX_MARK_END_CLASS();
}

void Restriction_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(text,"text");
	HX_VISIT_MEMBER_NAME(color,"color");
	HX_VISIT_MEMBER_NAME(bold,"bold");
}

::hx::Val Restriction_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"text") ) { return ::hx::Val( text ); }
		if (HX_FIELD_EQ(inName,"bold") ) { return ::hx::Val( bold ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"color") ) { return ::hx::Val( color ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val Restriction_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"text") ) { text=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"bold") ) { bold=inValue.Cast< bool >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"color") ) { color=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Restriction_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("text",ad,cc,f9,4c));
	outFields->push(HX_("color",63,71,5c,4a));
	outFields->push(HX_("bold",85,81,1b,41));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Restriction_obj_sMemberStorageInfo[] = {
	{::hx::fsString,(int)offsetof(Restriction_obj,text),HX_("text",ad,cc,f9,4c)},
	{::hx::fsInt,(int)offsetof(Restriction_obj,color),HX_("color",63,71,5c,4a)},
	{::hx::fsBool,(int)offsetof(Restriction_obj,bold),HX_("bold",85,81,1b,41)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Restriction_obj_sStaticStorageInfo = 0;
#endif

static ::String Restriction_obj_sMemberFields[] = {
	HX_("text",ad,cc,f9,4c),
	HX_("color",63,71,5c,4a),
	HX_("bold",85,81,1b,41),
	::String(null()) };

::hx::Class Restriction_obj::__mClass;

void Restriction_obj::__register()
{
	Restriction_obj _hx_dummy;
	Restriction_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("ui.tooltip.Restriction",e7,7c,cb,5f);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Restriction_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Restriction_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Restriction_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Restriction_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace ui
} // end namespace tooltip
