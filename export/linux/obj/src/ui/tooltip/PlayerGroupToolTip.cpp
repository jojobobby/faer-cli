// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_objects_GameObject
#include <objects/GameObject.h>
#endif
#ifndef INCLUDED_objects_Player
#include <objects/Player.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_Graphics
#include <openfl/display/Graphics.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_filters_BitmapFilter
#include <openfl/filters/BitmapFilter.h>
#endif
#ifndef INCLUDED_openfl_filters_DropShadowFilter
#include <openfl/filters/DropShadowFilter.h>
#endif
#ifndef INCLUDED_openfl_text_TextField
#include <openfl/text/TextField.h>
#endif
#ifndef INCLUDED_ui_GameObjectListItem
#include <ui/GameObjectListItem.h>
#endif
#ifndef INCLUDED_ui_SimpleText
#include <ui/SimpleText.h>
#endif
#ifndef INCLUDED_ui_tooltip_PlayerGroupToolTip
#include <ui/tooltip/PlayerGroupToolTip.h>
#endif
#ifndef INCLUDED_ui_tooltip_ToolTip
#include <ui/tooltip/ToolTip.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_64b1af8ebfb3ee79_8_new,"ui.tooltip.PlayerGroupToolTip","new",0x9fda86dc,"ui.tooltip.PlayerGroupToolTip.new","ui/tooltip/PlayerGroupToolTip.hx",8,0x259d93d2)
HX_LOCAL_STACK_FRAME(_hx_pos_64b1af8ebfb3ee79_27_setPlayers,"ui.tooltip.PlayerGroupToolTip","setPlayers",0x6bbf7f74,"ui.tooltip.PlayerGroupToolTip.setPlayers","ui/tooltip/PlayerGroupToolTip.hx",27,0x259d93d2)
HX_LOCAL_STACK_FRAME(_hx_pos_64b1af8ebfb3ee79_50_clear,"ui.tooltip.PlayerGroupToolTip","clear",0xdfd9bf09,"ui.tooltip.PlayerGroupToolTip.clear","ui/tooltip/PlayerGroupToolTip.hx",50,0x259d93d2)
namespace ui{
namespace tooltip{

void PlayerGroupToolTip_obj::__construct(::Array< ::Dynamic> players,::hx::Null< bool >  __o_followMouse){
            		bool followMouse = __o_followMouse.Default(true);
            	HX_GC_STACKFRAME(&_hx_pos_64b1af8ebfb3ee79_8_new)
HXLINE(   9)		this->players = null();
HXLINE(  15)		this->playerPanels = ::Array_obj< ::Dynamic>::__new();
HXLINE(  16)		super::__construct(3552822,((Float)0.5),16777215,1,followMouse);
HXLINE(  17)		this->clickMessage =  ::ui::SimpleText_obj::__alloc( HX_CTX ,12,11776947,false,0,0,null());
HXLINE(  18)		this->clickMessage->set_text(HX_("(Click to open menu)",39,fe,03,90));
HXLINE(  19)		this->clickMessage->updateMetrics();
HXLINE(  20)		 ::ui::SimpleText _hx_tmp = this->clickMessage;
HXDLIN(  20)		_hx_tmp->set_filters(::Array_obj< ::Dynamic>::__new(1)->init(0, ::openfl::filters::DropShadowFilter_obj::__alloc( HX_CTX ,0,0,0,null(),null(),null(),null(),null(),null(),null(),null())));
HXLINE(  21)		this->addChild(this->clickMessage);
HXLINE(  22)		this->setPlayers(players);
HXLINE(  23)		if (!(followMouse)) {
HXLINE(  24)			this->set_filters(::Array_obj< ::Dynamic>::__new(0));
            		}
            	}

Dynamic PlayerGroupToolTip_obj::__CreateEmpty() { return new PlayerGroupToolTip_obj; }

void *PlayerGroupToolTip_obj::_hx_vtable = 0;

Dynamic PlayerGroupToolTip_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< PlayerGroupToolTip_obj > _hx_result = new PlayerGroupToolTip_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool PlayerGroupToolTip_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1f4df417) {
		if (inClassId<=(int)0x0637743c) {
			if (inClassId<=(int)0x0330636f) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0330636f;
			} else {
				return inClassId==(int)0x0637743c;
			}
		} else {
			return inClassId==(int)0x0c89e854 || inClassId==(int)0x1f4df417;
		}
	} else {
		if (inClassId<=(int)0x4af7dd8e) {
			return inClassId==(int)0x47887374 || inClassId==(int)0x4af7dd8e;
		} else {
			return inClassId==(int)0x6b353933;
		}
	}
}

void PlayerGroupToolTip_obj::setPlayers(::Array< ::Dynamic> players){
            	HX_GC_STACKFRAME(&_hx_pos_64b1af8ebfb3ee79_27_setPlayers)
HXLINE(  29)		 ::ui::GameObjectListItem playerPlanel = null();
HXLINE(  30)		this->clear();
HXLINE(  31)		this->players = players->slice(0,null());
HXLINE(  32)		bool _hx_tmp;
HXDLIN(  32)		if (::hx::IsNotNull( this->players )) {
HXLINE(  32)			_hx_tmp = (this->players->length == 0);
            		}
            		else {
HXLINE(  32)			_hx_tmp = true;
            		}
HXDLIN(  32)		if (_hx_tmp) {
HXLINE(  33)			return;
            		}
HXLINE(  35)		int yVal = 0;
HXLINE(  36)		{
HXLINE(  36)			int _g = 0;
HXDLIN(  36)			while((_g < players->length)){
HXLINE(  36)				 ::objects::Player player = players->__get(_g).StaticCast<  ::objects::Player >();
HXDLIN(  36)				_g = (_g + 1);
HXLINE(  37)				playerPlanel =  ::ui::GameObjectListItem_obj::__alloc( HX_CTX ,11776947,true,player);
HXLINE(  38)				playerPlanel->set_x(( (Float)(0) ));
HXLINE(  39)				playerPlanel->set_y(( (Float)(yVal) ));
HXLINE(  40)				this->addChild(playerPlanel);
HXLINE(  41)				this->playerPanels->push(playerPlanel);
HXLINE(  42)				yVal = (yVal + 32);
            			}
            		}
HXLINE(  45)		 ::ui::SimpleText _hx_tmp1 = this->clickMessage;
HXDLIN(  45)		Float _hx_tmp2 = (this->get_width() / ( (Float)(2) ));
HXDLIN(  45)		_hx_tmp1->set_x((_hx_tmp2 - (this->clickMessage->get_width() / ( (Float)(2) ))));
HXLINE(  46)		this->clickMessage->set_y(( (Float)(yVal) ));
HXLINE(  47)		this->draw();
            	}


HX_DEFINE_DYNAMIC_FUNC1(PlayerGroupToolTip_obj,setPlayers,(void))

void PlayerGroupToolTip_obj::clear(){
            	HX_STACKFRAME(&_hx_pos_64b1af8ebfb3ee79_50_clear)
HXLINE(  52)		this->get_graphics()->clear();
HXLINE(  53)		{
HXLINE(  53)			int _g = 0;
HXDLIN(  53)			::Array< ::Dynamic> _g1 = this->playerPanels;
HXDLIN(  53)			while((_g < _g1->length)){
HXLINE(  53)				 ::ui::GameObjectListItem playerPanel = _g1->__get(_g).StaticCast<  ::ui::GameObjectListItem >();
HXDLIN(  53)				_g = (_g + 1);
HXLINE(  54)				this->removeChild(playerPanel);
            			}
            		}
HXLINE(  56)		this->playerPanels->removeRange(0,this->playerPanels->length);
            	}


HX_DEFINE_DYNAMIC_FUNC0(PlayerGroupToolTip_obj,clear,(void))


::hx::ObjectPtr< PlayerGroupToolTip_obj > PlayerGroupToolTip_obj::__new(::Array< ::Dynamic> players,::hx::Null< bool >  __o_followMouse) {
	::hx::ObjectPtr< PlayerGroupToolTip_obj > __this = new PlayerGroupToolTip_obj();
	__this->__construct(players,__o_followMouse);
	return __this;
}

::hx::ObjectPtr< PlayerGroupToolTip_obj > PlayerGroupToolTip_obj::__alloc(::hx::Ctx *_hx_ctx,::Array< ::Dynamic> players,::hx::Null< bool >  __o_followMouse) {
	PlayerGroupToolTip_obj *__this = (PlayerGroupToolTip_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(PlayerGroupToolTip_obj), true, "ui.tooltip.PlayerGroupToolTip"));
	*(void **)__this = PlayerGroupToolTip_obj::_hx_vtable;
	__this->__construct(players,__o_followMouse);
	return __this;
}

PlayerGroupToolTip_obj::PlayerGroupToolTip_obj()
{
}

void PlayerGroupToolTip_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(PlayerGroupToolTip);
	HX_MARK_MEMBER_NAME(players,"players");
	HX_MARK_MEMBER_NAME(playerPanels,"playerPanels");
	HX_MARK_MEMBER_NAME(clickMessage,"clickMessage");
	 ::ui::tooltip::ToolTip_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void PlayerGroupToolTip_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(players,"players");
	HX_VISIT_MEMBER_NAME(playerPanels,"playerPanels");
	HX_VISIT_MEMBER_NAME(clickMessage,"clickMessage");
	 ::ui::tooltip::ToolTip_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val PlayerGroupToolTip_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"clear") ) { return ::hx::Val( clear_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"players") ) { return ::hx::Val( players ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"setPlayers") ) { return ::hx::Val( setPlayers_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"playerPanels") ) { return ::hx::Val( playerPanels ); }
		if (HX_FIELD_EQ(inName,"clickMessage") ) { return ::hx::Val( clickMessage ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val PlayerGroupToolTip_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"players") ) { players=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"playerPanels") ) { playerPanels=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"clickMessage") ) { clickMessage=inValue.Cast<  ::ui::SimpleText >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void PlayerGroupToolTip_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("players",f2,09,15,8a));
	outFields->push(HX_("playerPanels",30,c7,ca,e6));
	outFields->push(HX_("clickMessage",5f,7a,3b,8c));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo PlayerGroupToolTip_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(PlayerGroupToolTip_obj,players),HX_("players",f2,09,15,8a)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(PlayerGroupToolTip_obj,playerPanels),HX_("playerPanels",30,c7,ca,e6)},
	{::hx::fsObject /*  ::ui::SimpleText */ ,(int)offsetof(PlayerGroupToolTip_obj,clickMessage),HX_("clickMessage",5f,7a,3b,8c)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *PlayerGroupToolTip_obj_sStaticStorageInfo = 0;
#endif

static ::String PlayerGroupToolTip_obj_sMemberFields[] = {
	HX_("players",f2,09,15,8a),
	HX_("playerPanels",30,c7,ca,e6),
	HX_("clickMessage",5f,7a,3b,8c),
	HX_("setPlayers",70,2e,f4,dc),
	HX_("clear",8d,71,5b,48),
	::String(null()) };

::hx::Class PlayerGroupToolTip_obj::__mClass;

void PlayerGroupToolTip_obj::__register()
{
	PlayerGroupToolTip_obj _hx_dummy;
	PlayerGroupToolTip_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("ui.tooltip.PlayerGroupToolTip",ea,28,a7,de);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(PlayerGroupToolTip_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< PlayerGroupToolTip_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = PlayerGroupToolTip_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = PlayerGroupToolTip_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace ui
} // end namespace tooltip
