// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_ui_VerticalScrollbar
#include <ui/VerticalScrollbar.h>
#endif
#ifndef INCLUDED_ui_VerticalScrollbarBar
#include <ui/VerticalScrollbarBar.h>
#endif
#ifndef INCLUDED_ui_VerticalScrollbarGroove
#include <ui/VerticalScrollbarGroove.h>
#endif
#ifndef INCLUDED_util_BevelRect
#include <util/BevelRect.h>
#endif
#ifndef INCLUDED_util_Signal
#include <util/Signal.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_9edd89f162aa412b_6_new,"ui.VerticalScrollbar","new",0xf259ffc8,"ui.VerticalScrollbar.new","ui/VerticalScrollbar.hx",6,0x65447729)
HX_LOCAL_STACK_FRAME(_hx_pos_9edd89f162aa412b_44_setSize,"ui.VerticalScrollbar","setSize",0x35cde4eb,"ui.VerticalScrollbar.setSize","ui/VerticalScrollbar.hx",44,0x65447729)
HX_LOCAL_STACK_FRAME(_hx_pos_9edd89f162aa412b_63_getPosition,"ui.VerticalScrollbar","getPosition",0x5d4e3ac7,"ui.VerticalScrollbar.getPosition","ui/VerticalScrollbar.hx",63,0x65447729)
HX_LOCAL_STACK_FRAME(_hx_pos_9edd89f162aa412b_66_setPosition,"ui.VerticalScrollbar","setPosition",0x67bb41d3,"ui.VerticalScrollbar.setPosition","ui/VerticalScrollbar.hx",66,0x65447729)
HX_LOCAL_STACK_FRAME(_hx_pos_9edd89f162aa412b_83_addMouseListeners,"ui.VerticalScrollbar","addMouseListeners",0xb852b603,"ui.VerticalScrollbar.addMouseListeners","ui/VerticalScrollbar.hx",83,0x65447729)
HX_LOCAL_STACK_FRAME(_hx_pos_9edd89f162aa412b_98_onBarDrag,"ui.VerticalScrollbar","onBarDrag",0xec835570,"ui.VerticalScrollbar.onBarDrag","ui/VerticalScrollbar.hx",98,0x65447729)
HX_LOCAL_STACK_FRAME(_hx_pos_9edd89f162aa412b_101_onGrooveClicked,"ui.VerticalScrollbar","onGrooveClicked",0x43dee896,"ui.VerticalScrollbar.onGrooveClicked","ui/VerticalScrollbar.hx",101,0x65447729)
namespace ui{

void VerticalScrollbar_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_9edd89f162aa412b_6_new)
HXLINE(  19)		this->positionChanged =  ::util::Signal_obj::__alloc( HX_CTX );
HXLINE(  16)		this->invRange = ((Float)0.0);
HXLINE(  15)		this->range = 0;
HXLINE(  14)		this->position = ((Float)0.0);
HXLINE(  12)		this->bar =  ::ui::VerticalScrollbarBar_obj::__alloc( HX_CTX );
HXLINE(  11)		this->groove =  ::ui::VerticalScrollbarGroove_obj::__alloc( HX_CTX );
HXLINE(  22)		super::__construct();
HXLINE(  24)		this->addChild(this->groove);
HXLINE(  25)		this->addChild(this->bar);
HXLINE(  26)		this->addMouseListeners();
            	}

Dynamic VerticalScrollbar_obj::__CreateEmpty() { return new VerticalScrollbar_obj; }

void *VerticalScrollbar_obj::_hx_vtable = 0;

Dynamic VerticalScrollbar_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< VerticalScrollbar_obj > _hx_result = new VerticalScrollbar_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool VerticalScrollbar_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1618c554) {
		if (inClassId<=(int)0x0c89e854) {
			if (inClassId<=(int)0x0330636f) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0330636f;
			} else {
				return inClassId==(int)0x0c89e854;
			}
		} else {
			return inClassId==(int)0x1618c554;
		}
	} else {
		if (inClassId<=(int)0x4af7dd8e) {
			return inClassId==(int)0x1f4df417 || inClassId==(int)0x4af7dd8e;
		} else {
			return inClassId==(int)0x6b353933;
		}
	}
}

void VerticalScrollbar_obj::setSize(int barSize,int grooveSize){
            	HX_STACKFRAME(&_hx_pos_9edd89f162aa412b_44_setSize)
HXLINE(  45)		this->bar->rect->height = barSize;
HXLINE(  46)		this->groove->rect->height = grooveSize;
HXLINE(  47)		this->range = (grooveSize - barSize);
HXLINE(  48)		this->invRange = (( (Float)(1) ) / ( (Float)(this->range) ));
HXLINE(  49)		this->groove->redraw();
HXLINE(  50)		this->bar->redraw();
HXLINE(  51)		this->setPosition(this->getPosition());
            	}


HX_DEFINE_DYNAMIC_FUNC2(VerticalScrollbar_obj,setSize,(void))

Float VerticalScrollbar_obj::getPosition(){
            	HX_STACKFRAME(&_hx_pos_9edd89f162aa412b_63_getPosition)
HXDLIN(  63)		return this->position;
            	}


HX_DEFINE_DYNAMIC_FUNC0(VerticalScrollbar_obj,getPosition,return )

void VerticalScrollbar_obj::setPosition(Float value){
            	HX_STACKFRAME(&_hx_pos_9edd89f162aa412b_66_setPosition)
HXLINE(  67)		if ((value < 0)) {
HXLINE(  68)			value = ( (Float)(0) );
            		}
            		else {
HXLINE(  69)			if ((value > 1)) {
HXLINE(  70)				value = ( (Float)(1) );
            			}
            		}
HXLINE(  72)		this->position = value;
HXLINE(  73)		this->bar->set_y((( (Float)(this->range) ) * this->position));
HXLINE(  74)		if (::hx::IsNotNull( this->positionChanged )) {
HXLINE(  75)			this->positionChanged->emit(this->position);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(VerticalScrollbar_obj,setPosition,(void))

void VerticalScrollbar_obj::addMouseListeners(){
            	HX_STACKFRAME(&_hx_pos_9edd89f162aa412b_83_addMouseListeners)
HXLINE(  84)		this->groove->addMouseListeners();
HXLINE(  85)		this->groove->clicked->on(this->onGrooveClicked_dyn());
HXLINE(  86)		this->bar->addMouseListeners();
HXLINE(  87)		this->bar->dragging->on(this->onBarDrag_dyn());
            	}


HX_DEFINE_DYNAMIC_FUNC0(VerticalScrollbar_obj,addMouseListeners,(void))

void VerticalScrollbar_obj::onBarDrag(int value){
            	HX_STACKFRAME(&_hx_pos_9edd89f162aa412b_98_onBarDrag)
HXDLIN(  98)		this->setPosition((( (Float)(value) ) * this->invRange));
            	}


HX_DEFINE_DYNAMIC_FUNC1(VerticalScrollbar_obj,onBarDrag,(void))

void VerticalScrollbar_obj::onGrooveClicked(int value){
            	HX_STACKFRAME(&_hx_pos_9edd89f162aa412b_101_onGrooveClicked)
HXLINE( 102)		int barHeight = ::Std_obj::_hx_int(( (Float)(this->bar->rect->height) ));
HXLINE( 103)		int numerator = ::Std_obj::_hx_int((( (Float)(value) ) - (( (Float)(barHeight) ) * ((Float)0.5))));
HXLINE( 105)		this->setPosition((( (Float)(numerator) ) / ( (Float)((this->groove->rect->height - barHeight)) )));
            	}


HX_DEFINE_DYNAMIC_FUNC1(VerticalScrollbar_obj,onGrooveClicked,(void))


::hx::ObjectPtr< VerticalScrollbar_obj > VerticalScrollbar_obj::__new() {
	::hx::ObjectPtr< VerticalScrollbar_obj > __this = new VerticalScrollbar_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< VerticalScrollbar_obj > VerticalScrollbar_obj::__alloc(::hx::Ctx *_hx_ctx) {
	VerticalScrollbar_obj *__this = (VerticalScrollbar_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(VerticalScrollbar_obj), true, "ui.VerticalScrollbar"));
	*(void **)__this = VerticalScrollbar_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

VerticalScrollbar_obj::VerticalScrollbar_obj()
{
}

void VerticalScrollbar_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(VerticalScrollbar);
	HX_MARK_MEMBER_NAME(groove,"groove");
	HX_MARK_MEMBER_NAME(bar,"bar");
	HX_MARK_MEMBER_NAME(position,"position");
	HX_MARK_MEMBER_NAME(range,"range");
	HX_MARK_MEMBER_NAME(invRange,"invRange");
	HX_MARK_MEMBER_NAME(positionChanged,"positionChanged");
	 ::openfl::display::Sprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void VerticalScrollbar_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(groove,"groove");
	HX_VISIT_MEMBER_NAME(bar,"bar");
	HX_VISIT_MEMBER_NAME(position,"position");
	HX_VISIT_MEMBER_NAME(range,"range");
	HX_VISIT_MEMBER_NAME(invRange,"invRange");
	HX_VISIT_MEMBER_NAME(positionChanged,"positionChanged");
	 ::openfl::display::Sprite_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val VerticalScrollbar_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"bar") ) { return ::hx::Val( bar ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"range") ) { return ::hx::Val( range ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"groove") ) { return ::hx::Val( groove ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"setSize") ) { return ::hx::Val( setSize_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"position") ) { return ::hx::Val( position ); }
		if (HX_FIELD_EQ(inName,"invRange") ) { return ::hx::Val( invRange ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"onBarDrag") ) { return ::hx::Val( onBarDrag_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"getPosition") ) { return ::hx::Val( getPosition_dyn() ); }
		if (HX_FIELD_EQ(inName,"setPosition") ) { return ::hx::Val( setPosition_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"positionChanged") ) { return ::hx::Val( positionChanged ); }
		if (HX_FIELD_EQ(inName,"onGrooveClicked") ) { return ::hx::Val( onGrooveClicked_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"addMouseListeners") ) { return ::hx::Val( addMouseListeners_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val VerticalScrollbar_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"bar") ) { bar=inValue.Cast<  ::ui::VerticalScrollbarBar >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"range") ) { range=inValue.Cast< int >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"groove") ) { groove=inValue.Cast<  ::ui::VerticalScrollbarGroove >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"position") ) { position=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"invRange") ) { invRange=inValue.Cast< Float >(); return inValue; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"positionChanged") ) { positionChanged=inValue.Cast<  ::util::Signal >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void VerticalScrollbar_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("groove",fa,9b,23,1c));
	outFields->push(HX_("bar",d3,b1,4a,00));
	outFields->push(HX_("position",a9,a0,fa,ca));
	outFields->push(HX_("range",bd,a5,1f,e4));
	outFields->push(HX_("invRange",0c,7f,53,f9));
	outFields->push(HX_("positionChanged",4b,8f,04,cc));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo VerticalScrollbar_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::ui::VerticalScrollbarGroove */ ,(int)offsetof(VerticalScrollbar_obj,groove),HX_("groove",fa,9b,23,1c)},
	{::hx::fsObject /*  ::ui::VerticalScrollbarBar */ ,(int)offsetof(VerticalScrollbar_obj,bar),HX_("bar",d3,b1,4a,00)},
	{::hx::fsFloat,(int)offsetof(VerticalScrollbar_obj,position),HX_("position",a9,a0,fa,ca)},
	{::hx::fsInt,(int)offsetof(VerticalScrollbar_obj,range),HX_("range",bd,a5,1f,e4)},
	{::hx::fsFloat,(int)offsetof(VerticalScrollbar_obj,invRange),HX_("invRange",0c,7f,53,f9)},
	{::hx::fsObject /*  ::util::Signal */ ,(int)offsetof(VerticalScrollbar_obj,positionChanged),HX_("positionChanged",4b,8f,04,cc)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *VerticalScrollbar_obj_sStaticStorageInfo = 0;
#endif

static ::String VerticalScrollbar_obj_sMemberFields[] = {
	HX_("groove",fa,9b,23,1c),
	HX_("bar",d3,b1,4a,00),
	HX_("position",a9,a0,fa,ca),
	HX_("range",bd,a5,1f,e4),
	HX_("invRange",0c,7f,53,f9),
	HX_("positionChanged",4b,8f,04,cc),
	HX_("setSize",83,e1,d7,11),
	HX_("getPosition",5f,63,ee,f0),
	HX_("setPosition",6b,6a,5b,fb),
	HX_("addMouseListeners",9b,60,3f,cf),
	HX_("onBarDrag",08,a8,77,5c),
	HX_("onGrooveClicked",2e,3d,9b,b3),
	::String(null()) };

::hx::Class VerticalScrollbar_obj::__mClass;

void VerticalScrollbar_obj::__register()
{
	VerticalScrollbar_obj _hx_dummy;
	VerticalScrollbar_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("ui.VerticalScrollbar",d6,bb,64,2b);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(VerticalScrollbar_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< VerticalScrollbar_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = VerticalScrollbar_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = VerticalScrollbar_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace ui
