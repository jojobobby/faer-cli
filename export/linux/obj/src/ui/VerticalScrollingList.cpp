// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_lib_ui_api_Layout
#include <lib/ui/api/Layout.h>
#endif
#ifndef INCLUDED_lib_ui_api_Size
#include <lib/ui/api/Size.h>
#endif
#ifndef INCLUDED_lib_ui_impl_LayoutList
#include <lib/ui/impl/LayoutList.h>
#endif
#ifndef INCLUDED_lib_ui_impl_VerticalLayout
#include <lib/ui/impl/VerticalLayout.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_ui_VerticalScrollbar
#include <ui/VerticalScrollbar.h>
#endif
#ifndef INCLUDED_ui_VerticalScrollingList
#include <ui/VerticalScrollingList.h>
#endif
#ifndef INCLUDED_util_EmptySignal
#include <util/EmptySignal.h>
#endif
#ifndef INCLUDED_util_Signal
#include <util/Signal.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_722a2576ee1f0076_10_new,"ui.VerticalScrollingList","new",0x03ec0455,"ui.VerticalScrollingList.new","ui/VerticalScrollingList.hx",10,0xd688d7bc)
HX_LOCAL_STACK_FRAME(_hx_pos_722a2576ee1f0076_39_setSize,"ui.VerticalScrollingList","setSize",0x4231b3f8,"ui.VerticalScrollingList.setSize","ui/VerticalScrollingList.hx",39,0xd688d7bc)
HX_LOCAL_STACK_FRAME(_hx_pos_722a2576ee1f0076_48_setPadding,"ui.VerticalScrollingList","setPadding",0x0cc7e2fa,"ui.VerticalScrollingList.setPadding","ui/VerticalScrollingList.hx",48,0xd688d7bc)
HX_LOCAL_STACK_FRAME(_hx_pos_722a2576ee1f0076_59_setItems,"ui.VerticalScrollingList","setItems",0xee7f68e9,"ui.VerticalScrollingList.setItems","ui/VerticalScrollingList.hx",59,0xd688d7bc)
HX_LOCAL_STACK_FRAME(_hx_pos_722a2576ee1f0076_75_isScrollbarVisible,"ui.VerticalScrollingList","isScrollbarVisible",0x0e451ce1,"ui.VerticalScrollingList.isScrollbarVisible","ui/VerticalScrollingList.hx",75,0xd688d7bc)
HX_LOCAL_STACK_FRAME(_hx_pos_722a2576ee1f0076_79_makeLayout,"ui.VerticalScrollingList","makeLayout",0x93f3e7e3,"ui.VerticalScrollingList.makeLayout","ui/VerticalScrollingList.hx",79,0xd688d7bc)
HX_LOCAL_STACK_FRAME(_hx_pos_722a2576ee1f0076_82_makeVerticalList,"ui.VerticalScrollingList","makeVerticalList",0x74abe1ed,"ui.VerticalScrollingList.makeVerticalList","ui/VerticalScrollingList.hx",82,0xd688d7bc)
HX_LOCAL_STACK_FRAME(_hx_pos_722a2576ee1f0076_89_refreshScrollbar,"ui.VerticalScrollingList","refreshScrollbar",0x62fcc976,"ui.VerticalScrollingList.refreshScrollbar","ui/VerticalScrollingList.hx",89,0xd688d7bc)
HX_LOCAL_STACK_FRAME(_hx_pos_722a2576ee1f0076_103_updateUiAndDispatchStateChange,"ui.VerticalScrollingList","updateUiAndDispatchStateChange",0xe8d1f7f8,"ui.VerticalScrollingList.updateUiAndDispatchStateChange","ui/VerticalScrollingList.hx",103,0xd688d7bc)
HX_LOCAL_STACK_FRAME(_hx_pos_722a2576ee1f0076_108_updateScrollbarSize,"ui.VerticalScrollingList","updateScrollbarSize",0x60f37df3,"ui.VerticalScrollingList.updateScrollbarSize","ui/VerticalScrollingList.hx",108,0xd688d7bc)
HX_LOCAL_STACK_FRAME(_hx_pos_722a2576ee1f0076_114_makeScrollbar,"ui.VerticalScrollingList","makeScrollbar",0x4c90304d,"ui.VerticalScrollingList.makeScrollbar","ui/VerticalScrollingList.hx",114,0xd688d7bc)
HX_LOCAL_STACK_FRAME(_hx_pos_722a2576ee1f0076_121_onPositionChanged,"ui.VerticalScrollingList","onPositionChanged",0x5e35a7a1,"ui.VerticalScrollingList.onPositionChanged","ui/VerticalScrollingList.hx",121,0xd688d7bc)
namespace ui{

void VerticalScrollingList_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_722a2576ee1f0076_10_new)
HXLINE(  14)		this->scrollStateChanged =  ::util::Signal_obj::__alloc( HX_CTX );
HXLINE(  23)		super::__construct();
HXLINE(  25)		this->makeLayout();
HXLINE(  26)		this->makeVerticalList();
HXLINE(  27)		this->makeScrollbar();
            	}

Dynamic VerticalScrollingList_obj::__CreateEmpty() { return new VerticalScrollingList_obj; }

void *VerticalScrollingList_obj::_hx_vtable = 0;

Dynamic VerticalScrollingList_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< VerticalScrollingList_obj > _hx_result = new VerticalScrollingList_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool VerticalScrollingList_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x13300c45) {
		if (inClassId<=(int)0x0c89e854) {
			if (inClassId<=(int)0x0330636f) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0330636f;
			} else {
				return inClassId==(int)0x0c89e854;
			}
		} else {
			return inClassId==(int)0x13300c45;
		}
	} else {
		if (inClassId<=(int)0x4af7dd8e) {
			return inClassId==(int)0x1f4df417 || inClassId==(int)0x4af7dd8e;
		} else {
			return inClassId==(int)0x6b353933;
		}
	}
}

void VerticalScrollingList_obj::setSize( ::lib::ui::api::Size size){
            	HX_GC_STACKFRAME(&_hx_pos_722a2576ee1f0076_39_setSize)
HXLINE(  40)		this->size = size;
HXLINE(  41)		if (this->isScrollbarVisible()) {
HXLINE(  42)			size =  ::lib::ui::api::Size_obj::__alloc( HX_CTX ,(size->width - 22),size->height);
            		}
HXLINE(  44)		this->list->setSize(size);
HXLINE(  45)		this->refreshScrollbar();
            	}


HX_DEFINE_DYNAMIC_FUNC1(VerticalScrollingList_obj,setSize,(void))

void VerticalScrollingList_obj::setPadding(int padding){
            	HX_STACKFRAME(&_hx_pos_722a2576ee1f0076_48_setPadding)
HXLINE(  49)		this->layout->setPadding(padding);
HXLINE(  50)		this->list->updateLayout();
HXLINE(  51)		this->refreshScrollbar();
            	}


HX_DEFINE_DYNAMIC_FUNC1(VerticalScrollingList_obj,setPadding,(void))

void VerticalScrollingList_obj::setItems(::Array< ::Dynamic> items){
            	HX_STACKFRAME(&_hx_pos_722a2576ee1f0076_59_setItems)
HXDLIN(  59)		this->list->setItems(items);
            	}


HX_DEFINE_DYNAMIC_FUNC1(VerticalScrollingList_obj,setItems,(void))

bool VerticalScrollingList_obj::isScrollbarVisible(){
            	HX_STACKFRAME(&_hx_pos_722a2576ee1f0076_75_isScrollbarVisible)
HXDLIN(  75)		return this->scrollbar->get_visible();
            	}


HX_DEFINE_DYNAMIC_FUNC0(VerticalScrollingList_obj,isScrollbarVisible,return )

void VerticalScrollingList_obj::makeLayout(){
            	HX_GC_STACKFRAME(&_hx_pos_722a2576ee1f0076_79_makeLayout)
HXDLIN(  79)		this->layout =  ::lib::ui::impl::VerticalLayout_obj::__alloc( HX_CTX );
            	}


HX_DEFINE_DYNAMIC_FUNC0(VerticalScrollingList_obj,makeLayout,(void))

void VerticalScrollingList_obj::makeVerticalList(){
            	HX_GC_STACKFRAME(&_hx_pos_722a2576ee1f0076_82_makeVerticalList)
HXLINE(  83)		this->list =  ::lib::ui::impl::LayoutList_obj::__alloc( HX_CTX );
HXLINE(  84)		this->list->itemsChanged->on(this->refreshScrollbar_dyn());
HXLINE(  85)		this->list->setLayout(this->layout);
HXLINE(  86)		this->addChild(this->list);
            	}


HX_DEFINE_DYNAMIC_FUNC0(VerticalScrollingList_obj,makeVerticalList,(void))

void VerticalScrollingList_obj::refreshScrollbar(){
            	HX_STACKFRAME(&_hx_pos_722a2576ee1f0076_89_refreshScrollbar)
HXLINE(  90)		bool isVisible = false;
HXLINE(  92)		int visibleSize = this->list->getSize()->height;
HXLINE(  93)		int itemsSize = this->list->getSizeOfItems()->height;
HXLINE(  94)		isVisible = (itemsSize > visibleSize);
HXLINE(  95)		bool isChanged = (this->scrollbar->get_visible() != isVisible);
HXLINE(  96)		this->scrollbar->set_visible(isVisible);
HXLINE(  97)		if (isVisible) {
HXLINE(  98)			this->updateScrollbarSize(visibleSize,itemsSize);
            		}
HXLINE(  99)		if (isChanged) {
HXLINE( 100)			this->updateUiAndDispatchStateChange(isVisible);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(VerticalScrollingList_obj,refreshScrollbar,(void))

void VerticalScrollingList_obj::updateUiAndDispatchStateChange(bool isVisible){
            	HX_STACKFRAME(&_hx_pos_722a2576ee1f0076_103_updateUiAndDispatchStateChange)
HXLINE( 104)		this->setSize(this->size);
HXLINE( 105)		this->scrollStateChanged->emit(isVisible);
            	}


HX_DEFINE_DYNAMIC_FUNC1(VerticalScrollingList_obj,updateUiAndDispatchStateChange,(void))

void VerticalScrollingList_obj::updateScrollbarSize(int visibleSize,int itemsSize){
            	HX_STACKFRAME(&_hx_pos_722a2576ee1f0076_108_updateScrollbarSize)
HXLINE( 109)		int barSize = ::Std_obj::_hx_int((( (Float)(visibleSize) ) * (( (Float)(visibleSize) ) / ( (Float)(itemsSize) ))));
HXLINE( 110)		this->scrollbar->setSize(barSize,visibleSize);
HXLINE( 111)		 ::ui::VerticalScrollbar _hx_tmp = this->scrollbar;
HXDLIN( 111)		_hx_tmp->set_x(( (Float)((this->list->getSize()->width + 2)) ));
            	}


HX_DEFINE_DYNAMIC_FUNC2(VerticalScrollingList_obj,updateScrollbarSize,(void))

void VerticalScrollingList_obj::makeScrollbar(){
            	HX_GC_STACKFRAME(&_hx_pos_722a2576ee1f0076_114_makeScrollbar)
HXLINE( 115)		this->scrollbar =  ::ui::VerticalScrollbar_obj::__alloc( HX_CTX );
HXLINE( 116)		this->scrollbar->positionChanged->on(this->onPositionChanged_dyn());
HXLINE( 117)		this->scrollbar->set_visible(false);
HXLINE( 118)		this->addChild(this->scrollbar);
            	}


HX_DEFINE_DYNAMIC_FUNC0(VerticalScrollingList_obj,makeScrollbar,(void))

void VerticalScrollingList_obj::onPositionChanged(Float value){
            	HX_STACKFRAME(&_hx_pos_722a2576ee1f0076_121_onPositionChanged)
HXLINE( 122)		int maxOffset = this->list->getSizeOfItems()->height;
HXDLIN( 122)		int maxOffset1 = (maxOffset - this->list->getSize()->height);
HXLINE( 123)		 ::lib::ui::impl::LayoutList _hx_tmp = this->list;
HXDLIN( 123)		_hx_tmp->setOffset(::Std_obj::_hx_int((( (Float)(maxOffset1) ) * value)));
            	}


HX_DEFINE_DYNAMIC_FUNC1(VerticalScrollingList_obj,onPositionChanged,(void))


::hx::ObjectPtr< VerticalScrollingList_obj > VerticalScrollingList_obj::__new() {
	::hx::ObjectPtr< VerticalScrollingList_obj > __this = new VerticalScrollingList_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< VerticalScrollingList_obj > VerticalScrollingList_obj::__alloc(::hx::Ctx *_hx_ctx) {
	VerticalScrollingList_obj *__this = (VerticalScrollingList_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(VerticalScrollingList_obj), true, "ui.VerticalScrollingList"));
	*(void **)__this = VerticalScrollingList_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

VerticalScrollingList_obj::VerticalScrollingList_obj()
{
}

void VerticalScrollingList_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(VerticalScrollingList);
	HX_MARK_MEMBER_NAME(scrollStateChanged,"scrollStateChanged");
	HX_MARK_MEMBER_NAME(layout,"layout");
	HX_MARK_MEMBER_NAME(list,"list");
	HX_MARK_MEMBER_NAME(scrollbar,"scrollbar");
	HX_MARK_MEMBER_NAME(size,"size");
	 ::openfl::display::Sprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void VerticalScrollingList_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(scrollStateChanged,"scrollStateChanged");
	HX_VISIT_MEMBER_NAME(layout,"layout");
	HX_VISIT_MEMBER_NAME(list,"list");
	HX_VISIT_MEMBER_NAME(scrollbar,"scrollbar");
	HX_VISIT_MEMBER_NAME(size,"size");
	 ::openfl::display::Sprite_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val VerticalScrollingList_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"list") ) { return ::hx::Val( list ); }
		if (HX_FIELD_EQ(inName,"size") ) { return ::hx::Val( size ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"layout") ) { return ::hx::Val( layout ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"setSize") ) { return ::hx::Val( setSize_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"setItems") ) { return ::hx::Val( setItems_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"scrollbar") ) { return ::hx::Val( scrollbar ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"setPadding") ) { return ::hx::Val( setPadding_dyn() ); }
		if (HX_FIELD_EQ(inName,"makeLayout") ) { return ::hx::Val( makeLayout_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"makeScrollbar") ) { return ::hx::Val( makeScrollbar_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"makeVerticalList") ) { return ::hx::Val( makeVerticalList_dyn() ); }
		if (HX_FIELD_EQ(inName,"refreshScrollbar") ) { return ::hx::Val( refreshScrollbar_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"onPositionChanged") ) { return ::hx::Val( onPositionChanged_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"scrollStateChanged") ) { return ::hx::Val( scrollStateChanged ); }
		if (HX_FIELD_EQ(inName,"isScrollbarVisible") ) { return ::hx::Val( isScrollbarVisible_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"updateScrollbarSize") ) { return ::hx::Val( updateScrollbarSize_dyn() ); }
		break;
	case 30:
		if (HX_FIELD_EQ(inName,"updateUiAndDispatchStateChange") ) { return ::hx::Val( updateUiAndDispatchStateChange_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val VerticalScrollingList_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"list") ) { list=inValue.Cast<  ::lib::ui::impl::LayoutList >(); return inValue; }
		if (HX_FIELD_EQ(inName,"size") ) { size=inValue.Cast<  ::lib::ui::api::Size >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"layout") ) { layout=inValue.Cast<  ::lib::ui::impl::VerticalLayout >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"scrollbar") ) { scrollbar=inValue.Cast<  ::ui::VerticalScrollbar >(); return inValue; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"scrollStateChanged") ) { scrollStateChanged=inValue.Cast<  ::util::Signal >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void VerticalScrollingList_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("scrollStateChanged",90,3a,88,14));
	outFields->push(HX_("layout",aa,ae,b8,58));
	outFields->push(HX_("list",5e,1c,b3,47));
	outFields->push(HX_("scrollbar",e6,9f,14,3e));
	outFields->push(HX_("size",c1,a0,53,4c));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo VerticalScrollingList_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::util::Signal */ ,(int)offsetof(VerticalScrollingList_obj,scrollStateChanged),HX_("scrollStateChanged",90,3a,88,14)},
	{::hx::fsObject /*  ::lib::ui::impl::VerticalLayout */ ,(int)offsetof(VerticalScrollingList_obj,layout),HX_("layout",aa,ae,b8,58)},
	{::hx::fsObject /*  ::lib::ui::impl::LayoutList */ ,(int)offsetof(VerticalScrollingList_obj,list),HX_("list",5e,1c,b3,47)},
	{::hx::fsObject /*  ::ui::VerticalScrollbar */ ,(int)offsetof(VerticalScrollingList_obj,scrollbar),HX_("scrollbar",e6,9f,14,3e)},
	{::hx::fsObject /*  ::lib::ui::api::Size */ ,(int)offsetof(VerticalScrollingList_obj,size),HX_("size",c1,a0,53,4c)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *VerticalScrollingList_obj_sStaticStorageInfo = 0;
#endif

static ::String VerticalScrollingList_obj_sMemberFields[] = {
	HX_("scrollStateChanged",90,3a,88,14),
	HX_("layout",aa,ae,b8,58),
	HX_("list",5e,1c,b3,47),
	HX_("scrollbar",e6,9f,14,3e),
	HX_("size",c1,a0,53,4c),
	HX_("setSize",83,e1,d7,11),
	HX_("setPadding",4f,7e,5c,23),
	HX_("setItems",fe,14,41,d0),
	HX_("isScrollbarVisible",36,95,94,0d),
	HX_("makeLayout",38,83,88,aa),
	HX_("makeVerticalList",02,2b,c7,ff),
	HX_("refreshScrollbar",8b,12,18,ee),
	HX_("updateUiAndDispatchStateChange",cd,1b,5f,86),
	HX_("updateScrollbarSize",fe,4f,2d,c7),
	HX_("makeScrollbar",18,98,bd,36),
	HX_("onPositionChanged",ec,50,fa,8a),
	::String(null()) };

::hx::Class VerticalScrollingList_obj::__mClass;

void VerticalScrollingList_obj::__register()
{
	VerticalScrollingList_obj _hx_dummy;
	VerticalScrollingList_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("ui.VerticalScrollingList",e3,35,7c,06);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(VerticalScrollingList_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< VerticalScrollingList_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = VerticalScrollingList_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = VerticalScrollingList_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace ui
