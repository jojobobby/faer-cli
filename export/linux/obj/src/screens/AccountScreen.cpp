// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_Global
#include <Global.h>
#endif
#ifndef INCLUDED_account_view_AccountInfoView
#include <account/view/AccountInfoView.h>
#endif
#ifndef INCLUDED_core_PlayerModel
#include <core/PlayerModel.h>
#endif
#ifndef INCLUDED_lime_app_IModule
#include <lime/app/IModule.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_display_Stage
#include <openfl/display/Stage.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_screens_AccountScreen
#include <screens/AccountScreen.h>
#endif
#ifndef INCLUDED_ui_GuildText
#include <ui/GuildText.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_4a23e28b1b0646cc_9_new,"screens.AccountScreen","new",0x54c95aa4,"screens.AccountScreen.new","screens/AccountScreen.hx",9,0xf4fb974d)
HX_LOCAL_STACK_FRAME(_hx_pos_4a23e28b1b0646cc_24_onAdded,"screens.AccountScreen","onAdded",0x58c36f65,"screens.AccountScreen.onAdded","screens/AccountScreen.hx",24,0xf4fb974d)
HX_LOCAL_STACK_FRAME(_hx_pos_4a23e28b1b0646cc_31_setGuild,"screens.AccountScreen","setGuild",0x7d9ae9ed,"screens.AccountScreen.setGuild","screens/AccountScreen.hx",31,0xf4fb974d)
HX_LOCAL_STACK_FRAME(_hx_pos_4a23e28b1b0646cc_37_setAccountInfo,"screens.AccountScreen","setAccountInfo",0x1e48cb75,"screens.AccountScreen.setAccountInfo","screens/AccountScreen.hx",37,0xf4fb974d)
HX_LOCAL_STACK_FRAME(_hx_pos_4a23e28b1b0646cc_46_makeLayers,"screens.AccountScreen","makeLayers",0x6196f04c,"screens.AccountScreen.makeLayers","screens/AccountScreen.hx",46,0xf4fb974d)
HX_LOCAL_STACK_FRAME(_hx_pos_4a23e28b1b0646cc_51_makeGuildText,"screens.AccountScreen","makeGuildText",0x7e308f76,"screens.AccountScreen.makeGuildText","screens/AccountScreen.hx",51,0xf4fb974d)
namespace screens{

void AccountScreen_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_4a23e28b1b0646cc_9_new)
HXLINE(  13)		this->guildRank = 0;
HXLINE(  12)		this->guildName = HX_("",00,00,00,00);
HXLINE(  18)		super::__construct();
HXLINE(  20)		this->makeLayers();
HXLINE(  21)		this->addEventListener(HX_("addedToStage",63,22,55,0c),this->onAdded_dyn(),null(),null(),null());
            	}

Dynamic AccountScreen_obj::__CreateEmpty() { return new AccountScreen_obj; }

void *AccountScreen_obj::_hx_vtable = 0;

Dynamic AccountScreen_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< AccountScreen_obj > _hx_result = new AccountScreen_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool AccountScreen_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x12b7e032) {
		if (inClassId<=(int)0x0c89e854) {
			if (inClassId<=(int)0x0330636f) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0330636f;
			} else {
				return inClassId==(int)0x0c89e854;
			}
		} else {
			return inClassId==(int)0x12b7e032;
		}
	} else {
		if (inClassId<=(int)0x4af7dd8e) {
			return inClassId==(int)0x1f4df417 || inClassId==(int)0x4af7dd8e;
		} else {
			return inClassId==(int)0x6b353933;
		}
	}
}

void AccountScreen_obj::onAdded( ::openfl::events::Event _){
            	HX_GC_STACKFRAME(&_hx_pos_4a23e28b1b0646cc_24_onAdded)
HXLINE(  25)		this->removeEventListener(HX_("addedToStage",63,22,55,0c),this->onAdded_dyn(),null());
HXLINE(  27)		::String _hx_tmp = ::Global_obj::playerModel->getGuildName();
HXDLIN(  27)		this->setGuild(_hx_tmp,::Global_obj::playerModel->getGuildRank());
HXLINE(  28)		this->setAccountInfo( ::account::view::AccountInfoView_obj::__alloc( HX_CTX ));
            	}


HX_DEFINE_DYNAMIC_FUNC1(AccountScreen_obj,onAdded,(void))

void AccountScreen_obj::setGuild(::String guildName,int guildRank){
            	HX_STACKFRAME(&_hx_pos_4a23e28b1b0646cc_31_setGuild)
HXLINE(  32)		this->guildName = guildName;
HXLINE(  33)		this->guildRank = guildRank;
HXLINE(  34)		this->makeGuildText();
            	}


HX_DEFINE_DYNAMIC_FUNC2(AccountScreen_obj,setGuild,(void))

void AccountScreen_obj::setAccountInfo( ::account::view::AccountInfoView accountInfo){
            	HX_STACKFRAME(&_hx_pos_4a23e28b1b0646cc_37_setAccountInfo)
HXLINE(  39)		this->accountInfo = accountInfo;
HXLINE(  38)		 ::openfl::display::DisplayObject display = ::hx::TCast<  ::openfl::display::DisplayObject >::cast(accountInfo);
HXLINE(  41)		display->set_x(( (Float)((this->stage->stageWidth - 10)) ));
HXLINE(  42)		display->set_y(( (Float)(2) ));
HXLINE(  43)		this->accountInfoLayer->addChild(display);
            	}


HX_DEFINE_DYNAMIC_FUNC1(AccountScreen_obj,setAccountInfo,(void))

void AccountScreen_obj::makeLayers(){
            	HX_GC_STACKFRAME(&_hx_pos_4a23e28b1b0646cc_46_makeLayers)
HXLINE(  47)		this->addChild((this->guildLayer =  ::openfl::display::Sprite_obj::__alloc( HX_CTX )));
HXLINE(  48)		this->addChild((this->accountInfoLayer =  ::openfl::display::Sprite_obj::__alloc( HX_CTX )));
            	}


HX_DEFINE_DYNAMIC_FUNC0(AccountScreen_obj,makeLayers,(void))

void AccountScreen_obj::makeGuildText(){
            	HX_GC_STACKFRAME(&_hx_pos_4a23e28b1b0646cc_51_makeGuildText)
HXLINE(  52)		this->guildText =  ::ui::GuildText_obj::__alloc( HX_CTX ,this->guildName,this->guildRank,null());
HXLINE(  53)		this->guildText->set_x(( (Float)(92) ));
HXLINE(  54)		this->guildText->set_y(( (Float)(6) ));
HXLINE(  55)		this->guildLayer->addChild(this->guildText);
            	}


HX_DEFINE_DYNAMIC_FUNC0(AccountScreen_obj,makeGuildText,(void))


::hx::ObjectPtr< AccountScreen_obj > AccountScreen_obj::__new() {
	::hx::ObjectPtr< AccountScreen_obj > __this = new AccountScreen_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< AccountScreen_obj > AccountScreen_obj::__alloc(::hx::Ctx *_hx_ctx) {
	AccountScreen_obj *__this = (AccountScreen_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(AccountScreen_obj), true, "screens.AccountScreen"));
	*(void **)__this = AccountScreen_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

AccountScreen_obj::AccountScreen_obj()
{
}

void AccountScreen_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(AccountScreen);
	HX_MARK_MEMBER_NAME(guildLayer,"guildLayer");
	HX_MARK_MEMBER_NAME(accountInfoLayer,"accountInfoLayer");
	HX_MARK_MEMBER_NAME(guildName,"guildName");
	HX_MARK_MEMBER_NAME(guildRank,"guildRank");
	HX_MARK_MEMBER_NAME(guildText,"guildText");
	HX_MARK_MEMBER_NAME(accountInfo,"accountInfo");
	 ::openfl::display::Sprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void AccountScreen_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(guildLayer,"guildLayer");
	HX_VISIT_MEMBER_NAME(accountInfoLayer,"accountInfoLayer");
	HX_VISIT_MEMBER_NAME(guildName,"guildName");
	HX_VISIT_MEMBER_NAME(guildRank,"guildRank");
	HX_VISIT_MEMBER_NAME(guildText,"guildText");
	HX_VISIT_MEMBER_NAME(accountInfo,"accountInfo");
	 ::openfl::display::Sprite_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val AccountScreen_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"onAdded") ) { return ::hx::Val( onAdded_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"setGuild") ) { return ::hx::Val( setGuild_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"guildName") ) { return ::hx::Val( guildName ); }
		if (HX_FIELD_EQ(inName,"guildRank") ) { return ::hx::Val( guildRank ); }
		if (HX_FIELD_EQ(inName,"guildText") ) { return ::hx::Val( guildText ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"guildLayer") ) { return ::hx::Val( guildLayer ); }
		if (HX_FIELD_EQ(inName,"makeLayers") ) { return ::hx::Val( makeLayers_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"accountInfo") ) { return ::hx::Val( accountInfo ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"makeGuildText") ) { return ::hx::Val( makeGuildText_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"setAccountInfo") ) { return ::hx::Val( setAccountInfo_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"accountInfoLayer") ) { return ::hx::Val( accountInfoLayer ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val AccountScreen_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"guildName") ) { guildName=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"guildRank") ) { guildRank=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"guildText") ) { guildText=inValue.Cast<  ::ui::GuildText >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"guildLayer") ) { guildLayer=inValue.Cast<  ::openfl::display::Sprite >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"accountInfo") ) { accountInfo=inValue.Cast<  ::account::view::AccountInfoView >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"accountInfoLayer") ) { accountInfoLayer=inValue.Cast<  ::openfl::display::Sprite >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void AccountScreen_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("guildLayer",1e,27,a8,c5));
	outFields->push(HX_("accountInfoLayer",16,d0,75,dc));
	outFields->push(HX_("guildName",9e,b5,f2,07));
	outFields->push(HX_("guildRank",ff,90,97,0a));
	outFields->push(HX_("guildText",00,10,ed,0b));
	outFields->push(HX_("accountInfo",bb,bb,ee,88));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo AccountScreen_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::openfl::display::Sprite */ ,(int)offsetof(AccountScreen_obj,guildLayer),HX_("guildLayer",1e,27,a8,c5)},
	{::hx::fsObject /*  ::openfl::display::Sprite */ ,(int)offsetof(AccountScreen_obj,accountInfoLayer),HX_("accountInfoLayer",16,d0,75,dc)},
	{::hx::fsString,(int)offsetof(AccountScreen_obj,guildName),HX_("guildName",9e,b5,f2,07)},
	{::hx::fsInt,(int)offsetof(AccountScreen_obj,guildRank),HX_("guildRank",ff,90,97,0a)},
	{::hx::fsObject /*  ::ui::GuildText */ ,(int)offsetof(AccountScreen_obj,guildText),HX_("guildText",00,10,ed,0b)},
	{::hx::fsObject /*  ::account::view::AccountInfoView */ ,(int)offsetof(AccountScreen_obj,accountInfo),HX_("accountInfo",bb,bb,ee,88)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *AccountScreen_obj_sStaticStorageInfo = 0;
#endif

static ::String AccountScreen_obj_sMemberFields[] = {
	HX_("guildLayer",1e,27,a8,c5),
	HX_("accountInfoLayer",16,d0,75,dc),
	HX_("guildName",9e,b5,f2,07),
	HX_("guildRank",ff,90,97,0a),
	HX_("guildText",00,10,ed,0b),
	HX_("accountInfo",bb,bb,ee,88),
	HX_("onAdded",21,73,81,b2),
	HX_("setGuild",b1,2a,20,aa),
	HX_("setAccountInfo",39,f7,ac,30),
	HX_("makeLayers",10,ea,80,aa),
	HX_("makeGuildText",32,08,96,04),
	::String(null()) };

::hx::Class AccountScreen_obj::__mClass;

void AccountScreen_obj::__register()
{
	AccountScreen_obj _hx_dummy;
	AccountScreen_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("screens.AccountScreen",b2,78,1e,3c);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(AccountScreen_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< AccountScreen_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = AccountScreen_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = AccountScreen_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace screens
