// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_Global
#include <Global.h>
#endif
#ifndef INCLUDED_Xml
#include <Xml.h>
#endif
#ifndef INCLUDED_appengine_SavedCharacter
#include <appengine/SavedCharacter.h>
#endif
#ifndef INCLUDED_characters_CharacterModel
#include <characters/CharacterModel.h>
#endif
#ifndef INCLUDED_characters_ConfirmDeleteCharacterDialog
#include <characters/ConfirmDeleteCharacterDialog.h>
#endif
#ifndef INCLUDED_classes_model_CharacterClass
#include <classes/model/CharacterClass.h>
#endif
#ifndef INCLUDED_classes_model_CharacterSkin
#include <classes/model/CharacterSkin.h>
#endif
#ifndef INCLUDED_classes_model_CharacterSkins
#include <classes/model/CharacterSkins.h>
#endif
#ifndef INCLUDED_classes_model_ClassModel
#include <classes/model/ClassModel.h>
#endif
#ifndef INCLUDED_core_Layers
#include <core/Layers.h>
#endif
#ifndef INCLUDED_game_model_GameInitData
#include <game/model/GameInitData.h>
#endif
#ifndef INCLUDED_lime_app_IModule
#include <lime/app/IModule.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_display_Stage
#include <openfl/display/Stage.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_MouseEvent
#include <openfl/events/MouseEvent.h>
#endif
#ifndef INCLUDED_openfl_filters_BitmapFilter
#include <openfl/filters/BitmapFilter.h>
#endif
#ifndef INCLUDED_openfl_filters_DropShadowFilter
#include <openfl/filters/DropShadowFilter.h>
#endif
#ifndef INCLUDED_openfl_text_TextField
#include <openfl/text/TextField.h>
#endif
#ifndef INCLUDED_screens_charrects_CharacterRect
#include <screens/charrects/CharacterRect.h>
#endif
#ifndef INCLUDED_screens_charrects_CurrentCharacterRect
#include <screens/charrects/CurrentCharacterRect.h>
#endif
#ifndef INCLUDED_screens_events_DeleteCharacterEvent
#include <screens/events/DeleteCharacterEvent.h>
#endif
#ifndef INCLUDED_ui_DeleteXGraphic
#include <ui/DeleteXGraphic.h>
#endif
#ifndef INCLUDED_ui_SimpleText
#include <ui/SimpleText.h>
#endif
#ifndef INCLUDED_ui_dialogs_DialogsView
#include <ui/dialogs/DialogsView.h>
#endif
#ifndef INCLUDED_ui_tooltip_MyPlayerToolTip
#include <ui/tooltip/MyPlayerToolTip.h>
#endif
#ifndef INCLUDED_ui_tooltip_ToolTip
#include <ui/tooltip/ToolTip.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_d1bcdd3698d2de6f_19_new,"screens.charrects.CurrentCharacterRect","new",0xe4fbd3e2,"screens.charrects.CurrentCharacterRect.new","screens/charrects/CurrentCharacterRect.hx",19,0x402f7acc)
HX_LOCAL_STACK_FRAME(_hx_pos_d1bcdd3698d2de6f_65_onAdded,"screens.charrects.CurrentCharacterRect","onAdded",0x18fe5fa3,"screens.charrects.CurrentCharacterRect.onAdded","screens/charrects/CurrentCharacterRect.hx",65,0x402f7acc)
HX_LOCAL_STACK_FRAME(_hx_pos_d1bcdd3698d2de6f_70_onRemoved,"screens.charrects.CurrentCharacterRect","onRemoved",0x7b9d6943,"screens.charrects.CurrentCharacterRect.onRemoved","screens/charrects/CurrentCharacterRect.hx",70,0x402f7acc)
HX_LOCAL_STACK_FRAME(_hx_pos_d1bcdd3698d2de6f_79_onSelected,"screens.charrects.CurrentCharacterRect","onSelected",0xb2704f58,"screens.charrects.CurrentCharacterRect.onSelected","screens/charrects/CurrentCharacterRect.hx",79,0x402f7acc)
HX_LOCAL_STACK_FRAME(_hx_pos_d1bcdd3698d2de6f_91_onDeleteCharacter,"screens.charrects.CurrentCharacterRect","onDeleteCharacter",0x987a42a1,"screens.charrects.CurrentCharacterRect.onDeleteCharacter","screens/charrects/CurrentCharacterRect.hx",91,0x402f7acc)
HX_LOCAL_STACK_FRAME(_hx_pos_d1bcdd3698d2de6f_96_setIcon,"screens.charrects.CurrentCharacterRect","setIcon",0x71b414bd,"screens.charrects.CurrentCharacterRect.setIcon","screens/charrects/CurrentCharacterRect.hx",96,0x402f7acc)
HX_LOCAL_STACK_FRAME(_hx_pos_d1bcdd3698d2de6f_105_onMouseOver,"screens.charrects.CurrentCharacterRect","onMouseOver",0xd7ca827c,"screens.charrects.CurrentCharacterRect.onMouseOver","screens/charrects/CurrentCharacterRect.hx",105,0x402f7acc)
HX_LOCAL_STACK_FRAME(_hx_pos_d1bcdd3698d2de6f_112_onRollOut,"screens.charrects.CurrentCharacterRect","onRollOut",0xe5af42b4,"screens.charrects.CurrentCharacterRect.onRollOut","screens/charrects/CurrentCharacterRect.hx",112,0x402f7acc)
HX_LOCAL_STACK_FRAME(_hx_pos_d1bcdd3698d2de6f_117_onDeleteDown,"screens.charrects.CurrentCharacterRect","onDeleteDown",0x398ef46a,"screens.charrects.CurrentCharacterRect.onDeleteDown","screens/charrects/CurrentCharacterRect.hx",117,0x402f7acc)
HX_LOCAL_STACK_FRAME(_hx_pos_d1bcdd3698d2de6f_31_removeToolTip,"screens.charrects.CurrentCharacterRect","removeToolTip",0x960afb01,"screens.charrects.CurrentCharacterRect.removeToolTip","screens/charrects/CurrentCharacterRect.hx",31,0x402f7acc)
HX_LOCAL_STACK_FRAME(_hx_pos_d1bcdd3698d2de6f_20_boot,"screens.charrects.CurrentCharacterRect","boot",0x6f769270,"screens.charrects.CurrentCharacterRect.boot","screens/charrects/CurrentCharacterRect.hx",20,0x402f7acc)
namespace screens{
namespace charrects{

void CurrentCharacterRect_obj::__construct(::String charName, ::classes::model::CharacterClass charType, ::appengine::SavedCharacter savedChar){
            	HX_GC_STACKFRAME(&_hx_pos_d1bcdd3698d2de6f_19_new)
HXLINE(  22)		this->charName = HX_("",00,00,00,00);
HXLINE(  39)		super::__construct(6052956,8355711);
HXLINE(  40)		this->charName = charName;
HXLINE(  41)		this->charType = charType;
HXLINE(  42)		this->savedChar = savedChar;
HXLINE(  43)		this->makeContainer();
HXLINE(  45)		this->classNameText =  ::ui::SimpleText_obj::__alloc( HX_CTX ,18,16777215,false,0,0,null());
HXLINE(  46)		this->classNameText->setBold(true);
HXLINE(  47)		 ::ui::SimpleText _hx_tmp = this->classNameText;
HXDLIN(  47)		::String _hx_tmp1 = ((HX_("T",54,00,00,00) + this->savedChar->tier()) + HX_(" ",20,00,00,00));
HXDLIN(  47)		_hx_tmp->set_text((_hx_tmp1 + this->charType->name));
HXLINE(  48)		this->classNameText->updateMetrics();
HXLINE(  49)		 ::ui::SimpleText _hx_tmp2 = this->classNameText;
HXDLIN(  49)		_hx_tmp2->set_filters(::Array_obj< ::Dynamic>::__new(1)->init(0, ::openfl::filters::DropShadowFilter_obj::__alloc( HX_CTX ,0,0,0,1,8,8,null(),null(),null(),null(),null())));
HXLINE(  50)		 ::ui::SimpleText _hx_tmp3 = this->classNameText;
HXDLIN(  50)		_hx_tmp3->set_x(((( (Float)(384) ) - this->classNameText->get_width()) / ( (Float)(2) )));
HXLINE(  51)		 ::ui::SimpleText _hx_tmp4 = this->classNameText;
HXDLIN(  51)		_hx_tmp4->set_y((((( (Float)(59) ) - this->classNameText->get_height()) / ( (Float)(2) )) - ( (Float)(3) )));
HXLINE(  52)		this->selectContainer->addChild(this->classNameText);
HXLINE(  53)		this->selectContainer->addEventListener(HX_("click",48,7c,5e,48),this->onSelected_dyn(),null(),null(),null());
HXLINE(  55)		this->deleteButton =  ::ui::DeleteXGraphic_obj::__alloc( HX_CTX );
HXLINE(  56)		this->deleteButton->addEventListener(HX_("mouseDown",27,b1,c2,ee),this->onDeleteDown_dyn(),null(),null(),null());
HXLINE(  57)		this->deleteButton->set_x(( (Float)(344) ));
HXLINE(  58)		 ::openfl::display::Sprite _hx_tmp5 = this->deleteButton;
HXDLIN(  58)		_hx_tmp5->set_y(((( (Float)(59) ) - this->deleteButton->get_height()) * ((Float)0.5)));
HXLINE(  59)		this->addChild(this->deleteButton);
HXLINE(  60)		this->deleteButton->addEventListener(HX_("click",48,7c,5e,48),this->onDeleteCharacter_dyn(),null(),null(),null());
HXLINE(  62)		this->addEventListener(HX_("addedToStage",63,22,55,0c),this->onAdded_dyn(),null(),null(),null());
            	}

Dynamic CurrentCharacterRect_obj::__CreateEmpty() { return new CurrentCharacterRect_obj; }

void *CurrentCharacterRect_obj::_hx_vtable = 0;

Dynamic CurrentCharacterRect_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< CurrentCharacterRect_obj > _hx_result = new CurrentCharacterRect_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool CurrentCharacterRect_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x2acdcde6) {
		if (inClassId<=(int)0x0c89e854) {
			if (inClassId<=(int)0x0330636f) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0330636f;
			} else {
				return inClassId==(int)0x0c89e854;
			}
		} else {
			return inClassId==(int)0x1f4df417 || inClassId==(int)0x2acdcde6;
		}
	} else {
		if (inClassId<=(int)0x4af7dd8e) {
			return inClassId==(int)0x3baa690f || inClassId==(int)0x4af7dd8e;
		} else {
			return inClassId==(int)0x6b353933;
		}
	}
}

void CurrentCharacterRect_obj::onAdded( ::openfl::events::Event _){
            	HX_STACKFRAME(&_hx_pos_d1bcdd3698d2de6f_65_onAdded)
HXLINE(  66)		this->removeEventListener(HX_("addedToStage",63,22,55,0c),this->onAdded_dyn(),null());
HXLINE(  67)		this->addEventListener(HX_("removedFromStage",34,21,76,ba),this->onRemoved_dyn(),null(),null(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(CurrentCharacterRect_obj,onAdded,(void))

void CurrentCharacterRect_obj::onRemoved( ::openfl::events::Event _){
            	HX_STACKFRAME(&_hx_pos_d1bcdd3698d2de6f_70_onRemoved)
HXLINE(  71)		this->removeEventListener(HX_("removedFromStage",34,21,76,ba),this->onRemoved_dyn(),null());
HXLINE(  73)		this->selectContainer->removeEventListener(HX_("click",48,7c,5e,48),this->onSelected_dyn(),null());
HXLINE(  74)		this->deleteButton->removeEventListener(HX_("click",48,7c,5e,48),this->onDeleteCharacter_dyn(),null());
HXLINE(  76)		::screens::charrects::CurrentCharacterRect_obj::removeToolTip();
            	}


HX_DEFINE_DYNAMIC_FUNC1(CurrentCharacterRect_obj,onRemoved,(void))

void CurrentCharacterRect_obj::onSelected( ::openfl::events::MouseEvent _){
            	HX_GC_STACKFRAME(&_hx_pos_d1bcdd3698d2de6f_79_onSelected)
HXLINE(  80)		 ::classes::model::ClassModel characterClass = ::Global_obj::classModel;
HXDLIN(  80)		 ::classes::model::CharacterClass characterClass1 = characterClass->getCharacterClass(( (int)(this->savedChar->objectType()) ));
HXLINE(  81)		characterClass1->setIsSelected(true);
HXLINE(  82)		 ::classes::model::CharacterSkins characterClass2 = characterClass1->skins;
HXDLIN(  82)		characterClass2->getSkin(( (int)(this->savedChar->skinType()) ))->setIsSelected(true);
HXLINE(  84)		 ::game::model::GameInitData data =  ::game::model::GameInitData_obj::__alloc( HX_CTX );
HXLINE(  85)		data->createCharacter = false;
HXLINE(  86)		data->charId = ( (int)(this->savedChar->charId()) );
HXLINE(  87)		data->gameId = -2;
HXLINE(  88)		::Global_obj::playGame(data);
            	}


HX_DEFINE_DYNAMIC_FUNC1(CurrentCharacterRect_obj,onSelected,(void))

void CurrentCharacterRect_obj::onDeleteCharacter( ::openfl::events::MouseEvent _){
            	HX_GC_STACKFRAME(&_hx_pos_d1bcdd3698d2de6f_91_onDeleteCharacter)
HXLINE(  92)		::Global_obj::charModel->select(this->savedChar);
HXLINE(  93)		 ::ui::dialogs::DialogsView _hx_tmp = ::Global_obj::layers->dialogs;
HXDLIN(  93)		_hx_tmp->openDialog( ::characters::ConfirmDeleteCharacterDialog_obj::__alloc( HX_CTX ));
            	}


HX_DEFINE_DYNAMIC_FUNC1(CurrentCharacterRect_obj,onDeleteCharacter,(void))

void CurrentCharacterRect_obj::setIcon( ::openfl::display::DisplayObject value){
            	HX_STACKFRAME(&_hx_pos_d1bcdd3698d2de6f_96_setIcon)
HXLINE(  97)		if (::hx::IsNotNull( this->icon )) {
HXLINE(  98)			this->selectContainer->removeChild(this->icon);
            		}
HXLINE(  99)		this->icon = value;
HXLINE( 100)		 ::openfl::display::DisplayObject _hx_tmp = this->icon;
HXDLIN( 100)		_hx_tmp->set_x(this->icon->set_y(( (Float)(3) )));
HXLINE( 101)		if (::hx::IsNotNull( this->icon )) {
HXLINE( 102)			this->selectContainer->addChild(this->icon);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(CurrentCharacterRect_obj,setIcon,(void))

void CurrentCharacterRect_obj::onMouseOver( ::openfl::events::MouseEvent event){
            	HX_GC_STACKFRAME(&_hx_pos_d1bcdd3698d2de6f_105_onMouseOver)
HXLINE( 106)		this->super::onMouseOver(event);
HXLINE( 107)		::screens::charrects::CurrentCharacterRect_obj::removeToolTip();
HXLINE( 108)		::screens::charrects::CurrentCharacterRect_obj::toolTip =  ::ui::tooltip::MyPlayerToolTip_obj::__alloc( HX_CTX ,this->charName,this->savedChar->charXML);
HXLINE( 109)		this->stage->addChild(::screens::charrects::CurrentCharacterRect_obj::toolTip);
            	}


void CurrentCharacterRect_obj::onRollOut( ::openfl::events::MouseEvent event){
            	HX_STACKFRAME(&_hx_pos_d1bcdd3698d2de6f_112_onRollOut)
HXLINE( 113)		this->super::onRollOut(event);
HXLINE( 114)		::screens::charrects::CurrentCharacterRect_obj::removeToolTip();
            	}


void CurrentCharacterRect_obj::onDeleteDown( ::openfl::events::MouseEvent event){
            	HX_GC_STACKFRAME(&_hx_pos_d1bcdd3698d2de6f_117_onDeleteDown)
HXLINE( 118)		event->stopImmediatePropagation();
HXLINE( 119)		this->dispatchEvent( ::screens::events::DeleteCharacterEvent_obj::__alloc( HX_CTX ,this->savedChar));
            	}


HX_DEFINE_DYNAMIC_FUNC1(CurrentCharacterRect_obj,onDeleteDown,(void))

 ::ui::tooltip::ToolTip CurrentCharacterRect_obj::toolTip;

void CurrentCharacterRect_obj::removeToolTip(){
            	HX_STACKFRAME(&_hx_pos_d1bcdd3698d2de6f_31_removeToolTip)
HXDLIN(  31)		if (::hx::IsNotNull( ::screens::charrects::CurrentCharacterRect_obj::toolTip )) {
HXLINE(  32)			bool _hx_tmp;
HXDLIN(  32)			if (::hx::IsNotNull( ::screens::charrects::CurrentCharacterRect_obj::toolTip->parent )) {
HXLINE(  32)				_hx_tmp = ::screens::charrects::CurrentCharacterRect_obj::toolTip->parent->contains(::screens::charrects::CurrentCharacterRect_obj::toolTip);
            			}
            			else {
HXLINE(  32)				_hx_tmp = false;
            			}
HXDLIN(  32)			if (_hx_tmp) {
HXLINE(  33)				::screens::charrects::CurrentCharacterRect_obj::toolTip->parent->removeChild(::screens::charrects::CurrentCharacterRect_obj::toolTip);
            			}
HXLINE(  34)			::screens::charrects::CurrentCharacterRect_obj::toolTip = null();
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(CurrentCharacterRect_obj,removeToolTip,(void))


::hx::ObjectPtr< CurrentCharacterRect_obj > CurrentCharacterRect_obj::__new(::String charName, ::classes::model::CharacterClass charType, ::appengine::SavedCharacter savedChar) {
	::hx::ObjectPtr< CurrentCharacterRect_obj > __this = new CurrentCharacterRect_obj();
	__this->__construct(charName,charType,savedChar);
	return __this;
}

::hx::ObjectPtr< CurrentCharacterRect_obj > CurrentCharacterRect_obj::__alloc(::hx::Ctx *_hx_ctx,::String charName, ::classes::model::CharacterClass charType, ::appengine::SavedCharacter savedChar) {
	CurrentCharacterRect_obj *__this = (CurrentCharacterRect_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(CurrentCharacterRect_obj), true, "screens.charrects.CurrentCharacterRect"));
	*(void **)__this = CurrentCharacterRect_obj::_hx_vtable;
	__this->__construct(charName,charType,savedChar);
	return __this;
}

CurrentCharacterRect_obj::CurrentCharacterRect_obj()
{
}

void CurrentCharacterRect_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(CurrentCharacterRect);
	HX_MARK_MEMBER_NAME(charName,"charName");
	HX_MARK_MEMBER_NAME(savedChar,"savedChar");
	HX_MARK_MEMBER_NAME(charType,"charType");
	HX_MARK_MEMBER_NAME(classNameText,"classNameText");
	HX_MARK_MEMBER_NAME(deleteButton,"deleteButton");
	HX_MARK_MEMBER_NAME(icon,"icon");
	 ::screens::charrects::CharacterRect_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void CurrentCharacterRect_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(charName,"charName");
	HX_VISIT_MEMBER_NAME(savedChar,"savedChar");
	HX_VISIT_MEMBER_NAME(charType,"charType");
	HX_VISIT_MEMBER_NAME(classNameText,"classNameText");
	HX_VISIT_MEMBER_NAME(deleteButton,"deleteButton");
	HX_VISIT_MEMBER_NAME(icon,"icon");
	 ::screens::charrects::CharacterRect_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val CurrentCharacterRect_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"icon") ) { return ::hx::Val( icon ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"onAdded") ) { return ::hx::Val( onAdded_dyn() ); }
		if (HX_FIELD_EQ(inName,"setIcon") ) { return ::hx::Val( setIcon_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"charName") ) { return ::hx::Val( charName ); }
		if (HX_FIELD_EQ(inName,"charType") ) { return ::hx::Val( charType ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"savedChar") ) { return ::hx::Val( savedChar ); }
		if (HX_FIELD_EQ(inName,"onRemoved") ) { return ::hx::Val( onRemoved_dyn() ); }
		if (HX_FIELD_EQ(inName,"onRollOut") ) { return ::hx::Val( onRollOut_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"onSelected") ) { return ::hx::Val( onSelected_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"onMouseOver") ) { return ::hx::Val( onMouseOver_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"deleteButton") ) { return ::hx::Val( deleteButton ); }
		if (HX_FIELD_EQ(inName,"onDeleteDown") ) { return ::hx::Val( onDeleteDown_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"classNameText") ) { return ::hx::Val( classNameText ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"onDeleteCharacter") ) { return ::hx::Val( onDeleteCharacter_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool CurrentCharacterRect_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"toolTip") ) { outValue = ( toolTip ); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"removeToolTip") ) { outValue = removeToolTip_dyn(); return true; }
	}
	return false;
}

::hx::Val CurrentCharacterRect_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"icon") ) { icon=inValue.Cast<  ::openfl::display::DisplayObject >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"charName") ) { charName=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"charType") ) { charType=inValue.Cast<  ::classes::model::CharacterClass >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"savedChar") ) { savedChar=inValue.Cast<  ::appengine::SavedCharacter >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"deleteButton") ) { deleteButton=inValue.Cast<  ::openfl::display::Sprite >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"classNameText") ) { classNameText=inValue.Cast<  ::ui::SimpleText >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool CurrentCharacterRect_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"toolTip") ) { toolTip=ioValue.Cast<  ::ui::tooltip::ToolTip >(); return true; }
	}
	return false;
}

void CurrentCharacterRect_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("charName",41,20,5f,a3));
	outFields->push(HX_("savedChar",fd,24,2a,bc));
	outFields->push(HX_("charType",b0,a0,68,a7));
	outFields->push(HX_("classNameText",f0,18,92,d1));
	outFields->push(HX_("deleteButton",7d,88,78,40));
	outFields->push(HX_("icon",79,e7,b2,45));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo CurrentCharacterRect_obj_sMemberStorageInfo[] = {
	{::hx::fsString,(int)offsetof(CurrentCharacterRect_obj,charName),HX_("charName",41,20,5f,a3)},
	{::hx::fsObject /*  ::appengine::SavedCharacter */ ,(int)offsetof(CurrentCharacterRect_obj,savedChar),HX_("savedChar",fd,24,2a,bc)},
	{::hx::fsObject /*  ::classes::model::CharacterClass */ ,(int)offsetof(CurrentCharacterRect_obj,charType),HX_("charType",b0,a0,68,a7)},
	{::hx::fsObject /*  ::ui::SimpleText */ ,(int)offsetof(CurrentCharacterRect_obj,classNameText),HX_("classNameText",f0,18,92,d1)},
	{::hx::fsObject /*  ::openfl::display::Sprite */ ,(int)offsetof(CurrentCharacterRect_obj,deleteButton),HX_("deleteButton",7d,88,78,40)},
	{::hx::fsObject /*  ::openfl::display::DisplayObject */ ,(int)offsetof(CurrentCharacterRect_obj,icon),HX_("icon",79,e7,b2,45)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo CurrentCharacterRect_obj_sStaticStorageInfo[] = {
	{::hx::fsObject /*  ::ui::tooltip::ToolTip */ ,(void *) &CurrentCharacterRect_obj::toolTip,HX_("toolTip",e3,64,74,6a)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static ::String CurrentCharacterRect_obj_sMemberFields[] = {
	HX_("charName",41,20,5f,a3),
	HX_("savedChar",fd,24,2a,bc),
	HX_("charType",b0,a0,68,a7),
	HX_("classNameText",f0,18,92,d1),
	HX_("deleteButton",7d,88,78,40),
	HX_("icon",79,e7,b2,45),
	HX_("onAdded",21,73,81,b2),
	HX_("onRemoved",41,d8,aa,ca),
	HX_("onSelected",9a,fe,23,8f),
	HX_("onDeleteCharacter",9f,df,2b,43),
	HX_("setIcon",3b,28,37,0b),
	HX_("onMouseOver",fa,2c,50,18),
	HX_("onRollOut",b2,b1,bc,34),
	HX_("onDeleteDown",2c,78,fe,6d),
	::String(null()) };

static void CurrentCharacterRect_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(CurrentCharacterRect_obj::toolTip,"toolTip");
};

#ifdef HXCPP_VISIT_ALLOCS
static void CurrentCharacterRect_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(CurrentCharacterRect_obj::toolTip,"toolTip");
};

#endif

::hx::Class CurrentCharacterRect_obj::__mClass;

static ::String CurrentCharacterRect_obj_sStaticFields[] = {
	HX_("toolTip",e3,64,74,6a),
	HX_("removeToolTip",ff,c0,2e,43),
	::String(null())
};

void CurrentCharacterRect_obj::__register()
{
	CurrentCharacterRect_obj _hx_dummy;
	CurrentCharacterRect_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("screens.charrects.CurrentCharacterRect",f0,fa,8f,f5);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &CurrentCharacterRect_obj::__GetStatic;
	__mClass->mSetStaticField = &CurrentCharacterRect_obj::__SetStatic;
	__mClass->mMarkFunc = CurrentCharacterRect_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(CurrentCharacterRect_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(CurrentCharacterRect_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< CurrentCharacterRect_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = CurrentCharacterRect_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = CurrentCharacterRect_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = CurrentCharacterRect_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void CurrentCharacterRect_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_d1bcdd3698d2de6f_20_boot)
HXDLIN(  20)		toolTip = null();
            	}
}

} // end namespace screens
} // end namespace charrects
