// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_appengine_SavedCharacter
#include <appengine/SavedCharacter.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_screens_events_DeleteCharacterEvent
#include <screens/events/DeleteCharacterEvent.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_15925d3ebc92cb31_9_new,"screens.events.DeleteCharacterEvent","new",0x8e41515c,"screens.events.DeleteCharacterEvent.new","screens/events/DeleteCharacterEvent.hx",9,0x5366df74)
namespace screens{
namespace events{

void DeleteCharacterEvent_obj::__construct( ::appengine::SavedCharacter savedChar){
            	HX_STACKFRAME(&_hx_pos_15925d3ebc92cb31_9_new)
HXLINE(  10)		super::__construct(HX_("DELETE_CHARACTER_EVENT",30,54,d2,fc),null(),null());
HXLINE(  11)		this->savedChar = savedChar;
            	}

Dynamic DeleteCharacterEvent_obj::__CreateEmpty() { return new DeleteCharacterEvent_obj; }

void *DeleteCharacterEvent_obj::_hx_vtable = 0;

Dynamic DeleteCharacterEvent_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< DeleteCharacterEvent_obj > _hx_result = new DeleteCharacterEvent_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool DeleteCharacterEvent_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x08ec4c31) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x08ec4c31;
	} else {
		return inClassId==(int)0x245f79f4;
	}
}


::hx::ObjectPtr< DeleteCharacterEvent_obj > DeleteCharacterEvent_obj::__new( ::appengine::SavedCharacter savedChar) {
	::hx::ObjectPtr< DeleteCharacterEvent_obj > __this = new DeleteCharacterEvent_obj();
	__this->__construct(savedChar);
	return __this;
}

::hx::ObjectPtr< DeleteCharacterEvent_obj > DeleteCharacterEvent_obj::__alloc(::hx::Ctx *_hx_ctx, ::appengine::SavedCharacter savedChar) {
	DeleteCharacterEvent_obj *__this = (DeleteCharacterEvent_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(DeleteCharacterEvent_obj), true, "screens.events.DeleteCharacterEvent"));
	*(void **)__this = DeleteCharacterEvent_obj::_hx_vtable;
	__this->__construct(savedChar);
	return __this;
}

DeleteCharacterEvent_obj::DeleteCharacterEvent_obj()
{
}

void DeleteCharacterEvent_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(DeleteCharacterEvent);
	HX_MARK_MEMBER_NAME(savedChar,"savedChar");
	 ::openfl::events::Event_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void DeleteCharacterEvent_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(savedChar,"savedChar");
	 ::openfl::events::Event_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val DeleteCharacterEvent_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"savedChar") ) { return ::hx::Val( savedChar ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val DeleteCharacterEvent_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"savedChar") ) { savedChar=inValue.Cast<  ::appengine::SavedCharacter >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void DeleteCharacterEvent_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("savedChar",fd,24,2a,bc));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo DeleteCharacterEvent_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::appengine::SavedCharacter */ ,(int)offsetof(DeleteCharacterEvent_obj,savedChar),HX_("savedChar",fd,24,2a,bc)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *DeleteCharacterEvent_obj_sStaticStorageInfo = 0;
#endif

static ::String DeleteCharacterEvent_obj_sMemberFields[] = {
	HX_("savedChar",fd,24,2a,bc),
	::String(null()) };

::hx::Class DeleteCharacterEvent_obj::__mClass;

void DeleteCharacterEvent_obj::__register()
{
	DeleteCharacterEvent_obj _hx_dummy;
	DeleteCharacterEvent_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("screens.events.DeleteCharacterEvent",6a,b3,36,5a);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(DeleteCharacterEvent_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< DeleteCharacterEvent_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DeleteCharacterEvent_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DeleteCharacterEvent_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace screens
} // end namespace events
