// Generated by Haxe 4.3.0+731dcd7
#include <hxcpp.h>

#ifndef INCLUDED_EReg
#include <EReg.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_lime__internal_backend_native_NativeCFFI
#include <lime/_internal/backend/native/NativeCFFI.h>
#endif
#ifndef INCLUDED_lime__internal_backend_native_NativeOpenGLRenderContext
#include <lime/_internal/backend/native/NativeOpenGLRenderContext.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_GLObject
#include <lime/graphics/opengl/GLObject.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl__GLBuffer_GLBuffer_Impl_
#include <lime/graphics/opengl/_GLBuffer/GLBuffer_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl__GLFramebuffer_GLFramebuffer_Impl_
#include <lime/graphics/opengl/_GLFramebuffer/GLFramebuffer_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl__GLProgram_GLProgram_Impl_
#include <lime/graphics/opengl/_GLProgram/GLProgram_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl__GLRenderbuffer_GLRenderbuffer_Impl_
#include <lime/graphics/opengl/_GLRenderbuffer/GLRenderbuffer_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl__GLTexture_GLTexture_Impl_
#include <lime/graphics/opengl/_GLTexture/GLTexture_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_AMD_compressed_3DC_texture
#include <lime/graphics/opengl/ext/AMD_compressed_3DC_texture.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_AMD_compressed_ATC_texture
#include <lime/graphics/opengl/ext/AMD_compressed_ATC_texture.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_AMD_performance_monitor
#include <lime/graphics/opengl/ext/AMD_performance_monitor.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_AMD_program_binary_Z400
#include <lime/graphics/opengl/ext/AMD_program_binary_Z400.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_ANGLE_framebuffer_blit
#include <lime/graphics/opengl/ext/ANGLE_framebuffer_blit.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_ANGLE_framebuffer_multisample
#include <lime/graphics/opengl/ext/ANGLE_framebuffer_multisample.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_ANGLE_instanced_arrays
#include <lime/graphics/opengl/ext/ANGLE_instanced_arrays.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_ANGLE_pack_reverse_row_order
#include <lime/graphics/opengl/ext/ANGLE_pack_reverse_row_order.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_ANGLE_texture_compression_dxt3
#include <lime/graphics/opengl/ext/ANGLE_texture_compression_dxt3.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_ANGLE_texture_compression_dxt5
#include <lime/graphics/opengl/ext/ANGLE_texture_compression_dxt5.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_ANGLE_texture_usage
#include <lime/graphics/opengl/ext/ANGLE_texture_usage.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_ANGLE_translated_shader_source
#include <lime/graphics/opengl/ext/ANGLE_translated_shader_source.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_APPLE_copy_texture_levels
#include <lime/graphics/opengl/ext/APPLE_copy_texture_levels.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_APPLE_framebuffer_multisample
#include <lime/graphics/opengl/ext/APPLE_framebuffer_multisample.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_APPLE_rgb_422
#include <lime/graphics/opengl/ext/APPLE_rgb_422.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_APPLE_sync
#include <lime/graphics/opengl/ext/APPLE_sync.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_APPLE_texture_format_BGRA8888
#include <lime/graphics/opengl/ext/APPLE_texture_format_BGRA8888.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_APPLE_texture_max_level
#include <lime/graphics/opengl/ext/APPLE_texture_max_level.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_ARM_mali_program_binary
#include <lime/graphics/opengl/ext/ARM_mali_program_binary.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_ARM_mali_shader_binary
#include <lime/graphics/opengl/ext/ARM_mali_shader_binary.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_ARM_rgba8
#include <lime/graphics/opengl/ext/ARM_rgba8.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_DMP_shader_binary
#include <lime/graphics/opengl/ext/DMP_shader_binary.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_bgra
#include <lime/graphics/opengl/ext/EXT_bgra.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_blend_minmax
#include <lime/graphics/opengl/ext/EXT_blend_minmax.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_color_buffer_float
#include <lime/graphics/opengl/ext/EXT_color_buffer_float.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_color_buffer_half_float
#include <lime/graphics/opengl/ext/EXT_color_buffer_half_float.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_debug_label
#include <lime/graphics/opengl/ext/EXT_debug_label.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_debug_marker
#include <lime/graphics/opengl/ext/EXT_debug_marker.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_discard_framebuffer
#include <lime/graphics/opengl/ext/EXT_discard_framebuffer.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_map_buffer_range
#include <lime/graphics/opengl/ext/EXT_map_buffer_range.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_multi_draw_arrays
#include <lime/graphics/opengl/ext/EXT_multi_draw_arrays.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_multisampled_render_to_texture
#include <lime/graphics/opengl/ext/EXT_multisampled_render_to_texture.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_multiview_draw_buffers
#include <lime/graphics/opengl/ext/EXT_multiview_draw_buffers.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_occlusion_query_boolean
#include <lime/graphics/opengl/ext/EXT_occlusion_query_boolean.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_packed_depth_stencil
#include <lime/graphics/opengl/ext/EXT_packed_depth_stencil.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_read_format_bgra
#include <lime/graphics/opengl/ext/EXT_read_format_bgra.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_robustness
#include <lime/graphics/opengl/ext/EXT_robustness.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_sRGB
#include <lime/graphics/opengl/ext/EXT_sRGB.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_separate_shader_objects
#include <lime/graphics/opengl/ext/EXT_separate_shader_objects.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_shader_framebuffer_fetch
#include <lime/graphics/opengl/ext/EXT_shader_framebuffer_fetch.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_shader_texture_lod
#include <lime/graphics/opengl/ext/EXT_shader_texture_lod.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_shadow_samplers
#include <lime/graphics/opengl/ext/EXT_shadow_samplers.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_texture_compression_dxt1
#include <lime/graphics/opengl/ext/EXT_texture_compression_dxt1.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_texture_compression_s3tc
#include <lime/graphics/opengl/ext/EXT_texture_compression_s3tc.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_texture_filter_anisotropic
#include <lime/graphics/opengl/ext/EXT_texture_filter_anisotropic.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_texture_format_BGRA8888
#include <lime/graphics/opengl/ext/EXT_texture_format_BGRA8888.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_texture_rg
#include <lime/graphics/opengl/ext/EXT_texture_rg.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_texture_storage
#include <lime/graphics/opengl/ext/EXT_texture_storage.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_texture_type_2_10_10_10_REV
#include <lime/graphics/opengl/ext/EXT_texture_type_2_10_10_10_REV.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_unpack_subimage
#include <lime/graphics/opengl/ext/EXT_unpack_subimage.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_FJ_shader_binary_GCCSO
#include <lime/graphics/opengl/ext/FJ_shader_binary_GCCSO.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_IMG_multisampled_render_to_texture
#include <lime/graphics/opengl/ext/IMG_multisampled_render_to_texture.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_IMG_program_binary
#include <lime/graphics/opengl/ext/IMG_program_binary.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_IMG_read_format
#include <lime/graphics/opengl/ext/IMG_read_format.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_IMG_shader_binary
#include <lime/graphics/opengl/ext/IMG_shader_binary.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_IMG_texture_compression_pvrtc
#include <lime/graphics/opengl/ext/IMG_texture_compression_pvrtc.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_KHR_debug
#include <lime/graphics/opengl/ext/KHR_debug.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_KHR_texture_compression_astc_ldr
#include <lime/graphics/opengl/ext/KHR_texture_compression_astc_ldr.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NVX_gpu_memory_info
#include <lime/graphics/opengl/ext/NVX_gpu_memory_info.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_coverage_sample
#include <lime/graphics/opengl/ext/NV_coverage_sample.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_depth_nonlinear
#include <lime/graphics/opengl/ext/NV_depth_nonlinear.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_draw_buffers
#include <lime/graphics/opengl/ext/NV_draw_buffers.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_fbo_color_attachments
#include <lime/graphics/opengl/ext/NV_fbo_color_attachments.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_fence
#include <lime/graphics/opengl/ext/NV_fence.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_read_buffer
#include <lime/graphics/opengl/ext/NV_read_buffer.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_read_buffer_front
#include <lime/graphics/opengl/ext/NV_read_buffer_front.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_read_depth
#include <lime/graphics/opengl/ext/NV_read_depth.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_read_depth_stencil
#include <lime/graphics/opengl/ext/NV_read_depth_stencil.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_read_stencil
#include <lime/graphics/opengl/ext/NV_read_stencil.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_texture_compression_s3tc_update
#include <lime/graphics/opengl/ext/NV_texture_compression_s3tc_update.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_texture_npot_2D_mipmap
#include <lime/graphics/opengl/ext/NV_texture_npot_2D_mipmap.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_EGL_image
#include <lime/graphics/opengl/ext/OES_EGL_image.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_EGL_image_external
#include <lime/graphics/opengl/ext/OES_EGL_image_external.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_compressed_ETC1_RGB8_texture
#include <lime/graphics/opengl/ext/OES_compressed_ETC1_RGB8_texture.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_compressed_paletted_texture
#include <lime/graphics/opengl/ext/OES_compressed_paletted_texture.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_depth24
#include <lime/graphics/opengl/ext/OES_depth24.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_depth32
#include <lime/graphics/opengl/ext/OES_depth32.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_depth_texture
#include <lime/graphics/opengl/ext/OES_depth_texture.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_element_index_uint
#include <lime/graphics/opengl/ext/OES_element_index_uint.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_get_program_binary
#include <lime/graphics/opengl/ext/OES_get_program_binary.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_mapbuffer
#include <lime/graphics/opengl/ext/OES_mapbuffer.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_packed_depth_stencil
#include <lime/graphics/opengl/ext/OES_packed_depth_stencil.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_required_internalformat
#include <lime/graphics/opengl/ext/OES_required_internalformat.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_rgb8_rgba8
#include <lime/graphics/opengl/ext/OES_rgb8_rgba8.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_standard_derivatives
#include <lime/graphics/opengl/ext/OES_standard_derivatives.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_stencil1
#include <lime/graphics/opengl/ext/OES_stencil1.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_stencil4
#include <lime/graphics/opengl/ext/OES_stencil4.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_surfaceless_context
#include <lime/graphics/opengl/ext/OES_surfaceless_context.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_texture_3D
#include <lime/graphics/opengl/ext/OES_texture_3D.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_texture_float
#include <lime/graphics/opengl/ext/OES_texture_float.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_texture_float_linear
#include <lime/graphics/opengl/ext/OES_texture_float_linear.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_texture_half_float
#include <lime/graphics/opengl/ext/OES_texture_half_float.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_texture_half_float_linear
#include <lime/graphics/opengl/ext/OES_texture_half_float_linear.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_texture_npot
#include <lime/graphics/opengl/ext/OES_texture_npot.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_vertex_array_object
#include <lime/graphics/opengl/ext/OES_vertex_array_object.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_vertex_half_float
#include <lime/graphics/opengl/ext/OES_vertex_half_float.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_vertex_type_10_10_10_2
#include <lime/graphics/opengl/ext/OES_vertex_type_10_10_10_2.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_QCOM_alpha_test
#include <lime/graphics/opengl/ext/QCOM_alpha_test.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_QCOM_binning_control
#include <lime/graphics/opengl/ext/QCOM_binning_control.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_QCOM_driver_control
#include <lime/graphics/opengl/ext/QCOM_driver_control.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_QCOM_extended_get
#include <lime/graphics/opengl/ext/QCOM_extended_get.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_QCOM_extended_get2
#include <lime/graphics/opengl/ext/QCOM_extended_get2.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_QCOM_perfmon_global_mode
#include <lime/graphics/opengl/ext/QCOM_perfmon_global_mode.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_QCOM_tiled_rendering
#include <lime/graphics/opengl/ext/QCOM_tiled_rendering.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_QCOM_writeonly_rendering
#include <lime/graphics/opengl/ext/QCOM_writeonly_rendering.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_VIV_shader_binary
#include <lime/graphics/opengl/ext/VIV_shader_binary.h>
#endif
#ifndef INCLUDED_lime_utils_ArrayBufferView
#include <lime/utils/ArrayBufferView.h>
#endif
#ifndef INCLUDED_lime_utils__DataPointer_DataPointer_Impl_
#include <lime/utils/_DataPointer/DataPointer_Impl_.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_65c657fec0b420d3_36_new,"lime._internal.backend.native.NativeOpenGLRenderContext","new",0x66fa8113,"lime._internal.backend.native.NativeOpenGLRenderContext.new","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",36,0xd33553db)
HX_DEFINE_STACK_FRAME(_hx_pos_65c657fec0b420d3_633_new,"lime._internal.backend.native.NativeOpenGLRenderContext","new",0x66fa8113,"lime._internal.backend.native.NativeOpenGLRenderContext.new","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",633,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1790_getParameter,"lime._internal.backend.native.NativeOpenGLRenderContext","getParameter",0x931bf320,"lime._internal.backend.native.NativeOpenGLRenderContext.getParameter","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1790,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_39_boot,"lime._internal.backend.native.NativeOpenGLRenderContext","boot",0xac4f701f,"lime._internal.backend.native.NativeOpenGLRenderContext.boot","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",39,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_40_boot,"lime._internal.backend.native.NativeOpenGLRenderContext","boot",0xac4f701f,"lime._internal.backend.native.NativeOpenGLRenderContext.boot","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",40,0xd33553db)
namespace lime{
namespace _internal{
namespace backend{
namespace native{

void NativeOpenGLRenderContext_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_36_new)
HXLINE( 551)		this->DEPTH24_STENCIL8 = 35056;
HXLINE( 338)		this->FRAMEBUFFER_COMPLETE = 36053;
HXLINE( 337)		this->NONE = 0;
HXLINE( 336)		this->DEPTH_STENCIL_ATTACHMENT = 33306;
HXLINE( 335)		this->STENCIL_ATTACHMENT = 36128;
HXLINE( 334)		this->DEPTH_ATTACHMENT = 36096;
HXLINE( 333)		this->COLOR_ATTACHMENT0 = 36064;
HXLINE( 318)		this->STENCIL_INDEX8 = 36168;
HXLINE( 316)		this->DEPTH_COMPONENT16 = 33189;
HXLINE( 312)		this->RENDERBUFFER = 36161;
HXLINE( 311)		this->FRAMEBUFFER = 36160;
HXLINE( 299)		this->COMPILE_STATUS = 35713;
HXLINE( 271)		this->CLAMP_TO_EDGE = 33071;
HXLINE( 270)		this->REPEAT = 10497;
HXLINE( 237)		this->TEXTURE0 = 33984;
HXLINE( 230)		this->TEXTURE_CUBE_MAP_POSITIVE_X = 34069;
HXLINE( 228)		this->TEXTURE_CUBE_MAP = 34067;
HXLINE( 226)		this->TEXTURE_WRAP_T = 10243;
HXLINE( 225)		this->TEXTURE_WRAP_S = 10242;
HXLINE( 224)		this->TEXTURE_MIN_FILTER = 10241;
HXLINE( 223)		this->TEXTURE_MAG_FILTER = 10240;
HXLINE( 222)		this->LINEAR_MIPMAP_LINEAR = 9987;
HXLINE( 221)		this->NEAREST_MIPMAP_LINEAR = 9986;
HXLINE( 220)		this->LINEAR_MIPMAP_NEAREST = 9985;
HXLINE( 219)		this->NEAREST_MIPMAP_NEAREST = 9984;
HXLINE( 218)		this->LINEAR = 9729;
HXLINE( 217)		this->NEAREST = 9728;
HXLINE( 215)		this->VERSION = 7938;
HXLINE( 214)		this->RENDERER = 7937;
HXLINE( 213)		this->VENDOR = 7936;
HXLINE( 212)		this->DECR_WRAP = 34056;
HXLINE( 211)		this->INCR_WRAP = 34055;
HXLINE( 210)		this->INVERT = 5386;
HXLINE( 209)		this->DECR = 7683;
HXLINE( 208)		this->INCR = 7682;
HXLINE( 207)		this->REPLACE = 7681;
HXLINE( 206)		this->KEEP = 7680;
HXLINE( 205)		this->ALWAYS = 519;
HXLINE( 204)		this->GEQUAL = 518;
HXLINE( 203)		this->NOTEQUAL = 517;
HXLINE( 202)		this->GREATER = 516;
HXLINE( 201)		this->LEQUAL = 515;
HXLINE( 200)		this->EQUAL = 514;
HXLINE( 199)		this->LESS = 513;
HXLINE( 198)		this->NEVER = 512;
HXLINE( 196)		this->SHADING_LANGUAGE_VERSION = 35724;
HXLINE( 192)		this->ACTIVE_UNIFORMS = 35718;
HXLINE( 189)		this->LINK_STATUS = 35714;
HXLINE( 185)		this->MAX_TEXTURE_IMAGE_UNITS = 34930;
HXLINE( 179)		this->VERTEX_SHADER = 35633;
HXLINE( 178)		this->FRAGMENT_SHADER = 35632;
HXLINE( 172)		this->RGBA = 6408;
HXLINE( 170)		this->ALPHA = 6406;
HXLINE( 167)		this->FLOAT = 5126;
HXLINE( 165)		this->INT = 5124;
HXLINE( 164)		this->UNSIGNED_SHORT = 5123;
HXLINE( 162)		this->UNSIGNED_BYTE = 5121;
HXLINE( 139)		this->MAX_TEXTURE_SIZE = 3379;
HXLINE( 108)		this->CCW = 2305;
HXLINE( 107)		this->CW = 2304;
HXLINE(  98)		this->SCISSOR_TEST = 3089;
HXLINE(  97)		this->DEPTH_TEST = 2929;
HXLINE(  96)		this->STENCIL_TEST = 2960;
HXLINE(  94)		this->BLEND = 3042;
HXLINE(  93)		this->CULL_FACE = 2884;
HXLINE(  92)		this->TEXTURE_2D = 3553;
HXLINE(  91)		this->FRONT_AND_BACK = 1032;
HXLINE(  90)		this->BACK = 1029;
HXLINE(  89)		this->FRONT = 1028;
HXLINE(  85)		this->DYNAMIC_DRAW = 35048;
HXLINE(  84)		this->STATIC_DRAW = 35044;
HXLINE(  80)		this->ELEMENT_ARRAY_BUFFER = 34963;
HXLINE(  79)		this->ARRAY_BUFFER = 34962;
HXLINE(  69)		this->FUNC_REVERSE_SUBTRACT = 32779;
HXLINE(  64)		this->FUNC_ADD = 32774;
HXLINE(  62)		this->ONE_MINUS_DST_COLOR = 775;
HXLINE(  61)		this->DST_COLOR = 774;
HXLINE(  60)		this->ONE_MINUS_DST_ALPHA = 773;
HXLINE(  59)		this->DST_ALPHA = 772;
HXLINE(  58)		this->ONE_MINUS_SRC_ALPHA = 771;
HXLINE(  57)		this->SRC_ALPHA = 770;
HXLINE(  56)		this->ONE_MINUS_SRC_COLOR = 769;
HXLINE(  55)		this->SRC_COLOR = 768;
HXLINE(  54)		this->ONE = 1;
HXLINE(  53)		this->ZERO = 0;
HXLINE(  50)		this->TRIANGLES = 4;
HXLINE(  45)		this->COLOR_BUFFER_BIT = 16384;
HXLINE(  44)		this->STENCIL_BUFFER_BIT = 1024;
HXLINE(  43)		this->DEPTH_BUFFER_BIT = 256;
HXLINE( 631)		this->_hx___contextID = ::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___lastContextID++;
HXLINE( 633)		{
HXLINE( 633)			if (!(this->_hx___initialized)) {
            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(0)
            				 ::lime::graphics::opengl::ext::AMD_compressed_3DC_texture _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::AMD_compressed_3DC_texture_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(0)
            				 ::lime::graphics::opengl::ext::AMD_compressed_ATC_texture _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::AMD_compressed_ATC_texture_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_2) HXARGC(0)
            				 ::lime::graphics::opengl::ext::AMD_performance_monitor _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::AMD_performance_monitor_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_3) HXARGC(0)
            				 ::lime::graphics::opengl::ext::AMD_program_binary_Z400 _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::AMD_program_binary_Z400_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_4) HXARGC(0)
            				 ::lime::graphics::opengl::ext::ANGLE_framebuffer_blit _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::ANGLE_framebuffer_blit_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_5) HXARGC(0)
            				 ::lime::graphics::opengl::ext::ANGLE_framebuffer_multisample _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::ANGLE_framebuffer_multisample_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_6) HXARGC(0)
            				 ::lime::graphics::opengl::ext::ANGLE_instanced_arrays _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::ANGLE_instanced_arrays_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_7) HXARGC(0)
            				 ::lime::graphics::opengl::ext::ANGLE_pack_reverse_row_order _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::ANGLE_pack_reverse_row_order_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_8) HXARGC(0)
            				 ::lime::graphics::opengl::ext::ANGLE_texture_compression_dxt3 _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::ANGLE_texture_compression_dxt3_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_9) HXARGC(0)
            				 ::lime::graphics::opengl::ext::ANGLE_texture_compression_dxt5 _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::ANGLE_texture_compression_dxt5_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_10) HXARGC(0)
            				 ::lime::graphics::opengl::ext::ANGLE_texture_usage _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::ANGLE_texture_usage_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_11) HXARGC(0)
            				 ::lime::graphics::opengl::ext::ANGLE_translated_shader_source _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::ANGLE_translated_shader_source_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_12) HXARGC(0)
            				 ::lime::graphics::opengl::ext::APPLE_copy_texture_levels _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::APPLE_copy_texture_levels_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_13) HXARGC(0)
            				 ::lime::graphics::opengl::ext::APPLE_framebuffer_multisample _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::APPLE_framebuffer_multisample_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_14) HXARGC(0)
            				 ::lime::graphics::opengl::ext::APPLE_rgb_422 _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::APPLE_rgb_422_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_15) HXARGC(0)
            				 ::lime::graphics::opengl::ext::APPLE_sync _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::APPLE_sync_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_16) HXARGC(0)
            				 ::lime::graphics::opengl::ext::APPLE_texture_format_BGRA8888 _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::APPLE_texture_format_BGRA8888_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_17) HXARGC(0)
            				 ::lime::graphics::opengl::ext::APPLE_texture_max_level _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::APPLE_texture_max_level_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_18) HXARGC(0)
            				 ::lime::graphics::opengl::ext::ARM_mali_program_binary _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::ARM_mali_program_binary_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_19) HXARGC(0)
            				 ::lime::graphics::opengl::ext::ARM_mali_shader_binary _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::ARM_mali_shader_binary_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_20) HXARGC(0)
            				 ::lime::graphics::opengl::ext::ARM_rgba8 _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::ARM_rgba8_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_21) HXARGC(0)
            				 ::lime::graphics::opengl::ext::DMP_shader_binary _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::DMP_shader_binary_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_22) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_bgra _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::EXT_bgra_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_23) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_blend_minmax _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::EXT_blend_minmax_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_24) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_color_buffer_float _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::EXT_color_buffer_float_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_25) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_color_buffer_half_float _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::EXT_color_buffer_half_float_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_26) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_debug_label _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::EXT_debug_label_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_27) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_debug_marker _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::EXT_debug_marker_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_28) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_discard_framebuffer _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::EXT_discard_framebuffer_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_29) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_map_buffer_range _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::EXT_map_buffer_range_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_30) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_multi_draw_arrays _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::EXT_multi_draw_arrays_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_31) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_multisampled_render_to_texture _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::EXT_multisampled_render_to_texture_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_32) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_multiview_draw_buffers _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::EXT_multiview_draw_buffers_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_33) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_occlusion_query_boolean _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::EXT_occlusion_query_boolean_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_34) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_packed_depth_stencil _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::EXT_packed_depth_stencil_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_35) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_read_format_bgra _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::EXT_read_format_bgra_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_36) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_robustness _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::EXT_robustness_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_37) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_sRGB _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::EXT_sRGB_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_38) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_separate_shader_objects _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::EXT_separate_shader_objects_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_39) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_shader_framebuffer_fetch _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::EXT_shader_framebuffer_fetch_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_40) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_shader_texture_lod _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::EXT_shader_texture_lod_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_41) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_shadow_samplers _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::EXT_shadow_samplers_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_42) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_texture_compression_dxt1 _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::EXT_texture_compression_dxt1_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_43) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_texture_compression_s3tc _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::EXT_texture_compression_s3tc_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_44) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_texture_filter_anisotropic _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::EXT_texture_filter_anisotropic_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_45) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_texture_format_BGRA8888 _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::EXT_texture_format_BGRA8888_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_46) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_texture_rg _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::EXT_texture_rg_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_47) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_texture_storage _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::EXT_texture_storage_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_48) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_texture_type_2_10_10_10_REV _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::EXT_texture_type_2_10_10_10_REV_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_49) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_unpack_subimage _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::EXT_unpack_subimage_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_50) HXARGC(0)
            				 ::lime::graphics::opengl::ext::FJ_shader_binary_GCCSO _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::FJ_shader_binary_GCCSO_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_51) HXARGC(0)
            				 ::lime::graphics::opengl::ext::IMG_multisampled_render_to_texture _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::IMG_multisampled_render_to_texture_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_52) HXARGC(0)
            				 ::lime::graphics::opengl::ext::IMG_program_binary _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::IMG_program_binary_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_53) HXARGC(0)
            				 ::lime::graphics::opengl::ext::IMG_read_format _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::IMG_read_format_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_54) HXARGC(0)
            				 ::lime::graphics::opengl::ext::IMG_shader_binary _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::IMG_shader_binary_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_55) HXARGC(0)
            				 ::lime::graphics::opengl::ext::IMG_texture_compression_pvrtc _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::IMG_texture_compression_pvrtc_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_56) HXARGC(0)
            				 ::lime::graphics::opengl::ext::KHR_debug _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::KHR_debug_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_57) HXARGC(0)
            				 ::lime::graphics::opengl::ext::KHR_texture_compression_astc_ldr _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::KHR_texture_compression_astc_ldr_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_58) HXARGC(0)
            				 ::lime::graphics::opengl::ext::NV_coverage_sample _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::NV_coverage_sample_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_59) HXARGC(0)
            				 ::lime::graphics::opengl::ext::NV_depth_nonlinear _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::NV_depth_nonlinear_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_60) HXARGC(0)
            				 ::lime::graphics::opengl::ext::NV_draw_buffers _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::NV_draw_buffers_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_61) HXARGC(0)
            				 ::lime::graphics::opengl::ext::NV_fbo_color_attachments _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::NV_fbo_color_attachments_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_62) HXARGC(0)
            				 ::lime::graphics::opengl::ext::NV_fence _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::NV_fence_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_63) HXARGC(0)
            				 ::lime::graphics::opengl::ext::NV_read_buffer _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::NV_read_buffer_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_64) HXARGC(0)
            				 ::lime::graphics::opengl::ext::NV_read_buffer_front _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::NV_read_buffer_front_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_65) HXARGC(0)
            				 ::lime::graphics::opengl::ext::NV_read_depth _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::NV_read_depth_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_66) HXARGC(0)
            				 ::lime::graphics::opengl::ext::NV_read_depth_stencil _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::NV_read_depth_stencil_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_67) HXARGC(0)
            				 ::lime::graphics::opengl::ext::NV_read_stencil _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::NV_read_stencil_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_68) HXARGC(0)
            				 ::lime::graphics::opengl::ext::NV_texture_compression_s3tc_update _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::NV_texture_compression_s3tc_update_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_69) HXARGC(0)
            				 ::lime::graphics::opengl::ext::NV_texture_npot_2D_mipmap _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::NV_texture_npot_2D_mipmap_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_70) HXARGC(0)
            				 ::lime::graphics::opengl::ext::NVX_gpu_memory_info _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::NVX_gpu_memory_info_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_71) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_EGL_image _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::OES_EGL_image_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_72) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_EGL_image_external _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::OES_EGL_image_external_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_73) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_compressed_ETC1_RGB8_texture _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::OES_compressed_ETC1_RGB8_texture_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_74) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_compressed_paletted_texture _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::OES_compressed_paletted_texture_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_75) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_depth24 _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::OES_depth24_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_76) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_depth32 _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::OES_depth32_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_77) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_depth_texture _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::OES_depth_texture_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_78) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_element_index_uint _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::OES_element_index_uint_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_79) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_get_program_binary _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::OES_get_program_binary_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_80) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_mapbuffer _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::OES_mapbuffer_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_81) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_packed_depth_stencil _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::OES_packed_depth_stencil_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_82) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_required_internalformat _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::OES_required_internalformat_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_83) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_rgb8_rgba8 _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::OES_rgb8_rgba8_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_84) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_standard_derivatives _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::OES_standard_derivatives_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_85) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_stencil1 _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::OES_stencil1_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_86) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_stencil4 _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::OES_stencil4_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_87) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_surfaceless_context _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::OES_surfaceless_context_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_88) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_texture_3D _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::OES_texture_3D_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_89) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_texture_float _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::OES_texture_float_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_90) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_texture_float_linear _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::OES_texture_float_linear_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_91) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_texture_half_float _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::OES_texture_half_float_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_92) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_texture_half_float_linear _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::OES_texture_half_float_linear_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_93) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_texture_npot _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::OES_texture_npot_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_94) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_vertex_array_object _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::OES_vertex_array_object_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_95) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_vertex_half_float _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::OES_vertex_half_float_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_96) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_vertex_type_10_10_10_2 _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::OES_vertex_type_10_10_10_2_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_97) HXARGC(0)
            				 ::lime::graphics::opengl::ext::QCOM_alpha_test _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::QCOM_alpha_test_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_98) HXARGC(0)
            				 ::lime::graphics::opengl::ext::QCOM_binning_control _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::QCOM_binning_control_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_99) HXARGC(0)
            				 ::lime::graphics::opengl::ext::QCOM_driver_control _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::QCOM_driver_control_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_100) HXARGC(0)
            				 ::lime::graphics::opengl::ext::QCOM_extended_get _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::QCOM_extended_get_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_101) HXARGC(0)
            				 ::lime::graphics::opengl::ext::QCOM_extended_get2 _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::QCOM_extended_get2_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_102) HXARGC(0)
            				 ::lime::graphics::opengl::ext::QCOM_perfmon_global_mode _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::QCOM_perfmon_global_mode_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_103) HXARGC(0)
            				 ::lime::graphics::opengl::ext::QCOM_tiled_rendering _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::QCOM_tiled_rendering_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_104) HXARGC(0)
            				 ::lime::graphics::opengl::ext::QCOM_writeonly_rendering _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::QCOM_writeonly_rendering_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_105) HXARGC(0)
            				 ::lime::graphics::opengl::ext::VIV_shader_binary _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_633_new)
HXLINE( 633)					return  ::lime::graphics::opengl::ext::VIV_shader_binary_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("AMD_compressed_3DC_texture",97,af,9a,80), ::Dynamic(new _hx_Closure_0()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("AMD_compressed_ATC_texture",15,0b,6c,91), ::Dynamic(new _hx_Closure_1()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("AMD_performance_monitor",e4,7a,6c,36), ::Dynamic(new _hx_Closure_2()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("AMD_program_binary_Z400",b6,66,58,28), ::Dynamic(new _hx_Closure_3()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("ANGLE_framebuffer_blit",53,5d,fe,07), ::Dynamic(new _hx_Closure_4()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("ANGLE_framebuffer_multisample",05,66,2b,e3), ::Dynamic(new _hx_Closure_5()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("ANGLE_instanced_arrays",56,74,86,10), ::Dynamic(new _hx_Closure_6()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("ANGLE_pack_reverse_row_order",f2,1c,e0,65), ::Dynamic(new _hx_Closure_7()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("ANGLE_texture_compression_dxt3",fc,60,dc,b5), ::Dynamic(new _hx_Closure_8()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("ANGLE_texture_compression_dxt5",fe,60,dc,b5), ::Dynamic(new _hx_Closure_9()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("ANGLE_texture_usage",b1,62,6e,c1), ::Dynamic(new _hx_Closure_10()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("ANGLE_translated_shader_source",58,8f,67,10), ::Dynamic(new _hx_Closure_11()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("APPLE_copy_texture_levels",58,36,ee,e5), ::Dynamic(new _hx_Closure_12()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("APPLE_framebuffer_multisample",8c,c4,4f,00), ::Dynamic(new _hx_Closure_13()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("APPLE_rgb_422",3d,ac,a1,11), ::Dynamic(new _hx_Closure_14()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("APPLE_sync",c0,e6,8c,8c), ::Dynamic(new _hx_Closure_15()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("APPLE_texture_format_BGRA8888",13,8a,88,e2), ::Dynamic(new _hx_Closure_16()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("APPLE_texture_max_level",40,37,3d,be), ::Dynamic(new _hx_Closure_17()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("ARM_mali_program_binary",c7,33,f6,92), ::Dynamic(new _hx_Closure_18()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("ARM_mali_shader_binary",50,43,81,cb), ::Dynamic(new _hx_Closure_19()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("ARM_rgba8",81,03,5e,47), ::Dynamic(new _hx_Closure_20()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("DMP_shader_binary",43,70,06,89), ::Dynamic(new _hx_Closure_21()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_bgra",72,74,1a,40), ::Dynamic(new _hx_Closure_22()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_blend_minmax",7e,f3,2e,cd), ::Dynamic(new _hx_Closure_23()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_color_buffer_float",b7,19,0b,dd), ::Dynamic(new _hx_Closure_24()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_color_buffer_half_float",d5,e8,0a,44), ::Dynamic(new _hx_Closure_25()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_debug_label",ca,3b,0e,9c), ::Dynamic(new _hx_Closure_26()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_debug_marker",24,63,59,61), ::Dynamic(new _hx_Closure_27()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_discard_framebuffer",0e,f8,79,f7), ::Dynamic(new _hx_Closure_28()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_map_buffer_range",7f,25,48,f8), ::Dynamic(new _hx_Closure_29()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_multi_draw_arrays",51,b2,0b,91), ::Dynamic(new _hx_Closure_30()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_multisampled_render_to_texture",40,d2,98,03), ::Dynamic(new _hx_Closure_31()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_multiview_draw_buffers",f7,b6,e5,c5), ::Dynamic(new _hx_Closure_32()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_occlusion_query_boolean",81,a7,94,3d), ::Dynamic(new _hx_Closure_33()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_packed_depth_stencil",f7,88,e3,09), ::Dynamic(new _hx_Closure_34()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_read_format_bgra",11,c1,96,f4), ::Dynamic(new _hx_Closure_35()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_robustness",c6,8a,39,e5), ::Dynamic(new _hx_Closure_36()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_sRGB",18,00,47,4b), ::Dynamic(new _hx_Closure_37()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_separate_shader_objects",18,2e,eb,43), ::Dynamic(new _hx_Closure_38()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_shader_framebuffer_fetch",0c,04,5a,6d), ::Dynamic(new _hx_Closure_39()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_shader_texture_lod",c1,4c,48,65), ::Dynamic(new _hx_Closure_40()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_shadow_samplers",ec,92,50,09), ::Dynamic(new _hx_Closure_41()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_texture_compression_dxt1",6c,ae,f4,76), ::Dynamic(new _hx_Closure_42()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_texture_compression_s3tc",6a,86,aa,80), ::Dynamic(new _hx_Closure_43()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_texture_filter_anisotropic",4c,4c,32,3d), ::Dynamic(new _hx_Closure_44()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_texture_format_BGRA8888",5a,d2,bd,b2), ::Dynamic(new _hx_Closure_45()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_texture_rg",17,ce,12,89), ::Dynamic(new _hx_Closure_46()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_texture_storage",99,91,8f,9d), ::Dynamic(new _hx_Closure_47()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_texture_type_2_10_10_10_REV",93,7e,34,b8), ::Dynamic(new _hx_Closure_48()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_unpack_subimage",4a,96,0e,d9), ::Dynamic(new _hx_Closure_49()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("FJ_shader_binary_GCCSO",e4,a3,c9,4b), ::Dynamic(new _hx_Closure_50()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("IMG_multisampled_render_to_texture",1e,8d,48,50), ::Dynamic(new _hx_Closure_51()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("IMG_program_binary",b8,93,3a,05), ::Dynamic(new _hx_Closure_52()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("IMG_read_format",a4,2a,ef,b9), ::Dynamic(new _hx_Closure_53()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("IMG_shader_binary",7f,ec,f0,da), ::Dynamic(new _hx_Closure_54()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("IMG_texture_compression_pvrtc",02,61,85,d1), ::Dynamic(new _hx_Closure_55()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("KHR_debug",69,7f,d0,07), ::Dynamic(new _hx_Closure_56()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("KHR_texture_compression_astc_ldr",63,29,b6,ea), ::Dynamic(new _hx_Closure_57()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("NV_coverage_sample",aa,83,fd,db), ::Dynamic(new _hx_Closure_58()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("NV_depth_nonlinear",ff,77,4d,c4), ::Dynamic(new _hx_Closure_59()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("NV_draw_buffers",8f,0e,de,94), ::Dynamic(new _hx_Closure_60()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("NV_fbo_color_attachments",d1,a3,ac,87), ::Dynamic(new _hx_Closure_61()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("NV_fence",3a,78,71,5f), ::Dynamic(new _hx_Closure_62()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("NV_read_buffer",52,78,29,ea), ::Dynamic(new _hx_Closure_63()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("NV_read_buffer_front",bc,e1,e8,d2), ::Dynamic(new _hx_Closure_64()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("NV_read_depth",f1,85,77,c1), ::Dynamic(new _hx_Closure_65()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("NV_read_depth_stencil",6e,76,04,4b), ::Dynamic(new _hx_Closure_66()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("NV_read_stencil",6a,ea,92,c8), ::Dynamic(new _hx_Closure_67()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("NV_texture_compression_s3tc_update",45,2a,b6,00), ::Dynamic(new _hx_Closure_68()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("NV_texture_npot_2D_mipmap",78,dc,c7,30), ::Dynamic(new _hx_Closure_69()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("NVX_gpu_memory_info",6a,ad,9a,42), ::Dynamic(new _hx_Closure_70()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_EGL_image",44,24,7d,2c), ::Dynamic(new _hx_Closure_71()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_EGL_image_external",e6,6c,9f,93), ::Dynamic(new _hx_Closure_72()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_compressed_ETC1_RGB8_texture",cd,f1,a0,b8), ::Dynamic(new _hx_Closure_73()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_compressed_paletted_texture",a1,ed,5e,8e), ::Dynamic(new _hx_Closure_74()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_depth24",83,70,fd,a0), ::Dynamic(new _hx_Closure_75()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_depth32",60,71,fd,a0), ::Dynamic(new _hx_Closure_76()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_depth_texture",dd,ed,8f,e2), ::Dynamic(new _hx_Closure_77()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_element_index_uint",cc,fa,20,b1), ::Dynamic(new _hx_Closure_78()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_get_program_binary",27,f4,1a,01), ::Dynamic(new _hx_Closure_79()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_mapbuffer",1a,2d,9e,e1), ::Dynamic(new _hx_Closure_80()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_packed_depth_stencil",7b,19,31,fc), ::Dynamic(new _hx_Closure_81()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_required_internalformat",52,c5,46,29), ::Dynamic(new _hx_Closure_82()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_rgb8_rgba8",d2,44,3a,66), ::Dynamic(new _hx_Closure_83()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_standard_derivatives",8c,cb,00,04), ::Dynamic(new _hx_Closure_84()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_stencil1",f7,0f,03,29), ::Dynamic(new _hx_Closure_85()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_stencil4",fa,0f,03,29), ::Dynamic(new _hx_Closure_86()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_surfaceless_context",74,4b,ea,b9), ::Dynamic(new _hx_Closure_87()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_texture_3D",97,1a,cf,b4), ::Dynamic(new _hx_Closure_88()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_texture_float",76,0b,21,02), ::Dynamic(new _hx_Closure_89()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_texture_float_linear",ce,52,3e,d7), ::Dynamic(new _hx_Closure_90()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_texture_half_float",b6,42,f5,f2), ::Dynamic(new _hx_Closure_91()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_texture_half_float_linear",8e,83,0b,8c), ::Dynamic(new _hx_Closure_92()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_texture_npot",4d,89,dd,01), ::Dynamic(new _hx_Closure_93()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_vertex_array_object",de,b2,44,8d), ::Dynamic(new _hx_Closure_94()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_vertex_half_float",89,d9,95,ca), ::Dynamic(new _hx_Closure_95()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_vertex_type_10_10_10_2",de,be,f1,06), ::Dynamic(new _hx_Closure_96()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("QCOM_alpha_test",c2,a6,01,c4), ::Dynamic(new _hx_Closure_97()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("QCOM_binning_control",4a,6c,46,7b), ::Dynamic(new _hx_Closure_98()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("QCOM_driver_control",35,0f,f7,9e), ::Dynamic(new _hx_Closure_99()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("QCOM_extended_get",3f,13,03,b6), ::Dynamic(new _hx_Closure_100()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("QCOM_extended_get2",13,c4,ad,8c), ::Dynamic(new _hx_Closure_101()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("QCOM_perfmon_global_mode",74,f2,13,ad), ::Dynamic(new _hx_Closure_102()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("QCOM_tiled_rendering",f4,8a,1f,ec), ::Dynamic(new _hx_Closure_103()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("QCOM_writeonly_rendering",09,44,22,8a), ::Dynamic(new _hx_Closure_104()));
HXDLIN( 633)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("VIV_shader_binary",5f,4e,50,1f), ::Dynamic(new _hx_Closure_105()));
            			}
HXDLIN( 633)			this->_hx___initialized = true;
            		}
HXLINE( 636)		::String versionString = ( (::String)(this->getParameter(this->VERSION)) );
HXLINE( 637)		if ((versionString.indexOf(HX_("OpenGL ES",5f,cb,92,95),null()) > -1)) {
HXLINE( 639)			this->type = HX_("opengles",9d,f6,c9,fa);
            		}
            		else {
HXLINE( 643)			this->type = HX_("opengl",6f,64,94,21);
            		}
HXLINE( 645)		 ::EReg ereg =  ::EReg_obj::__alloc( HX_CTX ,HX_("[0-9]+[.]?[0-9]?",27,05,1c,6e),HX_("i",69,00,00,00));
HXLINE( 646)		if (ereg->match(versionString)) {
HXLINE( 648)			this->version = ::Std_obj::parseFloat(ereg->matched(0));
            		}
            		else {
HXLINE( 652)			this->version = ( (Float)(2) );
            		}
            	}

Dynamic NativeOpenGLRenderContext_obj::__CreateEmpty() { return new NativeOpenGLRenderContext_obj; }

void *NativeOpenGLRenderContext_obj::_hx_vtable = 0;

Dynamic NativeOpenGLRenderContext_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< NativeOpenGLRenderContext_obj > _hx_result = new NativeOpenGLRenderContext_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool NativeOpenGLRenderContext_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x693d41ef;
}

 ::Dynamic NativeOpenGLRenderContext_obj::getParameter(int pname){
            	HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_1790_getParameter)
HXDLIN(1790)		switch((int)(pname)){
            			case (int)2928: case (int)33901: case (int)33902: {
HXLINE(1809)				 ::lime::utils::ArrayBufferView params =  ::lime::utils::ArrayBufferView_obj::__alloc( HX_CTX ,2,8);
HXLINE(1810)				{
HXLINE(1810)					Float params1 = ::lime::utils::_DataPointer::DataPointer_Impl__obj::fromArrayBufferView(params);
HXDLIN(1810)					::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_floatv(pname,params1);
            				}
HXLINE(1811)				return params;
            			}
            			break;
            			case (int)2978: case (int)3088: {
HXLINE(1840)				 ::lime::utils::ArrayBufferView params2 =  ::lime::utils::ArrayBufferView_obj::__alloc( HX_CTX ,4,3);
HXLINE(1841)				{
HXLINE(1841)					Float params3 = ::lime::utils::_DataPointer::DataPointer_Impl__obj::fromArrayBufferView(params2);
HXDLIN(1841)					::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_integerv(pname,params3);
            				}
HXLINE(1842)				return params2;
            			}
            			break;
            			case (int)3106: case (int)32773: {
HXLINE(1814)				 ::lime::utils::ArrayBufferView params4 =  ::lime::utils::ArrayBufferView_obj::__alloc( HX_CTX ,4,8);
HXLINE(1815)				{
HXLINE(1815)					Float params5 = ::lime::utils::_DataPointer::DataPointer_Impl__obj::fromArrayBufferView(params4);
HXDLIN(1815)					::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_floatv(pname,params5);
            				}
HXLINE(1816)				return params4;
            			}
            			break;
            			case (int)3107: {
HXLINE(1797)				 ::haxe::io::Bytes params6 = ::haxe::io::Bytes_obj::alloc(4);
HXLINE(1798)				{
HXLINE(1798)					Float params7 = ::lime::utils::_DataPointer::DataPointer_Impl__obj::fromBytes(params6);
HXDLIN(1798)					::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_booleanv(pname,params7);
            				}
HXLINE(1800)				::Array< bool > data = ::Array_obj< bool >::__new();
HXLINE(1801)				{
HXLINE(1802)					data[0] = (params6->b->__get(0) != 0);
HXDLIN(1802)					data[1] = (params6->b->__get(1) != 0);
HXDLIN(1802)					data[2] = (params6->b->__get(2) != 0);
HXDLIN(1802)					data[3] = (params6->b->__get(3) != 0);
            				}
HXLINE(1803)				return data;
            			}
            			break;
            			case (int)3386: {
HXLINE(1835)				 ::lime::utils::ArrayBufferView params8 =  ::lime::utils::ArrayBufferView_obj::__alloc( HX_CTX ,2,3);
HXLINE(1836)				{
HXLINE(1836)					Float params9 = ::lime::utils::_DataPointer::DataPointer_Impl__obj::fromArrayBufferView(params8);
HXDLIN(1836)					::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_integerv(pname,params9);
            				}
HXLINE(1837)				return params8;
            			}
            			break;
            			case (int)7936: case (int)7937: case (int)7938: case (int)35724: {
HXLINE(1845)				return ( (::String)(( ( ::Dynamic)(::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_string(pname)) )) );
            			}
            			break;
            			case (int)2849: case (int)2931: case (int)10752: case (int)32824: case (int)32938: {
HXLINE(1806)				return ( (Float)(::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_float(pname)) );
            			}
            			break;
            			case (int)32873: case (int)34068: {
HXLINE(1865)				return ::lime::graphics::opengl::_GLTexture::GLTexture_Impl__obj::fromInt(::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_integer(pname));
            			}
            			break;
            			case (int)34467: {
HXLINE(1830)				 ::Dynamic elements = ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_integer(34466);
HXDLIN(1830)				 ::lime::utils::ArrayBufferView this1;
HXDLIN(1830)				if (::hx::IsNotNull( elements )) {
HXLINE(1830)					this1 =  ::lime::utils::ArrayBufferView_obj::__alloc( HX_CTX ,elements,7);
            				}
            				else {
HXLINE(1830)					HX_STACK_DO_THROW(HX_("Invalid constructor arguments for UInt32Array",10,43,eb,8e));
            				}
HXDLIN(1830)				 ::lime::utils::ArrayBufferView params10 = this1;
HXLINE(1831)				{
HXLINE(1831)					Float params11 = ::lime::utils::_DataPointer::DataPointer_Impl__obj::fromArrayBufferView(params10);
HXDLIN(1831)					::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_integerv(pname,params11);
            				}
HXLINE(1832)				return params10;
            			}
            			break;
            			case (int)34964: case (int)34965: {
HXLINE(1849)				return ::lime::graphics::opengl::_GLBuffer::GLBuffer_Impl__obj::fromInt(::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_integer(pname));
            			}
            			break;
            			case (int)35725: {
HXLINE(1853)				return ::lime::graphics::opengl::_GLProgram::GLProgram_Impl__obj::fromInt(::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_integer(pname));
            			}
            			break;
            			case (int)36006: {
HXLINE(1857)				return ::lime::graphics::opengl::_GLFramebuffer::GLFramebuffer_Impl__obj::fromInt(::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_integer(pname));
            			}
            			break;
            			case (int)36007: {
HXLINE(1861)				return ::lime::graphics::opengl::_GLRenderbuffer::GLRenderbuffer_Impl__obj::fromInt(::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_integer(pname));
            			}
            			break;
            			case (int)2884: case (int)2929: case (int)2930: case (int)2960: case (int)3024: case (int)3042: case (int)3089: case (int)32823: case (int)32939: case (int)37440: case (int)37441: {
HXLINE(1794)				return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_boolean(pname);
            			}
            			break;
            			case (int)2885: case (int)2886: case (int)2932: case (int)2961: case (int)2962: case (int)2963: case (int)2964: case (int)2965: case (int)2966: case (int)2967: case (int)2968: case (int)3317: case (int)3333: case (int)3379: case (int)3408: case (int)3410: case (int)3411: case (int)3412: case (int)3413: case (int)3414: case (int)3415: case (int)32777: case (int)32936: case (int)32937: case (int)32968: case (int)32969: case (int)32970: case (int)32971: case (int)33170: case (int)34016: case (int)34024: case (int)34076: case (int)34816: case (int)34817: case (int)34818: case (int)34819: case (int)34877: case (int)34921: case (int)34930: case (int)35660: case (int)35661: case (int)35738: case (int)35739: case (int)36003: case (int)36004: case (int)36005: case (int)36347: case (int)36348: case (int)36349: case (int)37443: {
HXLINE(1827)				return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_integer(pname);
            			}
            			break;
            			default:{
HXLINE(1868)				return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_integer(pname);
            			}
            		}
HXLINE(1790)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,getParameter,return )

 ::haxe::ds::StringMap NativeOpenGLRenderContext_obj::_hx___extensionObjects;

 ::haxe::ds::StringMap NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors;

int NativeOpenGLRenderContext_obj::_hx___lastContextID;

::Array< ::String > NativeOpenGLRenderContext_obj::_hx___supportedExtensions;


::hx::ObjectPtr< NativeOpenGLRenderContext_obj > NativeOpenGLRenderContext_obj::__new() {
	::hx::ObjectPtr< NativeOpenGLRenderContext_obj > __this = new NativeOpenGLRenderContext_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< NativeOpenGLRenderContext_obj > NativeOpenGLRenderContext_obj::__alloc(::hx::Ctx *_hx_ctx) {
	NativeOpenGLRenderContext_obj *__this = (NativeOpenGLRenderContext_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(NativeOpenGLRenderContext_obj), true, "lime._internal.backend.native.NativeOpenGLRenderContext"));
	*(void **)__this = NativeOpenGLRenderContext_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

NativeOpenGLRenderContext_obj::NativeOpenGLRenderContext_obj()
{
}

void NativeOpenGLRenderContext_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(NativeOpenGLRenderContext);
	HX_MARK_MEMBER_NAME(DEPTH_BUFFER_BIT,"DEPTH_BUFFER_BIT");
	HX_MARK_MEMBER_NAME(STENCIL_BUFFER_BIT,"STENCIL_BUFFER_BIT");
	HX_MARK_MEMBER_NAME(COLOR_BUFFER_BIT,"COLOR_BUFFER_BIT");
	HX_MARK_MEMBER_NAME(TRIANGLES,"TRIANGLES");
	HX_MARK_MEMBER_NAME(ZERO,"ZERO");
	HX_MARK_MEMBER_NAME(ONE,"ONE");
	HX_MARK_MEMBER_NAME(SRC_COLOR,"SRC_COLOR");
	HX_MARK_MEMBER_NAME(ONE_MINUS_SRC_COLOR,"ONE_MINUS_SRC_COLOR");
	HX_MARK_MEMBER_NAME(SRC_ALPHA,"SRC_ALPHA");
	HX_MARK_MEMBER_NAME(ONE_MINUS_SRC_ALPHA,"ONE_MINUS_SRC_ALPHA");
	HX_MARK_MEMBER_NAME(DST_ALPHA,"DST_ALPHA");
	HX_MARK_MEMBER_NAME(ONE_MINUS_DST_ALPHA,"ONE_MINUS_DST_ALPHA");
	HX_MARK_MEMBER_NAME(DST_COLOR,"DST_COLOR");
	HX_MARK_MEMBER_NAME(ONE_MINUS_DST_COLOR,"ONE_MINUS_DST_COLOR");
	HX_MARK_MEMBER_NAME(FUNC_ADD,"FUNC_ADD");
	HX_MARK_MEMBER_NAME(FUNC_REVERSE_SUBTRACT,"FUNC_REVERSE_SUBTRACT");
	HX_MARK_MEMBER_NAME(ARRAY_BUFFER,"ARRAY_BUFFER");
	HX_MARK_MEMBER_NAME(ELEMENT_ARRAY_BUFFER,"ELEMENT_ARRAY_BUFFER");
	HX_MARK_MEMBER_NAME(STATIC_DRAW,"STATIC_DRAW");
	HX_MARK_MEMBER_NAME(DYNAMIC_DRAW,"DYNAMIC_DRAW");
	HX_MARK_MEMBER_NAME(FRONT,"FRONT");
	HX_MARK_MEMBER_NAME(BACK,"BACK");
	HX_MARK_MEMBER_NAME(FRONT_AND_BACK,"FRONT_AND_BACK");
	HX_MARK_MEMBER_NAME(TEXTURE_2D,"TEXTURE_2D");
	HX_MARK_MEMBER_NAME(CULL_FACE,"CULL_FACE");
	HX_MARK_MEMBER_NAME(BLEND,"BLEND");
	HX_MARK_MEMBER_NAME(STENCIL_TEST,"STENCIL_TEST");
	HX_MARK_MEMBER_NAME(DEPTH_TEST,"DEPTH_TEST");
	HX_MARK_MEMBER_NAME(SCISSOR_TEST,"SCISSOR_TEST");
	HX_MARK_MEMBER_NAME(CW,"CW");
	HX_MARK_MEMBER_NAME(CCW,"CCW");
	HX_MARK_MEMBER_NAME(MAX_TEXTURE_SIZE,"MAX_TEXTURE_SIZE");
	HX_MARK_MEMBER_NAME(UNSIGNED_BYTE,"UNSIGNED_BYTE");
	HX_MARK_MEMBER_NAME(UNSIGNED_SHORT,"UNSIGNED_SHORT");
	HX_MARK_MEMBER_NAME(INT,"INT");
	HX_MARK_MEMBER_NAME(FLOAT,"FLOAT");
	HX_MARK_MEMBER_NAME(ALPHA,"ALPHA");
	HX_MARK_MEMBER_NAME(RGBA,"RGBA");
	HX_MARK_MEMBER_NAME(FRAGMENT_SHADER,"FRAGMENT_SHADER");
	HX_MARK_MEMBER_NAME(VERTEX_SHADER,"VERTEX_SHADER");
	HX_MARK_MEMBER_NAME(MAX_TEXTURE_IMAGE_UNITS,"MAX_TEXTURE_IMAGE_UNITS");
	HX_MARK_MEMBER_NAME(LINK_STATUS,"LINK_STATUS");
	HX_MARK_MEMBER_NAME(ACTIVE_UNIFORMS,"ACTIVE_UNIFORMS");
	HX_MARK_MEMBER_NAME(SHADING_LANGUAGE_VERSION,"SHADING_LANGUAGE_VERSION");
	HX_MARK_MEMBER_NAME(NEVER,"NEVER");
	HX_MARK_MEMBER_NAME(LESS,"LESS");
	HX_MARK_MEMBER_NAME(EQUAL,"EQUAL");
	HX_MARK_MEMBER_NAME(LEQUAL,"LEQUAL");
	HX_MARK_MEMBER_NAME(GREATER,"GREATER");
	HX_MARK_MEMBER_NAME(NOTEQUAL,"NOTEQUAL");
	HX_MARK_MEMBER_NAME(GEQUAL,"GEQUAL");
	HX_MARK_MEMBER_NAME(ALWAYS,"ALWAYS");
	HX_MARK_MEMBER_NAME(KEEP,"KEEP");
	HX_MARK_MEMBER_NAME(REPLACE,"REPLACE");
	HX_MARK_MEMBER_NAME(INCR,"INCR");
	HX_MARK_MEMBER_NAME(DECR,"DECR");
	HX_MARK_MEMBER_NAME(INVERT,"INVERT");
	HX_MARK_MEMBER_NAME(INCR_WRAP,"INCR_WRAP");
	HX_MARK_MEMBER_NAME(DECR_WRAP,"DECR_WRAP");
	HX_MARK_MEMBER_NAME(VENDOR,"VENDOR");
	HX_MARK_MEMBER_NAME(RENDERER,"RENDERER");
	HX_MARK_MEMBER_NAME(VERSION,"VERSION");
	HX_MARK_MEMBER_NAME(NEAREST,"NEAREST");
	HX_MARK_MEMBER_NAME(LINEAR,"LINEAR");
	HX_MARK_MEMBER_NAME(NEAREST_MIPMAP_NEAREST,"NEAREST_MIPMAP_NEAREST");
	HX_MARK_MEMBER_NAME(LINEAR_MIPMAP_NEAREST,"LINEAR_MIPMAP_NEAREST");
	HX_MARK_MEMBER_NAME(NEAREST_MIPMAP_LINEAR,"NEAREST_MIPMAP_LINEAR");
	HX_MARK_MEMBER_NAME(LINEAR_MIPMAP_LINEAR,"LINEAR_MIPMAP_LINEAR");
	HX_MARK_MEMBER_NAME(TEXTURE_MAG_FILTER,"TEXTURE_MAG_FILTER");
	HX_MARK_MEMBER_NAME(TEXTURE_MIN_FILTER,"TEXTURE_MIN_FILTER");
	HX_MARK_MEMBER_NAME(TEXTURE_WRAP_S,"TEXTURE_WRAP_S");
	HX_MARK_MEMBER_NAME(TEXTURE_WRAP_T,"TEXTURE_WRAP_T");
	HX_MARK_MEMBER_NAME(TEXTURE_CUBE_MAP,"TEXTURE_CUBE_MAP");
	HX_MARK_MEMBER_NAME(TEXTURE_CUBE_MAP_POSITIVE_X,"TEXTURE_CUBE_MAP_POSITIVE_X");
	HX_MARK_MEMBER_NAME(TEXTURE0,"TEXTURE0");
	HX_MARK_MEMBER_NAME(REPEAT,"REPEAT");
	HX_MARK_MEMBER_NAME(CLAMP_TO_EDGE,"CLAMP_TO_EDGE");
	HX_MARK_MEMBER_NAME(COMPILE_STATUS,"COMPILE_STATUS");
	HX_MARK_MEMBER_NAME(FRAMEBUFFER,"FRAMEBUFFER");
	HX_MARK_MEMBER_NAME(RENDERBUFFER,"RENDERBUFFER");
	HX_MARK_MEMBER_NAME(DEPTH_COMPONENT16,"DEPTH_COMPONENT16");
	HX_MARK_MEMBER_NAME(STENCIL_INDEX8,"STENCIL_INDEX8");
	HX_MARK_MEMBER_NAME(COLOR_ATTACHMENT0,"COLOR_ATTACHMENT0");
	HX_MARK_MEMBER_NAME(DEPTH_ATTACHMENT,"DEPTH_ATTACHMENT");
	HX_MARK_MEMBER_NAME(STENCIL_ATTACHMENT,"STENCIL_ATTACHMENT");
	HX_MARK_MEMBER_NAME(DEPTH_STENCIL_ATTACHMENT,"DEPTH_STENCIL_ATTACHMENT");
	HX_MARK_MEMBER_NAME(NONE,"NONE");
	HX_MARK_MEMBER_NAME(FRAMEBUFFER_COMPLETE,"FRAMEBUFFER_COMPLETE");
	HX_MARK_MEMBER_NAME(DEPTH24_STENCIL8,"DEPTH24_STENCIL8");
	HX_MARK_MEMBER_NAME(type,"type");
	HX_MARK_MEMBER_NAME(version,"version");
	HX_MARK_MEMBER_NAME(_hx___arrayBufferBinding,"__arrayBufferBinding");
	HX_MARK_MEMBER_NAME(_hx___elementBufferBinding,"__elementBufferBinding");
	HX_MARK_MEMBER_NAME(_hx___contextID,"__contextID");
	HX_MARK_MEMBER_NAME(_hx___currentProgram,"__currentProgram");
	HX_MARK_MEMBER_NAME(_hx___framebufferBinding,"__framebufferBinding");
	HX_MARK_MEMBER_NAME(_hx___initialized,"__initialized");
	HX_MARK_MEMBER_NAME(_hx___isContextLost,"__isContextLost");
	HX_MARK_MEMBER_NAME(_hx___renderbufferBinding,"__renderbufferBinding");
	HX_MARK_MEMBER_NAME(_hx___texture2DBinding,"__texture2DBinding");
	HX_MARK_MEMBER_NAME(_hx___textureCubeMapBinding,"__textureCubeMapBinding");
	HX_MARK_END_CLASS();
}

void NativeOpenGLRenderContext_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(DEPTH_BUFFER_BIT,"DEPTH_BUFFER_BIT");
	HX_VISIT_MEMBER_NAME(STENCIL_BUFFER_BIT,"STENCIL_BUFFER_BIT");
	HX_VISIT_MEMBER_NAME(COLOR_BUFFER_BIT,"COLOR_BUFFER_BIT");
	HX_VISIT_MEMBER_NAME(TRIANGLES,"TRIANGLES");
	HX_VISIT_MEMBER_NAME(ZERO,"ZERO");
	HX_VISIT_MEMBER_NAME(ONE,"ONE");
	HX_VISIT_MEMBER_NAME(SRC_COLOR,"SRC_COLOR");
	HX_VISIT_MEMBER_NAME(ONE_MINUS_SRC_COLOR,"ONE_MINUS_SRC_COLOR");
	HX_VISIT_MEMBER_NAME(SRC_ALPHA,"SRC_ALPHA");
	HX_VISIT_MEMBER_NAME(ONE_MINUS_SRC_ALPHA,"ONE_MINUS_SRC_ALPHA");
	HX_VISIT_MEMBER_NAME(DST_ALPHA,"DST_ALPHA");
	HX_VISIT_MEMBER_NAME(ONE_MINUS_DST_ALPHA,"ONE_MINUS_DST_ALPHA");
	HX_VISIT_MEMBER_NAME(DST_COLOR,"DST_COLOR");
	HX_VISIT_MEMBER_NAME(ONE_MINUS_DST_COLOR,"ONE_MINUS_DST_COLOR");
	HX_VISIT_MEMBER_NAME(FUNC_ADD,"FUNC_ADD");
	HX_VISIT_MEMBER_NAME(FUNC_REVERSE_SUBTRACT,"FUNC_REVERSE_SUBTRACT");
	HX_VISIT_MEMBER_NAME(ARRAY_BUFFER,"ARRAY_BUFFER");
	HX_VISIT_MEMBER_NAME(ELEMENT_ARRAY_BUFFER,"ELEMENT_ARRAY_BUFFER");
	HX_VISIT_MEMBER_NAME(STATIC_DRAW,"STATIC_DRAW");
	HX_VISIT_MEMBER_NAME(DYNAMIC_DRAW,"DYNAMIC_DRAW");
	HX_VISIT_MEMBER_NAME(FRONT,"FRONT");
	HX_VISIT_MEMBER_NAME(BACK,"BACK");
	HX_VISIT_MEMBER_NAME(FRONT_AND_BACK,"FRONT_AND_BACK");
	HX_VISIT_MEMBER_NAME(TEXTURE_2D,"TEXTURE_2D");
	HX_VISIT_MEMBER_NAME(CULL_FACE,"CULL_FACE");
	HX_VISIT_MEMBER_NAME(BLEND,"BLEND");
	HX_VISIT_MEMBER_NAME(STENCIL_TEST,"STENCIL_TEST");
	HX_VISIT_MEMBER_NAME(DEPTH_TEST,"DEPTH_TEST");
	HX_VISIT_MEMBER_NAME(SCISSOR_TEST,"SCISSOR_TEST");
	HX_VISIT_MEMBER_NAME(CW,"CW");
	HX_VISIT_MEMBER_NAME(CCW,"CCW");
	HX_VISIT_MEMBER_NAME(MAX_TEXTURE_SIZE,"MAX_TEXTURE_SIZE");
	HX_VISIT_MEMBER_NAME(UNSIGNED_BYTE,"UNSIGNED_BYTE");
	HX_VISIT_MEMBER_NAME(UNSIGNED_SHORT,"UNSIGNED_SHORT");
	HX_VISIT_MEMBER_NAME(INT,"INT");
	HX_VISIT_MEMBER_NAME(FLOAT,"FLOAT");
	HX_VISIT_MEMBER_NAME(ALPHA,"ALPHA");
	HX_VISIT_MEMBER_NAME(RGBA,"RGBA");
	HX_VISIT_MEMBER_NAME(FRAGMENT_SHADER,"FRAGMENT_SHADER");
	HX_VISIT_MEMBER_NAME(VERTEX_SHADER,"VERTEX_SHADER");
	HX_VISIT_MEMBER_NAME(MAX_TEXTURE_IMAGE_UNITS,"MAX_TEXTURE_IMAGE_UNITS");
	HX_VISIT_MEMBER_NAME(LINK_STATUS,"LINK_STATUS");
	HX_VISIT_MEMBER_NAME(ACTIVE_UNIFORMS,"ACTIVE_UNIFORMS");
	HX_VISIT_MEMBER_NAME(SHADING_LANGUAGE_VERSION,"SHADING_LANGUAGE_VERSION");
	HX_VISIT_MEMBER_NAME(NEVER,"NEVER");
	HX_VISIT_MEMBER_NAME(LESS,"LESS");
	HX_VISIT_MEMBER_NAME(EQUAL,"EQUAL");
	HX_VISIT_MEMBER_NAME(LEQUAL,"LEQUAL");
	HX_VISIT_MEMBER_NAME(GREATER,"GREATER");
	HX_VISIT_MEMBER_NAME(NOTEQUAL,"NOTEQUAL");
	HX_VISIT_MEMBER_NAME(GEQUAL,"GEQUAL");
	HX_VISIT_MEMBER_NAME(ALWAYS,"ALWAYS");
	HX_VISIT_MEMBER_NAME(KEEP,"KEEP");
	HX_VISIT_MEMBER_NAME(REPLACE,"REPLACE");
	HX_VISIT_MEMBER_NAME(INCR,"INCR");
	HX_VISIT_MEMBER_NAME(DECR,"DECR");
	HX_VISIT_MEMBER_NAME(INVERT,"INVERT");
	HX_VISIT_MEMBER_NAME(INCR_WRAP,"INCR_WRAP");
	HX_VISIT_MEMBER_NAME(DECR_WRAP,"DECR_WRAP");
	HX_VISIT_MEMBER_NAME(VENDOR,"VENDOR");
	HX_VISIT_MEMBER_NAME(RENDERER,"RENDERER");
	HX_VISIT_MEMBER_NAME(VERSION,"VERSION");
	HX_VISIT_MEMBER_NAME(NEAREST,"NEAREST");
	HX_VISIT_MEMBER_NAME(LINEAR,"LINEAR");
	HX_VISIT_MEMBER_NAME(NEAREST_MIPMAP_NEAREST,"NEAREST_MIPMAP_NEAREST");
	HX_VISIT_MEMBER_NAME(LINEAR_MIPMAP_NEAREST,"LINEAR_MIPMAP_NEAREST");
	HX_VISIT_MEMBER_NAME(NEAREST_MIPMAP_LINEAR,"NEAREST_MIPMAP_LINEAR");
	HX_VISIT_MEMBER_NAME(LINEAR_MIPMAP_LINEAR,"LINEAR_MIPMAP_LINEAR");
	HX_VISIT_MEMBER_NAME(TEXTURE_MAG_FILTER,"TEXTURE_MAG_FILTER");
	HX_VISIT_MEMBER_NAME(TEXTURE_MIN_FILTER,"TEXTURE_MIN_FILTER");
	HX_VISIT_MEMBER_NAME(TEXTURE_WRAP_S,"TEXTURE_WRAP_S");
	HX_VISIT_MEMBER_NAME(TEXTURE_WRAP_T,"TEXTURE_WRAP_T");
	HX_VISIT_MEMBER_NAME(TEXTURE_CUBE_MAP,"TEXTURE_CUBE_MAP");
	HX_VISIT_MEMBER_NAME(TEXTURE_CUBE_MAP_POSITIVE_X,"TEXTURE_CUBE_MAP_POSITIVE_X");
	HX_VISIT_MEMBER_NAME(TEXTURE0,"TEXTURE0");
	HX_VISIT_MEMBER_NAME(REPEAT,"REPEAT");
	HX_VISIT_MEMBER_NAME(CLAMP_TO_EDGE,"CLAMP_TO_EDGE");
	HX_VISIT_MEMBER_NAME(COMPILE_STATUS,"COMPILE_STATUS");
	HX_VISIT_MEMBER_NAME(FRAMEBUFFER,"FRAMEBUFFER");
	HX_VISIT_MEMBER_NAME(RENDERBUFFER,"RENDERBUFFER");
	HX_VISIT_MEMBER_NAME(DEPTH_COMPONENT16,"DEPTH_COMPONENT16");
	HX_VISIT_MEMBER_NAME(STENCIL_INDEX8,"STENCIL_INDEX8");
	HX_VISIT_MEMBER_NAME(COLOR_ATTACHMENT0,"COLOR_ATTACHMENT0");
	HX_VISIT_MEMBER_NAME(DEPTH_ATTACHMENT,"DEPTH_ATTACHMENT");
	HX_VISIT_MEMBER_NAME(STENCIL_ATTACHMENT,"STENCIL_ATTACHMENT");
	HX_VISIT_MEMBER_NAME(DEPTH_STENCIL_ATTACHMENT,"DEPTH_STENCIL_ATTACHMENT");
	HX_VISIT_MEMBER_NAME(NONE,"NONE");
	HX_VISIT_MEMBER_NAME(FRAMEBUFFER_COMPLETE,"FRAMEBUFFER_COMPLETE");
	HX_VISIT_MEMBER_NAME(DEPTH24_STENCIL8,"DEPTH24_STENCIL8");
	HX_VISIT_MEMBER_NAME(type,"type");
	HX_VISIT_MEMBER_NAME(version,"version");
	HX_VISIT_MEMBER_NAME(_hx___arrayBufferBinding,"__arrayBufferBinding");
	HX_VISIT_MEMBER_NAME(_hx___elementBufferBinding,"__elementBufferBinding");
	HX_VISIT_MEMBER_NAME(_hx___contextID,"__contextID");
	HX_VISIT_MEMBER_NAME(_hx___currentProgram,"__currentProgram");
	HX_VISIT_MEMBER_NAME(_hx___framebufferBinding,"__framebufferBinding");
	HX_VISIT_MEMBER_NAME(_hx___initialized,"__initialized");
	HX_VISIT_MEMBER_NAME(_hx___isContextLost,"__isContextLost");
	HX_VISIT_MEMBER_NAME(_hx___renderbufferBinding,"__renderbufferBinding");
	HX_VISIT_MEMBER_NAME(_hx___texture2DBinding,"__texture2DBinding");
	HX_VISIT_MEMBER_NAME(_hx___textureCubeMapBinding,"__textureCubeMapBinding");
}

::hx::Val NativeOpenGLRenderContext_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"CW") ) { return ::hx::Val( CW ); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"ONE") ) { return ::hx::Val( ONE ); }
		if (HX_FIELD_EQ(inName,"CCW") ) { return ::hx::Val( CCW ); }
		if (HX_FIELD_EQ(inName,"INT") ) { return ::hx::Val( INT ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"ZERO") ) { return ::hx::Val( ZERO ); }
		if (HX_FIELD_EQ(inName,"BACK") ) { return ::hx::Val( BACK ); }
		if (HX_FIELD_EQ(inName,"RGBA") ) { return ::hx::Val( RGBA ); }
		if (HX_FIELD_EQ(inName,"LESS") ) { return ::hx::Val( LESS ); }
		if (HX_FIELD_EQ(inName,"KEEP") ) { return ::hx::Val( KEEP ); }
		if (HX_FIELD_EQ(inName,"INCR") ) { return ::hx::Val( INCR ); }
		if (HX_FIELD_EQ(inName,"DECR") ) { return ::hx::Val( DECR ); }
		if (HX_FIELD_EQ(inName,"NONE") ) { return ::hx::Val( NONE ); }
		if (HX_FIELD_EQ(inName,"type") ) { return ::hx::Val( type ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"FRONT") ) { return ::hx::Val( FRONT ); }
		if (HX_FIELD_EQ(inName,"BLEND") ) { return ::hx::Val( BLEND ); }
		if (HX_FIELD_EQ(inName,"FLOAT") ) { return ::hx::Val( FLOAT ); }
		if (HX_FIELD_EQ(inName,"ALPHA") ) { return ::hx::Val( ALPHA ); }
		if (HX_FIELD_EQ(inName,"NEVER") ) { return ::hx::Val( NEVER ); }
		if (HX_FIELD_EQ(inName,"EQUAL") ) { return ::hx::Val( EQUAL ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"LEQUAL") ) { return ::hx::Val( LEQUAL ); }
		if (HX_FIELD_EQ(inName,"GEQUAL") ) { return ::hx::Val( GEQUAL ); }
		if (HX_FIELD_EQ(inName,"ALWAYS") ) { return ::hx::Val( ALWAYS ); }
		if (HX_FIELD_EQ(inName,"INVERT") ) { return ::hx::Val( INVERT ); }
		if (HX_FIELD_EQ(inName,"VENDOR") ) { return ::hx::Val( VENDOR ); }
		if (HX_FIELD_EQ(inName,"LINEAR") ) { return ::hx::Val( LINEAR ); }
		if (HX_FIELD_EQ(inName,"REPEAT") ) { return ::hx::Val( REPEAT ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"GREATER") ) { return ::hx::Val( GREATER ); }
		if (HX_FIELD_EQ(inName,"REPLACE") ) { return ::hx::Val( REPLACE ); }
		if (HX_FIELD_EQ(inName,"VERSION") ) { return ::hx::Val( VERSION ); }
		if (HX_FIELD_EQ(inName,"NEAREST") ) { return ::hx::Val( NEAREST ); }
		if (HX_FIELD_EQ(inName,"version") ) { return ::hx::Val( version ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"FUNC_ADD") ) { return ::hx::Val( FUNC_ADD ); }
		if (HX_FIELD_EQ(inName,"NOTEQUAL") ) { return ::hx::Val( NOTEQUAL ); }
		if (HX_FIELD_EQ(inName,"RENDERER") ) { return ::hx::Val( RENDERER ); }
		if (HX_FIELD_EQ(inName,"TEXTURE0") ) { return ::hx::Val( TEXTURE0 ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"TRIANGLES") ) { return ::hx::Val( TRIANGLES ); }
		if (HX_FIELD_EQ(inName,"SRC_COLOR") ) { return ::hx::Val( SRC_COLOR ); }
		if (HX_FIELD_EQ(inName,"SRC_ALPHA") ) { return ::hx::Val( SRC_ALPHA ); }
		if (HX_FIELD_EQ(inName,"DST_ALPHA") ) { return ::hx::Val( DST_ALPHA ); }
		if (HX_FIELD_EQ(inName,"DST_COLOR") ) { return ::hx::Val( DST_COLOR ); }
		if (HX_FIELD_EQ(inName,"CULL_FACE") ) { return ::hx::Val( CULL_FACE ); }
		if (HX_FIELD_EQ(inName,"INCR_WRAP") ) { return ::hx::Val( INCR_WRAP ); }
		if (HX_FIELD_EQ(inName,"DECR_WRAP") ) { return ::hx::Val( DECR_WRAP ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"TEXTURE_2D") ) { return ::hx::Val( TEXTURE_2D ); }
		if (HX_FIELD_EQ(inName,"DEPTH_TEST") ) { return ::hx::Val( DEPTH_TEST ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"STATIC_DRAW") ) { return ::hx::Val( STATIC_DRAW ); }
		if (HX_FIELD_EQ(inName,"LINK_STATUS") ) { return ::hx::Val( LINK_STATUS ); }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER") ) { return ::hx::Val( FRAMEBUFFER ); }
		if (HX_FIELD_EQ(inName,"__contextID") ) { return ::hx::Val( _hx___contextID ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"ARRAY_BUFFER") ) { return ::hx::Val( ARRAY_BUFFER ); }
		if (HX_FIELD_EQ(inName,"DYNAMIC_DRAW") ) { return ::hx::Val( DYNAMIC_DRAW ); }
		if (HX_FIELD_EQ(inName,"STENCIL_TEST") ) { return ::hx::Val( STENCIL_TEST ); }
		if (HX_FIELD_EQ(inName,"SCISSOR_TEST") ) { return ::hx::Val( SCISSOR_TEST ); }
		if (HX_FIELD_EQ(inName,"RENDERBUFFER") ) { return ::hx::Val( RENDERBUFFER ); }
		if (HX_FIELD_EQ(inName,"getParameter") ) { return ::hx::Val( getParameter_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"UNSIGNED_BYTE") ) { return ::hx::Val( UNSIGNED_BYTE ); }
		if (HX_FIELD_EQ(inName,"VERTEX_SHADER") ) { return ::hx::Val( VERTEX_SHADER ); }
		if (HX_FIELD_EQ(inName,"CLAMP_TO_EDGE") ) { return ::hx::Val( CLAMP_TO_EDGE ); }
		if (HX_FIELD_EQ(inName,"__initialized") ) { return ::hx::Val( _hx___initialized ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"FRONT_AND_BACK") ) { return ::hx::Val( FRONT_AND_BACK ); }
		if (HX_FIELD_EQ(inName,"UNSIGNED_SHORT") ) { return ::hx::Val( UNSIGNED_SHORT ); }
		if (HX_FIELD_EQ(inName,"TEXTURE_WRAP_S") ) { return ::hx::Val( TEXTURE_WRAP_S ); }
		if (HX_FIELD_EQ(inName,"TEXTURE_WRAP_T") ) { return ::hx::Val( TEXTURE_WRAP_T ); }
		if (HX_FIELD_EQ(inName,"COMPILE_STATUS") ) { return ::hx::Val( COMPILE_STATUS ); }
		if (HX_FIELD_EQ(inName,"STENCIL_INDEX8") ) { return ::hx::Val( STENCIL_INDEX8 ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"FRAGMENT_SHADER") ) { return ::hx::Val( FRAGMENT_SHADER ); }
		if (HX_FIELD_EQ(inName,"ACTIVE_UNIFORMS") ) { return ::hx::Val( ACTIVE_UNIFORMS ); }
		if (HX_FIELD_EQ(inName,"__isContextLost") ) { return ::hx::Val( _hx___isContextLost ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"DEPTH_BUFFER_BIT") ) { return ::hx::Val( DEPTH_BUFFER_BIT ); }
		if (HX_FIELD_EQ(inName,"COLOR_BUFFER_BIT") ) { return ::hx::Val( COLOR_BUFFER_BIT ); }
		if (HX_FIELD_EQ(inName,"MAX_TEXTURE_SIZE") ) { return ::hx::Val( MAX_TEXTURE_SIZE ); }
		if (HX_FIELD_EQ(inName,"TEXTURE_CUBE_MAP") ) { return ::hx::Val( TEXTURE_CUBE_MAP ); }
		if (HX_FIELD_EQ(inName,"DEPTH_ATTACHMENT") ) { return ::hx::Val( DEPTH_ATTACHMENT ); }
		if (HX_FIELD_EQ(inName,"DEPTH24_STENCIL8") ) { return ::hx::Val( DEPTH24_STENCIL8 ); }
		if (HX_FIELD_EQ(inName,"__currentProgram") ) { return ::hx::Val( _hx___currentProgram ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"DEPTH_COMPONENT16") ) { return ::hx::Val( DEPTH_COMPONENT16 ); }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT0") ) { return ::hx::Val( COLOR_ATTACHMENT0 ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"STENCIL_BUFFER_BIT") ) { return ::hx::Val( STENCIL_BUFFER_BIT ); }
		if (HX_FIELD_EQ(inName,"TEXTURE_MAG_FILTER") ) { return ::hx::Val( TEXTURE_MAG_FILTER ); }
		if (HX_FIELD_EQ(inName,"TEXTURE_MIN_FILTER") ) { return ::hx::Val( TEXTURE_MIN_FILTER ); }
		if (HX_FIELD_EQ(inName,"STENCIL_ATTACHMENT") ) { return ::hx::Val( STENCIL_ATTACHMENT ); }
		if (HX_FIELD_EQ(inName,"__texture2DBinding") ) { return ::hx::Val( _hx___texture2DBinding ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"ONE_MINUS_SRC_COLOR") ) { return ::hx::Val( ONE_MINUS_SRC_COLOR ); }
		if (HX_FIELD_EQ(inName,"ONE_MINUS_SRC_ALPHA") ) { return ::hx::Val( ONE_MINUS_SRC_ALPHA ); }
		if (HX_FIELD_EQ(inName,"ONE_MINUS_DST_ALPHA") ) { return ::hx::Val( ONE_MINUS_DST_ALPHA ); }
		if (HX_FIELD_EQ(inName,"ONE_MINUS_DST_COLOR") ) { return ::hx::Val( ONE_MINUS_DST_COLOR ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"ELEMENT_ARRAY_BUFFER") ) { return ::hx::Val( ELEMENT_ARRAY_BUFFER ); }
		if (HX_FIELD_EQ(inName,"LINEAR_MIPMAP_LINEAR") ) { return ::hx::Val( LINEAR_MIPMAP_LINEAR ); }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_COMPLETE") ) { return ::hx::Val( FRAMEBUFFER_COMPLETE ); }
		if (HX_FIELD_EQ(inName,"__arrayBufferBinding") ) { return ::hx::Val( _hx___arrayBufferBinding ); }
		if (HX_FIELD_EQ(inName,"__framebufferBinding") ) { return ::hx::Val( _hx___framebufferBinding ); }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"FUNC_REVERSE_SUBTRACT") ) { return ::hx::Val( FUNC_REVERSE_SUBTRACT ); }
		if (HX_FIELD_EQ(inName,"LINEAR_MIPMAP_NEAREST") ) { return ::hx::Val( LINEAR_MIPMAP_NEAREST ); }
		if (HX_FIELD_EQ(inName,"NEAREST_MIPMAP_LINEAR") ) { return ::hx::Val( NEAREST_MIPMAP_LINEAR ); }
		if (HX_FIELD_EQ(inName,"__renderbufferBinding") ) { return ::hx::Val( _hx___renderbufferBinding ); }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"NEAREST_MIPMAP_NEAREST") ) { return ::hx::Val( NEAREST_MIPMAP_NEAREST ); }
		if (HX_FIELD_EQ(inName,"__elementBufferBinding") ) { return ::hx::Val( _hx___elementBufferBinding ); }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"MAX_TEXTURE_IMAGE_UNITS") ) { return ::hx::Val( MAX_TEXTURE_IMAGE_UNITS ); }
		if (HX_FIELD_EQ(inName,"__textureCubeMapBinding") ) { return ::hx::Val( _hx___textureCubeMapBinding ); }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"SHADING_LANGUAGE_VERSION") ) { return ::hx::Val( SHADING_LANGUAGE_VERSION ); }
		if (HX_FIELD_EQ(inName,"DEPTH_STENCIL_ATTACHMENT") ) { return ::hx::Val( DEPTH_STENCIL_ATTACHMENT ); }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"TEXTURE_CUBE_MAP_POSITIVE_X") ) { return ::hx::Val( TEXTURE_CUBE_MAP_POSITIVE_X ); }
	}
	return super::__Field(inName,inCallProp);
}

bool NativeOpenGLRenderContext_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 15:
		if (HX_FIELD_EQ(inName,"__lastContextID") ) { outValue = ( _hx___lastContextID ); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"__extensionObjects") ) { outValue = ( _hx___extensionObjects ); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"__supportedExtensions") ) { outValue = ( _hx___supportedExtensions ); return true; }
		break;
	case 29:
		if (HX_FIELD_EQ(inName,"__extensionObjectConstructors") ) { outValue = ( _hx___extensionObjectConstructors ); return true; }
	}
	return false;
}

::hx::Val NativeOpenGLRenderContext_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"CW") ) { CW=inValue.Cast< int >(); return inValue; }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"ONE") ) { ONE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"CCW") ) { CCW=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"INT") ) { INT=inValue.Cast< int >(); return inValue; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"ZERO") ) { ZERO=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"BACK") ) { BACK=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RGBA") ) { RGBA=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"LESS") ) { LESS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"KEEP") ) { KEEP=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"INCR") ) { INCR=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DECR") ) { DECR=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"NONE") ) { NONE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"type") ) { type=inValue.Cast< ::String >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"FRONT") ) { FRONT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"BLEND") ) { BLEND=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FLOAT") ) { FLOAT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ALPHA") ) { ALPHA=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"NEVER") ) { NEVER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"EQUAL") ) { EQUAL=inValue.Cast< int >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"LEQUAL") ) { LEQUAL=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"GEQUAL") ) { GEQUAL=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ALWAYS") ) { ALWAYS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"INVERT") ) { INVERT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"VENDOR") ) { VENDOR=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"LINEAR") ) { LINEAR=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"REPEAT") ) { REPEAT=inValue.Cast< int >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"GREATER") ) { GREATER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"REPLACE") ) { REPLACE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"VERSION") ) { VERSION=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"NEAREST") ) { NEAREST=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"version") ) { version=inValue.Cast< Float >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"FUNC_ADD") ) { FUNC_ADD=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"NOTEQUAL") ) { NOTEQUAL=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RENDERER") ) { RENDERER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE0") ) { TEXTURE0=inValue.Cast< int >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"TRIANGLES") ) { TRIANGLES=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SRC_COLOR") ) { SRC_COLOR=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SRC_ALPHA") ) { SRC_ALPHA=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DST_ALPHA") ) { DST_ALPHA=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DST_COLOR") ) { DST_COLOR=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"CULL_FACE") ) { CULL_FACE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"INCR_WRAP") ) { INCR_WRAP=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DECR_WRAP") ) { DECR_WRAP=inValue.Cast< int >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"TEXTURE_2D") ) { TEXTURE_2D=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DEPTH_TEST") ) { DEPTH_TEST=inValue.Cast< int >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"STATIC_DRAW") ) { STATIC_DRAW=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"LINK_STATUS") ) { LINK_STATUS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER") ) { FRAMEBUFFER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__contextID") ) { _hx___contextID=inValue.Cast< int >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"ARRAY_BUFFER") ) { ARRAY_BUFFER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DYNAMIC_DRAW") ) { DYNAMIC_DRAW=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"STENCIL_TEST") ) { STENCIL_TEST=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SCISSOR_TEST") ) { SCISSOR_TEST=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RENDERBUFFER") ) { RENDERBUFFER=inValue.Cast< int >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"UNSIGNED_BYTE") ) { UNSIGNED_BYTE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"VERTEX_SHADER") ) { VERTEX_SHADER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"CLAMP_TO_EDGE") ) { CLAMP_TO_EDGE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__initialized") ) { _hx___initialized=inValue.Cast< bool >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"FRONT_AND_BACK") ) { FRONT_AND_BACK=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNSIGNED_SHORT") ) { UNSIGNED_SHORT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE_WRAP_S") ) { TEXTURE_WRAP_S=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE_WRAP_T") ) { TEXTURE_WRAP_T=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"COMPILE_STATUS") ) { COMPILE_STATUS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"STENCIL_INDEX8") ) { STENCIL_INDEX8=inValue.Cast< int >(); return inValue; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"FRAGMENT_SHADER") ) { FRAGMENT_SHADER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ACTIVE_UNIFORMS") ) { ACTIVE_UNIFORMS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__isContextLost") ) { _hx___isContextLost=inValue.Cast< bool >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"DEPTH_BUFFER_BIT") ) { DEPTH_BUFFER_BIT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"COLOR_BUFFER_BIT") ) { COLOR_BUFFER_BIT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MAX_TEXTURE_SIZE") ) { MAX_TEXTURE_SIZE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE_CUBE_MAP") ) { TEXTURE_CUBE_MAP=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DEPTH_ATTACHMENT") ) { DEPTH_ATTACHMENT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DEPTH24_STENCIL8") ) { DEPTH24_STENCIL8=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__currentProgram") ) { _hx___currentProgram=inValue.Cast<  ::lime::graphics::opengl::GLObject >(); return inValue; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"DEPTH_COMPONENT16") ) { DEPTH_COMPONENT16=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT0") ) { COLOR_ATTACHMENT0=inValue.Cast< int >(); return inValue; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"STENCIL_BUFFER_BIT") ) { STENCIL_BUFFER_BIT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE_MAG_FILTER") ) { TEXTURE_MAG_FILTER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE_MIN_FILTER") ) { TEXTURE_MIN_FILTER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"STENCIL_ATTACHMENT") ) { STENCIL_ATTACHMENT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__texture2DBinding") ) { _hx___texture2DBinding=inValue.Cast<  ::lime::graphics::opengl::GLObject >(); return inValue; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"ONE_MINUS_SRC_COLOR") ) { ONE_MINUS_SRC_COLOR=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ONE_MINUS_SRC_ALPHA") ) { ONE_MINUS_SRC_ALPHA=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ONE_MINUS_DST_ALPHA") ) { ONE_MINUS_DST_ALPHA=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ONE_MINUS_DST_COLOR") ) { ONE_MINUS_DST_COLOR=inValue.Cast< int >(); return inValue; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"ELEMENT_ARRAY_BUFFER") ) { ELEMENT_ARRAY_BUFFER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"LINEAR_MIPMAP_LINEAR") ) { LINEAR_MIPMAP_LINEAR=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_COMPLETE") ) { FRAMEBUFFER_COMPLETE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__arrayBufferBinding") ) { _hx___arrayBufferBinding=inValue.Cast<  ::lime::graphics::opengl::GLObject >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__framebufferBinding") ) { _hx___framebufferBinding=inValue.Cast<  ::lime::graphics::opengl::GLObject >(); return inValue; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"FUNC_REVERSE_SUBTRACT") ) { FUNC_REVERSE_SUBTRACT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"LINEAR_MIPMAP_NEAREST") ) { LINEAR_MIPMAP_NEAREST=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"NEAREST_MIPMAP_LINEAR") ) { NEAREST_MIPMAP_LINEAR=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__renderbufferBinding") ) { _hx___renderbufferBinding=inValue.Cast<  ::lime::graphics::opengl::GLObject >(); return inValue; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"NEAREST_MIPMAP_NEAREST") ) { NEAREST_MIPMAP_NEAREST=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__elementBufferBinding") ) { _hx___elementBufferBinding=inValue.Cast<  ::lime::graphics::opengl::GLObject >(); return inValue; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"MAX_TEXTURE_IMAGE_UNITS") ) { MAX_TEXTURE_IMAGE_UNITS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__textureCubeMapBinding") ) { _hx___textureCubeMapBinding=inValue.Cast<  ::lime::graphics::opengl::GLObject >(); return inValue; }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"SHADING_LANGUAGE_VERSION") ) { SHADING_LANGUAGE_VERSION=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DEPTH_STENCIL_ATTACHMENT") ) { DEPTH_STENCIL_ATTACHMENT=inValue.Cast< int >(); return inValue; }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"TEXTURE_CUBE_MAP_POSITIVE_X") ) { TEXTURE_CUBE_MAP_POSITIVE_X=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool NativeOpenGLRenderContext_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 15:
		if (HX_FIELD_EQ(inName,"__lastContextID") ) { _hx___lastContextID=ioValue.Cast< int >(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"__extensionObjects") ) { _hx___extensionObjects=ioValue.Cast<  ::haxe::ds::StringMap >(); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"__supportedExtensions") ) { _hx___supportedExtensions=ioValue.Cast< ::Array< ::String > >(); return true; }
		break;
	case 29:
		if (HX_FIELD_EQ(inName,"__extensionObjectConstructors") ) { _hx___extensionObjectConstructors=ioValue.Cast<  ::haxe::ds::StringMap >(); return true; }
	}
	return false;
}

void NativeOpenGLRenderContext_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("DEPTH_BUFFER_BIT",ca,5b,ce,c6));
	outFields->push(HX_("STENCIL_BUFFER_BIT",71,93,29,de));
	outFields->push(HX_("COLOR_BUFFER_BIT",6a,f7,74,fb));
	outFields->push(HX_("TRIANGLES",8b,a0,99,7a));
	outFields->push(HX_("ZERO",28,d7,b1,3b));
	outFields->push(HX_("ONE",46,36,3c,00));
	outFields->push(HX_("SRC_COLOR",48,9e,bd,5c));
	outFields->push(HX_("ONE_MINUS_SRC_COLOR",20,3b,e1,48));
	outFields->push(HX_("SRC_ALPHA",43,d4,f7,33));
	outFields->push(HX_("ONE_MINUS_SRC_ALPHA",1b,71,1b,20));
	outFields->push(HX_("DST_ALPHA",24,02,f2,d3));
	outFields->push(HX_("ONE_MINUS_DST_ALPHA",fc,9e,15,c0));
	outFields->push(HX_("DST_COLOR",29,cc,b7,fc));
	outFields->push(HX_("ONE_MINUS_DST_COLOR",01,69,db,e8));
	outFields->push(HX_("FUNC_ADD",46,78,17,75));
	outFields->push(HX_("FUNC_REVERSE_SUBTRACT",cc,8d,ef,f3));
	outFields->push(HX_("ARRAY_BUFFER",46,66,17,f4));
	outFields->push(HX_("ELEMENT_ARRAY_BUFFER",09,05,53,3d));
	outFields->push(HX_("STATIC_DRAW",75,50,2f,ba));
	outFields->push(HX_("DYNAMIC_DRAW",24,04,1f,24));
	outFields->push(HX_("FRONT",89,50,7c,84));
	outFields->push(HX_("BACK",27,a2,d1,2b));
	outFields->push(HX_("FRONT_AND_BACK",a5,3d,6a,c1));
	outFields->push(HX_("TEXTURE_2D",16,0c,f8,a2));
	outFields->push(HX_("CULL_FACE",8a,a5,f4,cf));
	outFields->push(HX_("BLEND",31,20,e3,32));
	outFields->push(HX_("STENCIL_TEST",d5,dc,69,d5));
	outFields->push(HX_("DEPTH_TEST",6e,6c,25,28));
	outFields->push(HX_("SCISSOR_TEST",b5,be,51,59));
	outFields->push(HX_("CW",b4,3a,00,00));
	outFields->push(HX_("CCW",b7,11,33,00));
	outFields->push(HX_("MAX_TEXTURE_SIZE",e0,0b,5b,fb));
	outFields->push(HX_("UNSIGNED_BYTE",d2,79,6b,01));
	outFields->push(HX_("UNSIGNED_SHORT",52,9a,2e,fb));
	outFields->push(HX_("INT",cf,a8,37,00));
	outFields->push(HX_("FLOAT",7c,fd,84,80));
	outFields->push(HX_("ALPHA",3e,df,84,9f));
	outFields->push(HX_("RGBA",b4,98,69,36));
	outFields->push(HX_("FRAGMENT_SHADER",f4,26,78,e9));
	outFields->push(HX_("VERTEX_SHADER",e0,69,73,49));
	outFields->push(HX_("MAX_TEXTURE_IMAGE_UNITS",cc,6c,61,54));
	outFields->push(HX_("LINK_STATUS",17,18,8f,45));
	outFields->push(HX_("ACTIVE_UNIFORMS",98,7d,3a,2c));
	outFields->push(HX_("SHADING_LANGUAGE_VERSION",e6,c4,ef,70));
	outFields->push(HX_("NEVER",6c,76,1e,17));
	outFields->push(HX_("LESS",59,db,70,32));
	outFields->push(HX_("EQUAL",94,07,71,f0));
	outFields->push(HX_("LEQUAL",c8,73,90,53));
	outFields->push(HX_("GREATER",da,64,94,37));
	outFields->push(HX_("NOTEQUAL",c1,c1,e9,c8));
	outFields->push(HX_("GEQUAL",ed,a5,c7,53));
	outFields->push(HX_("ALWAYS",cf,ba,59,f9));
	outFields->push(HX_("KEEP",85,98,c7,31));
	outFields->push(HX_("REPLACE",14,1c,fc,2a));
	outFields->push(HX_("INCR",d4,fd,7b,30));
	outFields->push(HX_("DECR",70,18,27,2d));
	outFields->push(HX_("INVERT",16,93,5b,52));
	outFields->push(HX_("INCR_WRAP",55,7f,68,2c));
	outFields->push(HX_("DECR_WRAP",39,6f,eb,0a));
	outFields->push(HX_("VENDOR",88,91,19,51));
	outFields->push(HX_("RENDERER",43,55,61,0c));
	outFields->push(HX_("VERSION",f8,ba,c5,fc));
	outFields->push(HX_("NEAREST",3e,ec,9d,e5));
	outFields->push(HX_("LINEAR",e5,fd,22,9f));
	outFields->push(HX_("NEAREST_MIPMAP_NEAREST",68,b9,63,7e));
	outFields->push(HX_("LINEAR_MIPMAP_NEAREST",a1,9b,a4,65));
	outFields->push(HX_("NEAREST_MIPMAP_LINEAR",fb,83,f2,3b));
	outFields->push(HX_("LINEAR_MIPMAP_LINEAR",e2,8b,f8,99));
	outFields->push(HX_("TEXTURE_MAG_FILTER",88,ff,d5,1e));
	outFields->push(HX_("TEXTURE_MIN_FILTER",69,66,c2,46));
	outFields->push(HX_("TEXTURE_WRAP_S",a2,2d,c3,fe));
	outFields->push(HX_("TEXTURE_WRAP_T",a3,2d,c3,fe));
	outFields->push(HX_("TEXTURE_CUBE_MAP",36,7a,e1,ad));
	outFields->push(HX_("TEXTURE_CUBE_MAP_POSITIVE_X",bb,1c,ee,24));
	outFields->push(HX_("TEXTURE0",15,87,54,bf));
	outFields->push(HX_("REPEAT",5b,43,ff,b8));
	outFields->push(HX_("CLAMP_TO_EDGE",1d,fc,5a,96));
	outFields->push(HX_("COMPILE_STATUS",de,cb,4e,8c));
	outFields->push(HX_("FRAMEBUFFER",cd,20,84,50));
	outFields->push(HX_("RENDERBUFFER",d6,a4,a4,a9));
	outFields->push(HX_("DEPTH_COMPONENT16",26,cc,68,43));
	outFields->push(HX_("STENCIL_INDEX8",49,74,f3,27));
	outFields->push(HX_("COLOR_ATTACHMENT0",b1,9a,fe,86));
	outFields->push(HX_("DEPTH_ATTACHMENT",ff,54,cd,e9));
	outFields->push(HX_("STENCIL_ATTACHMENT",a6,8c,28,01));
	outFields->push(HX_("DEPTH_STENCIL_ATTACHMENT",c2,e1,e1,9f));
	outFields->push(HX_("NONE",b8,da,ca,33));
	outFields->push(HX_("FRAMEBUFFER_COMPLETE",ab,65,7d,ea));
	outFields->push(HX_("DEPTH24_STENCIL8",36,5e,b6,a6));
	outFields->push(HX_("type",ba,f2,08,4d));
	outFields->push(HX_("version",18,e7,f1,7c));
	outFields->push(HX_("__arrayBufferBinding",ec,c7,f6,4e));
	outFields->push(HX_("__elementBufferBinding",e9,54,64,1f));
	outFields->push(HX_("__contextID",6a,b8,28,45));
	outFields->push(HX_("__currentProgram",6b,4a,cd,35));
	outFields->push(HX_("__framebufferBinding",f8,60,08,ef));
	outFields->push(HX_("__initialized",f4,35,88,7f));
	outFields->push(HX_("__isContextLost",89,18,92,b5));
	outFields->push(HX_("__renderbufferBinding",ef,6d,e9,2f));
	outFields->push(HX_("__texture2DBinding",78,dc,16,4f));
	outFields->push(HX_("__textureCubeMapBinding",79,78,a4,c8));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo NativeOpenGLRenderContext_obj_sMemberStorageInfo[] = {
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DEPTH_BUFFER_BIT),HX_("DEPTH_BUFFER_BIT",ca,5b,ce,c6)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,STENCIL_BUFFER_BIT),HX_("STENCIL_BUFFER_BIT",71,93,29,de)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,COLOR_BUFFER_BIT),HX_("COLOR_BUFFER_BIT",6a,f7,74,fb)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TRIANGLES),HX_("TRIANGLES",8b,a0,99,7a)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ZERO),HX_("ZERO",28,d7,b1,3b)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ONE),HX_("ONE",46,36,3c,00)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SRC_COLOR),HX_("SRC_COLOR",48,9e,bd,5c)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ONE_MINUS_SRC_COLOR),HX_("ONE_MINUS_SRC_COLOR",20,3b,e1,48)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SRC_ALPHA),HX_("SRC_ALPHA",43,d4,f7,33)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ONE_MINUS_SRC_ALPHA),HX_("ONE_MINUS_SRC_ALPHA",1b,71,1b,20)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DST_ALPHA),HX_("DST_ALPHA",24,02,f2,d3)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ONE_MINUS_DST_ALPHA),HX_("ONE_MINUS_DST_ALPHA",fc,9e,15,c0)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DST_COLOR),HX_("DST_COLOR",29,cc,b7,fc)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ONE_MINUS_DST_COLOR),HX_("ONE_MINUS_DST_COLOR",01,69,db,e8)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FUNC_ADD),HX_("FUNC_ADD",46,78,17,75)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FUNC_REVERSE_SUBTRACT),HX_("FUNC_REVERSE_SUBTRACT",cc,8d,ef,f3)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ARRAY_BUFFER),HX_("ARRAY_BUFFER",46,66,17,f4)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ELEMENT_ARRAY_BUFFER),HX_("ELEMENT_ARRAY_BUFFER",09,05,53,3d)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,STATIC_DRAW),HX_("STATIC_DRAW",75,50,2f,ba)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DYNAMIC_DRAW),HX_("DYNAMIC_DRAW",24,04,1f,24)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FRONT),HX_("FRONT",89,50,7c,84)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,BACK),HX_("BACK",27,a2,d1,2b)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FRONT_AND_BACK),HX_("FRONT_AND_BACK",a5,3d,6a,c1)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_2D),HX_("TEXTURE_2D",16,0c,f8,a2)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,CULL_FACE),HX_("CULL_FACE",8a,a5,f4,cf)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,BLEND),HX_("BLEND",31,20,e3,32)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,STENCIL_TEST),HX_("STENCIL_TEST",d5,dc,69,d5)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DEPTH_TEST),HX_("DEPTH_TEST",6e,6c,25,28)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SCISSOR_TEST),HX_("SCISSOR_TEST",b5,be,51,59)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,CW),HX_("CW",b4,3a,00,00)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,CCW),HX_("CCW",b7,11,33,00)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_TEXTURE_SIZE),HX_("MAX_TEXTURE_SIZE",e0,0b,5b,fb)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNSIGNED_BYTE),HX_("UNSIGNED_BYTE",d2,79,6b,01)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNSIGNED_SHORT),HX_("UNSIGNED_SHORT",52,9a,2e,fb)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,INT),HX_("INT",cf,a8,37,00)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FLOAT),HX_("FLOAT",7c,fd,84,80)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ALPHA),HX_("ALPHA",3e,df,84,9f)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RGBA),HX_("RGBA",b4,98,69,36)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FRAGMENT_SHADER),HX_("FRAGMENT_SHADER",f4,26,78,e9)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,VERTEX_SHADER),HX_("VERTEX_SHADER",e0,69,73,49)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_TEXTURE_IMAGE_UNITS),HX_("MAX_TEXTURE_IMAGE_UNITS",cc,6c,61,54)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,LINK_STATUS),HX_("LINK_STATUS",17,18,8f,45)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ACTIVE_UNIFORMS),HX_("ACTIVE_UNIFORMS",98,7d,3a,2c)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SHADING_LANGUAGE_VERSION),HX_("SHADING_LANGUAGE_VERSION",e6,c4,ef,70)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,NEVER),HX_("NEVER",6c,76,1e,17)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,LESS),HX_("LESS",59,db,70,32)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,EQUAL),HX_("EQUAL",94,07,71,f0)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,LEQUAL),HX_("LEQUAL",c8,73,90,53)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,GREATER),HX_("GREATER",da,64,94,37)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,NOTEQUAL),HX_("NOTEQUAL",c1,c1,e9,c8)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,GEQUAL),HX_("GEQUAL",ed,a5,c7,53)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ALWAYS),HX_("ALWAYS",cf,ba,59,f9)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,KEEP),HX_("KEEP",85,98,c7,31)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,REPLACE),HX_("REPLACE",14,1c,fc,2a)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,INCR),HX_("INCR",d4,fd,7b,30)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DECR),HX_("DECR",70,18,27,2d)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,INVERT),HX_("INVERT",16,93,5b,52)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,INCR_WRAP),HX_("INCR_WRAP",55,7f,68,2c)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DECR_WRAP),HX_("DECR_WRAP",39,6f,eb,0a)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,VENDOR),HX_("VENDOR",88,91,19,51)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RENDERER),HX_("RENDERER",43,55,61,0c)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,VERSION),HX_("VERSION",f8,ba,c5,fc)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,NEAREST),HX_("NEAREST",3e,ec,9d,e5)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,LINEAR),HX_("LINEAR",e5,fd,22,9f)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,NEAREST_MIPMAP_NEAREST),HX_("NEAREST_MIPMAP_NEAREST",68,b9,63,7e)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,LINEAR_MIPMAP_NEAREST),HX_("LINEAR_MIPMAP_NEAREST",a1,9b,a4,65)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,NEAREST_MIPMAP_LINEAR),HX_("NEAREST_MIPMAP_LINEAR",fb,83,f2,3b)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,LINEAR_MIPMAP_LINEAR),HX_("LINEAR_MIPMAP_LINEAR",e2,8b,f8,99)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_MAG_FILTER),HX_("TEXTURE_MAG_FILTER",88,ff,d5,1e)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_MIN_FILTER),HX_("TEXTURE_MIN_FILTER",69,66,c2,46)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_WRAP_S),HX_("TEXTURE_WRAP_S",a2,2d,c3,fe)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_WRAP_T),HX_("TEXTURE_WRAP_T",a3,2d,c3,fe)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_CUBE_MAP),HX_("TEXTURE_CUBE_MAP",36,7a,e1,ad)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_CUBE_MAP_POSITIVE_X),HX_("TEXTURE_CUBE_MAP_POSITIVE_X",bb,1c,ee,24)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE0),HX_("TEXTURE0",15,87,54,bf)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,REPEAT),HX_("REPEAT",5b,43,ff,b8)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,CLAMP_TO_EDGE),HX_("CLAMP_TO_EDGE",1d,fc,5a,96)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,COMPILE_STATUS),HX_("COMPILE_STATUS",de,cb,4e,8c)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FRAMEBUFFER),HX_("FRAMEBUFFER",cd,20,84,50)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RENDERBUFFER),HX_("RENDERBUFFER",d6,a4,a4,a9)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DEPTH_COMPONENT16),HX_("DEPTH_COMPONENT16",26,cc,68,43)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,STENCIL_INDEX8),HX_("STENCIL_INDEX8",49,74,f3,27)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,COLOR_ATTACHMENT0),HX_("COLOR_ATTACHMENT0",b1,9a,fe,86)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DEPTH_ATTACHMENT),HX_("DEPTH_ATTACHMENT",ff,54,cd,e9)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,STENCIL_ATTACHMENT),HX_("STENCIL_ATTACHMENT",a6,8c,28,01)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DEPTH_STENCIL_ATTACHMENT),HX_("DEPTH_STENCIL_ATTACHMENT",c2,e1,e1,9f)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,NONE),HX_("NONE",b8,da,ca,33)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FRAMEBUFFER_COMPLETE),HX_("FRAMEBUFFER_COMPLETE",ab,65,7d,ea)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DEPTH24_STENCIL8),HX_("DEPTH24_STENCIL8",36,5e,b6,a6)},
	{::hx::fsString,(int)offsetof(NativeOpenGLRenderContext_obj,type),HX_("type",ba,f2,08,4d)},
	{::hx::fsFloat,(int)offsetof(NativeOpenGLRenderContext_obj,version),HX_("version",18,e7,f1,7c)},
	{::hx::fsObject /*  ::lime::graphics::opengl::GLObject */ ,(int)offsetof(NativeOpenGLRenderContext_obj,_hx___arrayBufferBinding),HX_("__arrayBufferBinding",ec,c7,f6,4e)},
	{::hx::fsObject /*  ::lime::graphics::opengl::GLObject */ ,(int)offsetof(NativeOpenGLRenderContext_obj,_hx___elementBufferBinding),HX_("__elementBufferBinding",e9,54,64,1f)},
	{::hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,_hx___contextID),HX_("__contextID",6a,b8,28,45)},
	{::hx::fsObject /*  ::lime::graphics::opengl::GLObject */ ,(int)offsetof(NativeOpenGLRenderContext_obj,_hx___currentProgram),HX_("__currentProgram",6b,4a,cd,35)},
	{::hx::fsObject /*  ::lime::graphics::opengl::GLObject */ ,(int)offsetof(NativeOpenGLRenderContext_obj,_hx___framebufferBinding),HX_("__framebufferBinding",f8,60,08,ef)},
	{::hx::fsBool,(int)offsetof(NativeOpenGLRenderContext_obj,_hx___initialized),HX_("__initialized",f4,35,88,7f)},
	{::hx::fsBool,(int)offsetof(NativeOpenGLRenderContext_obj,_hx___isContextLost),HX_("__isContextLost",89,18,92,b5)},
	{::hx::fsObject /*  ::lime::graphics::opengl::GLObject */ ,(int)offsetof(NativeOpenGLRenderContext_obj,_hx___renderbufferBinding),HX_("__renderbufferBinding",ef,6d,e9,2f)},
	{::hx::fsObject /*  ::lime::graphics::opengl::GLObject */ ,(int)offsetof(NativeOpenGLRenderContext_obj,_hx___texture2DBinding),HX_("__texture2DBinding",78,dc,16,4f)},
	{::hx::fsObject /*  ::lime::graphics::opengl::GLObject */ ,(int)offsetof(NativeOpenGLRenderContext_obj,_hx___textureCubeMapBinding),HX_("__textureCubeMapBinding",79,78,a4,c8)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo NativeOpenGLRenderContext_obj_sStaticStorageInfo[] = {
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(void *) &NativeOpenGLRenderContext_obj::_hx___extensionObjects,HX_("__extensionObjects",35,8e,af,ef)},
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(void *) &NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors,HX_("__extensionObjectConstructors",d7,1f,f7,9f)},
	{::hx::fsInt,(void *) &NativeOpenGLRenderContext_obj::_hx___lastContextID,HX_("__lastContextID",34,83,e7,9c)},
	{::hx::fsObject /* ::Array< ::String > */ ,(void *) &NativeOpenGLRenderContext_obj::_hx___supportedExtensions,HX_("__supportedExtensions",c2,2c,4a,37)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static ::String NativeOpenGLRenderContext_obj_sMemberFields[] = {
	HX_("DEPTH_BUFFER_BIT",ca,5b,ce,c6),
	HX_("STENCIL_BUFFER_BIT",71,93,29,de),
	HX_("COLOR_BUFFER_BIT",6a,f7,74,fb),
	HX_("TRIANGLES",8b,a0,99,7a),
	HX_("ZERO",28,d7,b1,3b),
	HX_("ONE",46,36,3c,00),
	HX_("SRC_COLOR",48,9e,bd,5c),
	HX_("ONE_MINUS_SRC_COLOR",20,3b,e1,48),
	HX_("SRC_ALPHA",43,d4,f7,33),
	HX_("ONE_MINUS_SRC_ALPHA",1b,71,1b,20),
	HX_("DST_ALPHA",24,02,f2,d3),
	HX_("ONE_MINUS_DST_ALPHA",fc,9e,15,c0),
	HX_("DST_COLOR",29,cc,b7,fc),
	HX_("ONE_MINUS_DST_COLOR",01,69,db,e8),
	HX_("FUNC_ADD",46,78,17,75),
	HX_("FUNC_REVERSE_SUBTRACT",cc,8d,ef,f3),
	HX_("ARRAY_BUFFER",46,66,17,f4),
	HX_("ELEMENT_ARRAY_BUFFER",09,05,53,3d),
	HX_("STATIC_DRAW",75,50,2f,ba),
	HX_("DYNAMIC_DRAW",24,04,1f,24),
	HX_("FRONT",89,50,7c,84),
	HX_("BACK",27,a2,d1,2b),
	HX_("FRONT_AND_BACK",a5,3d,6a,c1),
	HX_("TEXTURE_2D",16,0c,f8,a2),
	HX_("CULL_FACE",8a,a5,f4,cf),
	HX_("BLEND",31,20,e3,32),
	HX_("STENCIL_TEST",d5,dc,69,d5),
	HX_("DEPTH_TEST",6e,6c,25,28),
	HX_("SCISSOR_TEST",b5,be,51,59),
	HX_("CW",b4,3a,00,00),
	HX_("CCW",b7,11,33,00),
	HX_("MAX_TEXTURE_SIZE",e0,0b,5b,fb),
	HX_("UNSIGNED_BYTE",d2,79,6b,01),
	HX_("UNSIGNED_SHORT",52,9a,2e,fb),
	HX_("INT",cf,a8,37,00),
	HX_("FLOAT",7c,fd,84,80),
	HX_("ALPHA",3e,df,84,9f),
	HX_("RGBA",b4,98,69,36),
	HX_("FRAGMENT_SHADER",f4,26,78,e9),
	HX_("VERTEX_SHADER",e0,69,73,49),
	HX_("MAX_TEXTURE_IMAGE_UNITS",cc,6c,61,54),
	HX_("LINK_STATUS",17,18,8f,45),
	HX_("ACTIVE_UNIFORMS",98,7d,3a,2c),
	HX_("SHADING_LANGUAGE_VERSION",e6,c4,ef,70),
	HX_("NEVER",6c,76,1e,17),
	HX_("LESS",59,db,70,32),
	HX_("EQUAL",94,07,71,f0),
	HX_("LEQUAL",c8,73,90,53),
	HX_("GREATER",da,64,94,37),
	HX_("NOTEQUAL",c1,c1,e9,c8),
	HX_("GEQUAL",ed,a5,c7,53),
	HX_("ALWAYS",cf,ba,59,f9),
	HX_("KEEP",85,98,c7,31),
	HX_("REPLACE",14,1c,fc,2a),
	HX_("INCR",d4,fd,7b,30),
	HX_("DECR",70,18,27,2d),
	HX_("INVERT",16,93,5b,52),
	HX_("INCR_WRAP",55,7f,68,2c),
	HX_("DECR_WRAP",39,6f,eb,0a),
	HX_("VENDOR",88,91,19,51),
	HX_("RENDERER",43,55,61,0c),
	HX_("VERSION",f8,ba,c5,fc),
	HX_("NEAREST",3e,ec,9d,e5),
	HX_("LINEAR",e5,fd,22,9f),
	HX_("NEAREST_MIPMAP_NEAREST",68,b9,63,7e),
	HX_("LINEAR_MIPMAP_NEAREST",a1,9b,a4,65),
	HX_("NEAREST_MIPMAP_LINEAR",fb,83,f2,3b),
	HX_("LINEAR_MIPMAP_LINEAR",e2,8b,f8,99),
	HX_("TEXTURE_MAG_FILTER",88,ff,d5,1e),
	HX_("TEXTURE_MIN_FILTER",69,66,c2,46),
	HX_("TEXTURE_WRAP_S",a2,2d,c3,fe),
	HX_("TEXTURE_WRAP_T",a3,2d,c3,fe),
	HX_("TEXTURE_CUBE_MAP",36,7a,e1,ad),
	HX_("TEXTURE_CUBE_MAP_POSITIVE_X",bb,1c,ee,24),
	HX_("TEXTURE0",15,87,54,bf),
	HX_("REPEAT",5b,43,ff,b8),
	HX_("CLAMP_TO_EDGE",1d,fc,5a,96),
	HX_("COMPILE_STATUS",de,cb,4e,8c),
	HX_("FRAMEBUFFER",cd,20,84,50),
	HX_("RENDERBUFFER",d6,a4,a4,a9),
	HX_("DEPTH_COMPONENT16",26,cc,68,43),
	HX_("STENCIL_INDEX8",49,74,f3,27),
	HX_("COLOR_ATTACHMENT0",b1,9a,fe,86),
	HX_("DEPTH_ATTACHMENT",ff,54,cd,e9),
	HX_("STENCIL_ATTACHMENT",a6,8c,28,01),
	HX_("DEPTH_STENCIL_ATTACHMENT",c2,e1,e1,9f),
	HX_("NONE",b8,da,ca,33),
	HX_("FRAMEBUFFER_COMPLETE",ab,65,7d,ea),
	HX_("DEPTH24_STENCIL8",36,5e,b6,a6),
	HX_("type",ba,f2,08,4d),
	HX_("version",18,e7,f1,7c),
	HX_("__arrayBufferBinding",ec,c7,f6,4e),
	HX_("__elementBufferBinding",e9,54,64,1f),
	HX_("__contextID",6a,b8,28,45),
	HX_("__currentProgram",6b,4a,cd,35),
	HX_("__framebufferBinding",f8,60,08,ef),
	HX_("__initialized",f4,35,88,7f),
	HX_("__isContextLost",89,18,92,b5),
	HX_("__renderbufferBinding",ef,6d,e9,2f),
	HX_("__texture2DBinding",78,dc,16,4f),
	HX_("__textureCubeMapBinding",79,78,a4,c8),
	HX_("getParameter",33,d2,06,58),
	::String(null()) };

static void NativeOpenGLRenderContext_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(NativeOpenGLRenderContext_obj::_hx___extensionObjects,"__extensionObjects");
	HX_MARK_MEMBER_NAME(NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors,"__extensionObjectConstructors");
	HX_MARK_MEMBER_NAME(NativeOpenGLRenderContext_obj::_hx___lastContextID,"__lastContextID");
	HX_MARK_MEMBER_NAME(NativeOpenGLRenderContext_obj::_hx___supportedExtensions,"__supportedExtensions");
};

#ifdef HXCPP_VISIT_ALLOCS
static void NativeOpenGLRenderContext_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(NativeOpenGLRenderContext_obj::_hx___extensionObjects,"__extensionObjects");
	HX_VISIT_MEMBER_NAME(NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors,"__extensionObjectConstructors");
	HX_VISIT_MEMBER_NAME(NativeOpenGLRenderContext_obj::_hx___lastContextID,"__lastContextID");
	HX_VISIT_MEMBER_NAME(NativeOpenGLRenderContext_obj::_hx___supportedExtensions,"__supportedExtensions");
};

#endif

::hx::Class NativeOpenGLRenderContext_obj::__mClass;

static ::String NativeOpenGLRenderContext_obj_sStaticFields[] = {
	HX_("__extensionObjects",35,8e,af,ef),
	HX_("__extensionObjectConstructors",d7,1f,f7,9f),
	HX_("__lastContextID",34,83,e7,9c),
	HX_("__supportedExtensions",c2,2c,4a,37),
	::String(null())
};

void NativeOpenGLRenderContext_obj::__register()
{
	NativeOpenGLRenderContext_obj _hx_dummy;
	NativeOpenGLRenderContext_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("lime._internal.backend.native.NativeOpenGLRenderContext",a1,fb,a1,9c);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &NativeOpenGLRenderContext_obj::__GetStatic;
	__mClass->mSetStaticField = &NativeOpenGLRenderContext_obj::__SetStatic;
	__mClass->mMarkFunc = NativeOpenGLRenderContext_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(NativeOpenGLRenderContext_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(NativeOpenGLRenderContext_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< NativeOpenGLRenderContext_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = NativeOpenGLRenderContext_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = NativeOpenGLRenderContext_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = NativeOpenGLRenderContext_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void NativeOpenGLRenderContext_obj::__boot()
{
{
            	HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_39_boot)
HXDLIN(  39)		_hx___extensionObjectConstructors =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
            	}
{
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_40_boot)
HXDLIN(  40)		_hx___lastContextID = 0;
            	}
}

} // end namespace lime
} // end namespace _internal
} // end namespace backend
} // end namespace native
